[{"display_html":"<a href=\"#v:atomicModifyIORefCAS\">atomicModifyIORefCAS</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> a -&gt; (a -&gt; (a, b)) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> b","name":"atomicModifyIORefCAS","module":"Streamly.Internal.Data.Atomics","link":"Streamly-Internal-Data-Atomics.html#v:atomicModifyIORefCAS"},{"display_html":"<a href=\"#v:atomicModifyIORefCAS_\">atomicModifyIORefCAS_</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> t -&gt; (t -&gt; t) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"atomicModifyIORefCAS_","module":"Streamly.Internal.Data.Atomics","link":"Streamly-Internal-Data-Atomics.html#v:atomicModifyIORefCAS_"},{"display_html":"<a href=\"#v:writeBarrier\">writeBarrier</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"writeBarrier","module":"Streamly.Internal.Data.Atomics","link":"Streamly-Internal-Data-Atomics.html#v:writeBarrier"},{"display_html":"<a href=\"#v:storeLoadBarrier\">storeLoadBarrier</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"storeLoadBarrier","module":"Streamly.Internal.Data.Atomics","link":"Streamly-Internal-Data-Atomics.html#v:storeLoadBarrier"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Sink\">Sink</a> m a = <a href=\"#v:Sink\">Sink</a> (a -&gt; m ())","name":"Sink Sink","module":"Streamly.Internal.Data.Sink.Types","link":"Streamly-Internal-Data-Sink-Types.html#t:Sink"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Tuple-39-\">Tuple'</a> a b = <a href=\"#v:Tuple-39-\">Tuple'</a> !a !b","name":"Tuple' Tuple'","module":"Streamly.Internal.Data.Strict","link":"Streamly-Internal-Data-Strict.html#t:Tuple-39-"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Tuple3-39-\">Tuple3'</a> a b c = <a href=\"#v:Tuple3-39-\">Tuple3'</a> !a !b !c","name":"Tuple3' Tuple3'","module":"Streamly.Internal.Data.Strict","link":"Streamly-Internal-Data-Strict.html#t:Tuple3-39-"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Tuple4-39-\">Tuple4'</a> a b c d = <a href=\"#v:Tuple4-39-\">Tuple4'</a> !a !b !c !d","name":"Tuple4' Tuple4'","module":"Streamly.Internal.Data.Strict","link":"Streamly-Internal-Data-Strict.html#t:Tuple4-39-"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Maybe-39-\">Maybe'</a> a<ul class=\"subs\"><li>= <a href=\"#v:Just-39-\">Just'</a> !a</li><li>| <a href=\"#v:Nothing-39-\">Nothing'</a></li></ul>","name":"Maybe' Just' Nothing'","module":"Streamly.Internal.Data.Strict","link":"Streamly-Internal-Data-Strict.html#t:Maybe-39-"},{"display_html":"<a href=\"#v:fromStrictMaybe\">fromStrictMaybe</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Strict.html#t:Maybe-39-\" title=\"Streamly.Internal.Data.Strict\">Maybe'</a> a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"fromStrictMaybe","module":"Streamly.Internal.Data.Strict","link":"Streamly-Internal-Data-Strict.html#v:fromStrictMaybe"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Either-39-\">Either'</a> a b<ul class=\"subs\"><li>= <a href=\"#v:Left-39-\">Left'</a> !a</li><li>| <a href=\"#v:Right-39-\">Right'</a> !b</li></ul>","name":"Either' Left' Right'","module":"Streamly.Internal.Data.Strict","link":"Streamly-Internal-Data-Strict.html#t:Either-39-"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Step\">Step</a> s a<ul class=\"subs\"><li>= <a href=\"#v:Yield\">Yield</a> a s</li><li>| <a href=\"#v:Continue\">Continue</a> s</li></ul>","name":"Step Yield Continue","module":"Streamly.Internal.Data.Pipe.Types","link":"Streamly-Internal-Data-Pipe-Types.html#t:Step"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Pipe\">Pipe</a> m a b = <a href=\"#v:Pipe\">Pipe</a> (s1 -&gt; a -&gt; m (<a href=\"Streamly-Internal-Data-Pipe-Types.html#t:Step\" title=\"Streamly.Internal.Data.Pipe.Types\">Step</a> (<a href=\"Streamly-Internal-Data-Pipe-Types.html#t:PipeState\" title=\"Streamly.Internal.Data.Pipe.Types\">PipeState</a> s1 s2) b)) (s2 -&gt; m (<a href=\"Streamly-Internal-Data-Pipe-Types.html#t:Step\" title=\"Streamly.Internal.Data.Pipe.Types\">Step</a> (<a href=\"Streamly-Internal-Data-Pipe-Types.html#t:PipeState\" title=\"Streamly.Internal.Data.Pipe.Types\">PipeState</a> s1 s2) b)) s1","name":"Pipe Pipe","module":"Streamly.Internal.Data.Pipe.Types","link":"Streamly-Internal-Data-Pipe-Types.html#t:Pipe"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:PipeState\">PipeState</a> s1 s2<ul class=\"subs\"><li>= <a href=\"#v:Consume\">Consume</a> s1</li><li>| <a href=\"#v:Produce\">Produce</a> s2</li></ul>","name":"PipeState Consume Produce","module":"Streamly.Internal.Data.Pipe.Types","link":"Streamly-Internal-Data-Pipe-Types.html#t:PipeState"},{"display_html":"<a href=\"#v:zipWith\">zipWith</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; b -&gt; c) -&gt; <a href=\"Streamly-Internal-Data-Pipe-Types.html#t:Pipe\" title=\"Streamly.Internal.Data.Pipe.Types\">Pipe</a> m i a -&gt; <a href=\"Streamly-Internal-Data-Pipe-Types.html#t:Pipe\" title=\"Streamly.Internal.Data.Pipe.Types\">Pipe</a> m i b -&gt; <a href=\"Streamly-Internal-Data-Pipe-Types.html#t:Pipe\" title=\"Streamly.Internal.Data.Pipe.Types\">Pipe</a> m i c","name":"zipWith","module":"Streamly.Internal.Data.Pipe.Types","link":"Streamly-Internal-Data-Pipe-Types.html#v:zipWith"},{"display_html":"<a href=\"#v:tee\">tee</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Pipe-Types.html#t:Pipe\" title=\"Streamly.Internal.Data.Pipe.Types\">Pipe</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Pipe-Types.html#t:Pipe\" title=\"Streamly.Internal.Data.Pipe.Types\">Pipe</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Pipe-Types.html#t:Pipe\" title=\"Streamly.Internal.Data.Pipe.Types\">Pipe</a> m a b","name":"tee","module":"Streamly.Internal.Data.Pipe.Types","link":"Streamly-Internal-Data-Pipe-Types.html#v:tee"},{"display_html":"<a href=\"#v:map\">map</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; b) -&gt; <a href=\"Streamly-Internal-Data-Pipe-Types.html#t:Pipe\" title=\"Streamly.Internal.Data.Pipe.Types\">Pipe</a> m a b","name":"map","module":"Streamly.Internal.Data.Pipe.Types","link":"Streamly-Internal-Data-Pipe-Types.html#v:map"},{"display_html":"<a href=\"#v:compose\">compose</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Pipe-Types.html#t:Pipe\" title=\"Streamly.Internal.Data.Pipe.Types\">Pipe</a> m b c -&gt; <a href=\"Streamly-Internal-Data-Pipe-Types.html#t:Pipe\" title=\"Streamly.Internal.Data.Pipe.Types\">Pipe</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Pipe-Types.html#t:Pipe\" title=\"Streamly.Internal.Data.Pipe.Types\">Pipe</a> m a c","name":"compose","module":"Streamly.Internal.Data.Pipe.Types","link":"Streamly-Internal-Data-Pipe-Types.html#v:compose"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Pipe\">Pipe</a> m a b","name":"Pipe","module":"Streamly.Internal.Data.Pipe","link":"Streamly-Internal-Data-Pipe.html#t:Pipe"},{"display_html":"<a href=\"#v:map\">map</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; b) -&gt; <a href=\"Streamly-Internal-Data-Pipe.html#t:Pipe\" title=\"Streamly.Internal.Data.Pipe\">Pipe</a> m a b","name":"map","module":"Streamly.Internal.Data.Pipe","link":"Streamly-Internal-Data-Pipe.html#v:map"},{"display_html":"<a href=\"#v:mapM\">mapM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m b) -&gt; <a href=\"Streamly-Internal-Data-Pipe.html#t:Pipe\" title=\"Streamly.Internal.Data.Pipe\">Pipe</a> m a b","name":"mapM","module":"Streamly.Internal.Data.Pipe","link":"Streamly-Internal-Data-Pipe.html#v:mapM"},{"display_html":"<a href=\"#v:tee\">tee</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Pipe.html#t:Pipe\" title=\"Streamly.Internal.Data.Pipe\">Pipe</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Pipe.html#t:Pipe\" title=\"Streamly.Internal.Data.Pipe\">Pipe</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Pipe.html#t:Pipe\" title=\"Streamly.Internal.Data.Pipe\">Pipe</a> m a b","name":"tee","module":"Streamly.Internal.Data.Pipe","link":"Streamly-Internal-Data-Pipe.html#v:tee"},{"display_html":"<a href=\"#v:zipWith\">zipWith</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; b -&gt; c) -&gt; <a href=\"Streamly-Internal-Data-Pipe.html#t:Pipe\" title=\"Streamly.Internal.Data.Pipe\">Pipe</a> m i a -&gt; <a href=\"Streamly-Internal-Data-Pipe.html#t:Pipe\" title=\"Streamly.Internal.Data.Pipe\">Pipe</a> m i b -&gt; <a href=\"Streamly-Internal-Data-Pipe.html#t:Pipe\" title=\"Streamly.Internal.Data.Pipe\">Pipe</a> m i c","name":"zipWith","module":"Streamly.Internal.Data.Pipe","link":"Streamly-Internal-Data-Pipe.html#v:zipWith"},{"display_html":"<a href=\"#v:compose\">compose</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Pipe.html#t:Pipe\" title=\"Streamly.Internal.Data.Pipe\">Pipe</a> m b c -&gt; <a href=\"Streamly-Internal-Data-Pipe.html#t:Pipe\" title=\"Streamly.Internal.Data.Pipe\">Pipe</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Pipe.html#t:Pipe\" title=\"Streamly.Internal.Data.Pipe\">Pipe</a> m a c","name":"compose","module":"Streamly.Internal.Data.Pipe","link":"Streamly-Internal-Data-Pipe.html#v:compose"},{"display_html":"<a href=\"#v:periodic\">periodic</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> () -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"periodic","module":"Streamly.Internal.Data.Time","link":"Streamly-Internal-Data-Time.html#v:periodic"},{"display_html":"<a href=\"#v:withClock\">withClock</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"withClock","module":"Streamly.Internal.Data.Time","link":"Streamly-Internal-Data-Time.html#v:withClock"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:TimeUnit\">TimeUnit</a> a","name":"TimeUnit","module":"Streamly.Internal.Data.Time.Units","link":"Streamly-Internal-Data-Time-Units.html#t:TimeUnit"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:TimeUnit64\">TimeUnit64</a> a","name":"TimeUnit64","module":"Streamly.Internal.Data.Time.Units","link":"Streamly-Internal-Data-Time-Units.html#t:TimeUnit64"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TimeSpec\">TimeSpec</a> = <a href=\"#v:TimeSpec\">TimeSpec</a> {<ul class=\"subs\"><li><a href=\"#v:sec\">sec</a> :: !<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int64\" title=\"Data.Int\">Int64</a></li><li><a href=\"#v:nsec\">nsec</a> :: !<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int64\" title=\"Data.Int\">Int64</a></li></ul>}","name":"TimeSpec TimeSpec sec nsec","module":"Streamly.Internal.Data.Time.Units","link":"Streamly-Internal-Data-Time-Units.html#t:TimeSpec"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:NanoSecond64\">NanoSecond64</a> = <a href=\"#v:NanoSecond64\">NanoSecond64</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int64\" title=\"Data.Int\">Int64</a>","name":"NanoSecond64 NanoSecond64","module":"Streamly.Internal.Data.Time.Units","link":"Streamly-Internal-Data-Time-Units.html#t:NanoSecond64"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:MicroSecond64\">MicroSecond64</a> = <a href=\"#v:MicroSecond64\">MicroSecond64</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int64\" title=\"Data.Int\">Int64</a>","name":"MicroSecond64 MicroSecond64","module":"Streamly.Internal.Data.Time.Units","link":"Streamly-Internal-Data-Time-Units.html#t:MicroSecond64"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:MilliSecond64\">MilliSecond64</a> = <a href=\"#v:MilliSecond64\">MilliSecond64</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int64\" title=\"Data.Int\">Int64</a>","name":"MilliSecond64 MilliSecond64","module":"Streamly.Internal.Data.Time.Units","link":"Streamly-Internal-Data-Time-Units.html#t:MilliSecond64"},{"display_html":"<a href=\"#v:showNanoSecond64\">showNanoSecond64</a> :: <a href=\"Streamly-Internal-Data-Time-Units.html#t:NanoSecond64\" title=\"Streamly.Internal.Data.Time.Units\">NanoSecond64</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"showNanoSecond64","module":"Streamly.Internal.Data.Time.Units","link":"Streamly-Internal-Data-Time-Units.html#v:showNanoSecond64"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:AbsTime\">AbsTime</a> = <a href=\"#v:AbsTime\">AbsTime</a> <a href=\"Streamly-Internal-Data-Time-Units.html#t:TimeSpec\" title=\"Streamly.Internal.Data.Time.Units\">TimeSpec</a>","name":"AbsTime AbsTime","module":"Streamly.Internal.Data.Time.Units","link":"Streamly-Internal-Data-Time-Units.html#t:AbsTime"},{"display_html":"<a href=\"#v:toAbsTime\">toAbsTime</a> :: <a href=\"Streamly-Internal-Data-Time-Units.html#t:TimeUnit\" title=\"Streamly.Internal.Data.Time.Units\">TimeUnit</a> a =&gt; a -&gt; <a href=\"Streamly-Internal-Data-Time-Units.html#t:AbsTime\" title=\"Streamly.Internal.Data.Time.Units\">AbsTime</a>","name":"toAbsTime","module":"Streamly.Internal.Data.Time.Units","link":"Streamly-Internal-Data-Time-Units.html#v:toAbsTime"},{"display_html":"<a href=\"#v:fromAbsTime\">fromAbsTime</a> :: <a href=\"Streamly-Internal-Data-Time-Units.html#t:TimeUnit\" title=\"Streamly.Internal.Data.Time.Units\">TimeUnit</a> a =&gt; <a href=\"Streamly-Internal-Data-Time-Units.html#t:AbsTime\" title=\"Streamly.Internal.Data.Time.Units\">AbsTime</a> -&gt; a","name":"fromAbsTime","module":"Streamly.Internal.Data.Time.Units","link":"Streamly-Internal-Data-Time-Units.html#v:fromAbsTime"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:RelTime\">RelTime</a>","name":"RelTime","module":"Streamly.Internal.Data.Time.Units","link":"Streamly-Internal-Data-Time-Units.html#t:RelTime"},{"display_html":"<a href=\"#v:toRelTime\">toRelTime</a> :: <a href=\"Streamly-Internal-Data-Time-Units.html#t:TimeUnit\" title=\"Streamly.Internal.Data.Time.Units\">TimeUnit</a> a =&gt; a -&gt; <a href=\"Streamly-Internal-Data-Time-Units.html#t:RelTime\" title=\"Streamly.Internal.Data.Time.Units\">RelTime</a>","name":"toRelTime","module":"Streamly.Internal.Data.Time.Units","link":"Streamly-Internal-Data-Time-Units.html#v:toRelTime"},{"display_html":"<a href=\"#v:fromRelTime\">fromRelTime</a> :: <a href=\"Streamly-Internal-Data-Time-Units.html#t:TimeUnit\" title=\"Streamly.Internal.Data.Time.Units\">TimeUnit</a> a =&gt; <a href=\"Streamly-Internal-Data-Time-Units.html#t:RelTime\" title=\"Streamly.Internal.Data.Time.Units\">RelTime</a> -&gt; a","name":"fromRelTime","module":"Streamly.Internal.Data.Time.Units","link":"Streamly-Internal-Data-Time-Units.html#v:fromRelTime"},{"display_html":"<a href=\"#v:diffAbsTime\">diffAbsTime</a> :: <a href=\"Streamly-Internal-Data-Time-Units.html#t:AbsTime\" title=\"Streamly.Internal.Data.Time.Units\">AbsTime</a> -&gt; <a href=\"Streamly-Internal-Data-Time-Units.html#t:AbsTime\" title=\"Streamly.Internal.Data.Time.Units\">AbsTime</a> -&gt; <a href=\"Streamly-Internal-Data-Time-Units.html#t:RelTime\" title=\"Streamly.Internal.Data.Time.Units\">RelTime</a>","name":"diffAbsTime","module":"Streamly.Internal.Data.Time.Units","link":"Streamly-Internal-Data-Time-Units.html#v:diffAbsTime"},{"display_html":"<a href=\"#v:addToAbsTime\">addToAbsTime</a> :: <a href=\"Streamly-Internal-Data-Time-Units.html#t:AbsTime\" title=\"Streamly.Internal.Data.Time.Units\">AbsTime</a> -&gt; <a href=\"Streamly-Internal-Data-Time-Units.html#t:RelTime\" title=\"Streamly.Internal.Data.Time.Units\">RelTime</a> -&gt; <a href=\"Streamly-Internal-Data-Time-Units.html#t:AbsTime\" title=\"Streamly.Internal.Data.Time.Units\">AbsTime</a>","name":"addToAbsTime","module":"Streamly.Internal.Data.Time.Units","link":"Streamly-Internal-Data-Time-Units.html#v:addToAbsTime"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:RelTime64\">RelTime64</a>","name":"RelTime64","module":"Streamly.Internal.Data.Time.Units","link":"Streamly-Internal-Data-Time-Units.html#t:RelTime64"},{"display_html":"<a href=\"#v:toRelTime64\">toRelTime64</a> :: <a href=\"Streamly-Internal-Data-Time-Units.html#t:TimeUnit64\" title=\"Streamly.Internal.Data.Time.Units\">TimeUnit64</a> a =&gt; a -&gt; <a href=\"Streamly-Internal-Data-Time-Units.html#t:RelTime64\" title=\"Streamly.Internal.Data.Time.Units\">RelTime64</a>","name":"toRelTime64","module":"Streamly.Internal.Data.Time.Units","link":"Streamly-Internal-Data-Time-Units.html#v:toRelTime64"},{"display_html":"<a href=\"#v:fromRelTime64\">fromRelTime64</a> :: <a href=\"Streamly-Internal-Data-Time-Units.html#t:TimeUnit64\" title=\"Streamly.Internal.Data.Time.Units\">TimeUnit64</a> a =&gt; <a href=\"Streamly-Internal-Data-Time-Units.html#t:RelTime64\" title=\"Streamly.Internal.Data.Time.Units\">RelTime64</a> -&gt; a","name":"fromRelTime64","module":"Streamly.Internal.Data.Time.Units","link":"Streamly-Internal-Data-Time-Units.html#v:fromRelTime64"},{"display_html":"<a href=\"#v:diffAbsTime64\">diffAbsTime64</a> :: <a href=\"Streamly-Internal-Data-Time-Units.html#t:AbsTime\" title=\"Streamly.Internal.Data.Time.Units\">AbsTime</a> -&gt; <a href=\"Streamly-Internal-Data-Time-Units.html#t:AbsTime\" title=\"Streamly.Internal.Data.Time.Units\">AbsTime</a> -&gt; <a href=\"Streamly-Internal-Data-Time-Units.html#t:RelTime64\" title=\"Streamly.Internal.Data.Time.Units\">RelTime64</a>","name":"diffAbsTime64","module":"Streamly.Internal.Data.Time.Units","link":"Streamly-Internal-Data-Time-Units.html#v:diffAbsTime64"},{"display_html":"<a href=\"#v:addToAbsTime64\">addToAbsTime64</a> :: <a href=\"Streamly-Internal-Data-Time-Units.html#t:AbsTime\" title=\"Streamly.Internal.Data.Time.Units\">AbsTime</a> -&gt; <a href=\"Streamly-Internal-Data-Time-Units.html#t:RelTime64\" title=\"Streamly.Internal.Data.Time.Units\">RelTime64</a> -&gt; <a href=\"Streamly-Internal-Data-Time-Units.html#t:AbsTime\" title=\"Streamly.Internal.Data.Time.Units\">AbsTime</a>","name":"addToAbsTime64","module":"Streamly.Internal.Data.Time.Units","link":"Streamly-Internal-Data-Time-Units.html#v:addToAbsTime64"},{"display_html":"<a href=\"#v:showRelTime64\">showRelTime64</a> :: <a href=\"Streamly-Internal-Data-Time-Units.html#t:RelTime64\" title=\"Streamly.Internal.Data.Time.Units\">RelTime64</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"showRelTime64","module":"Streamly.Internal.Data.Time.Units","link":"Streamly-Internal-Data-Time-Units.html#v:showRelTime64"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Clock\">Clock</a><ul class=\"subs\"><li>= <a href=\"#v:Monotonic\">Monotonic</a></li><li>| <a href=\"#v:Realtime\">Realtime</a></li><li>| <a href=\"#v:ProcessCPUTime\">ProcessCPUTime</a></li><li>| <a href=\"#v:ThreadCPUTime\">ThreadCPUTime</a></li><li>| <a href=\"#v:MonotonicRaw\">MonotonicRaw</a></li><li>| <a href=\"#v:MonotonicCoarse\">MonotonicCoarse</a></li><li>| <a href=\"#v:Uptime\">Uptime</a></li></ul>","name":"Clock Monotonic Realtime ProcessCPUTime ThreadCPUTime MonotonicRaw MonotonicCoarse Uptime","module":"Streamly.Internal.Data.Time.Clock","link":"Streamly-Internal-Data-Time-Clock.html#t:Clock"},{"display_html":"<a href=\"#v:getTime\">getTime</a> :: <a href=\"Streamly-Internal-Data-Time-Clock.html#t:Clock\" title=\"Streamly.Internal.Data.Time.Clock\">Clock</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"Streamly-Internal-Data-Time-Units.html#t:AbsTime\" title=\"Streamly.Internal.Data.Time.Units\">AbsTime</a>","name":"getTime","module":"Streamly.Internal.Data.Time.Clock","link":"Streamly-Internal-Data-Time-Clock.html#v:getTime"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:MonadAsync\">MonadAsync</a> m = (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, MonadBaseControl <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> m, MonadThrow m)","name":"MonadAsync","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#t:MonadAsync"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SVarStyle\">SVarStyle</a><ul class=\"subs\"><li>= <a href=\"#v:AsyncVar\">AsyncVar</a></li><li>| <a href=\"#v:WAsyncVar\">WAsyncVar</a></li><li>| <a href=\"#v:ParallelVar\">ParallelVar</a></li><li>| <a href=\"#v:AheadVar\">AheadVar</a></li></ul>","name":"SVarStyle AsyncVar WAsyncVar ParallelVar AheadVar","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#t:SVarStyle"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SVarStopStyle\">SVarStopStyle</a><ul class=\"subs\"><li>= <a href=\"#v:StopNone\">StopNone</a></li><li>| <a href=\"#v:StopAny\">StopAny</a></li><li>| <a href=\"#v:StopBy\">StopBy</a></li></ul>","name":"SVarStopStyle StopNone StopAny StopBy","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#t:SVarStopStyle"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SVar\">SVar</a> t m a = <a href=\"#v:SVar\">SVar</a> {<ul class=\"subs\"><li><a href=\"#v:svarStyle\">svarStyle</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:SVarStyle\" title=\"Streamly.Internal.Data.SVar\">SVarStyle</a></li><li><a href=\"#v:svarMrun\">svarMrun</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:RunInIO\" title=\"Streamly.Internal.Data.SVar\">RunInIO</a> m</li><li><a href=\"#v:svarStopStyle\">svarStopStyle</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:SVarStopStyle\" title=\"Streamly.Internal.Data.SVar\">SVarStopStyle</a></li><li><a href=\"#v:svarStopBy\">svarStopBy</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Concurrent.html#t:ThreadId\" title=\"Control.Concurrent\">ThreadId</a></li><li><a href=\"#v:outputQueue\">outputQueue</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> ([<a href=\"Streamly-Internal-Data-SVar.html#t:ChildEvent\" title=\"Streamly.Internal.Data.SVar\">ChildEvent</a> a], <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>)</li><li><a href=\"#v:outputDoorBell\">outputDoorBell</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Concurrent-MVar.html#t:MVar\" title=\"Control.Concurrent.MVar\">MVar</a> ()</li><li><a href=\"#v:readOutputQ\">readOutputQ</a> :: m [<a href=\"Streamly-Internal-Data-SVar.html#t:ChildEvent\" title=\"Streamly.Internal.Data.SVar\">ChildEvent</a> a]</li><li><a href=\"#v:postProcess\">postProcess</a> :: m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:maxWorkerLimit\">maxWorkerLimit</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:Limit\" title=\"Streamly.Internal.Data.SVar\">Limit</a></li><li><a href=\"#v:maxBufferLimit\">maxBufferLimit</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:Limit\" title=\"Streamly.Internal.Data.SVar\">Limit</a></li><li><a href=\"#v:pushBufferSpace\">pushBufferSpace</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> Count</li><li><a href=\"#v:pushBufferPolicy\">pushBufferPolicy</a> :: PushBufferPolicy</li><li><a href=\"#v:pushBufferMVar\">pushBufferMVar</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Concurrent-MVar.html#t:MVar\" title=\"Control.Concurrent.MVar\">MVar</a> ()</li><li><a href=\"#v:remainingWork\">remainingWork</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> Count)</li><li><a href=\"#v:yieldRateInfo\">yieldRateInfo</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"Streamly-Internal-Data-SVar.html#t:YieldRateInfo\" title=\"Streamly.Internal.Data.SVar\">YieldRateInfo</a></li><li><a href=\"#v:enqueue\">enqueue</a> :: t m a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()</li><li><a href=\"#v:isWorkDone\">isWorkDone</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:isQueueDone\">isQueueDone</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:needDoorBell\">needDoorBell</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:workLoop\">workLoop</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"Streamly-Internal-Data-SVar.html#t:WorkerInfo\" title=\"Streamly.Internal.Data.SVar\">WorkerInfo</a> -&gt; m ()</li><li><a href=\"#v:workerThreads\">workerThreads</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> (<a href=\"https://hackage.haskell.org/package/containers-0.6.0.1/docs/Data-Set.html#t:Set\" title=\"Data.Set\">Set</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Concurrent.html#t:ThreadId\" title=\"Control.Concurrent\">ThreadId</a>)</li><li><a href=\"#v:workerCount\">workerCount</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li><li><a href=\"#v:accountThread\">accountThread</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Concurrent.html#t:ThreadId\" title=\"Control.Concurrent\">ThreadId</a> -&gt; m ()</li><li><a href=\"#v:workerStopMVar\">workerStopMVar</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Concurrent-MVar.html#t:MVar\" title=\"Control.Concurrent.MVar\">MVar</a> ()</li><li><a href=\"#v:svarStats\">svarStats</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:SVarStats\" title=\"Streamly.Internal.Data.SVar\">SVarStats</a></li><li><a href=\"#v:svarRef\">svarRef</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> ())</li><li><a href=\"#v:svarInspectMode\">svarInspectMode</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:svarCreator\">svarCreator</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Concurrent.html#t:ThreadId\" title=\"Control.Concurrent\">ThreadId</a></li><li><a href=\"#v:outputHeap\">outputHeap</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> (Heap (Entry <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> (<a href=\"Streamly-Internal-Data-SVar.html#t:AheadHeapEntry\" title=\"Streamly.Internal.Data.SVar\">AheadHeapEntry</a> t m a)), <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>)</li><li><a href=\"#v:aheadWorkQueue\">aheadWorkQueue</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> ([t m a], <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>)</li></ul>}","name":"SVar SVar svarStyle svarMrun svarStopStyle svarStopBy outputQueue outputDoorBell readOutputQ postProcess maxWorkerLimit maxBufferLimit pushBufferSpace pushBufferPolicy pushBufferMVar remainingWork yieldRateInfo enqueue isWorkDone isQueueDone needDoorBell workLoop workerThreads workerCount accountThread workerStopMVar svarStats svarRef svarInspectMode svarCreator outputHeap aheadWorkQueue","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#t:SVar"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Limit\">Limit</a><ul class=\"subs\"><li>= <a href=\"#v:Unlimited\">Unlimited</a></li><li>| <a href=\"#v:Limited\">Limited</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word\" title=\"Data.Word\">Word</a></li></ul>","name":"Limit Unlimited Limited","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#t:Limit"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:State\">State</a> t m a","name":"State streamVar","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#t:State"},{"display_html":"<a href=\"#v:defState\">defState</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:State\" title=\"Streamly.Internal.Data.SVar\">State</a> t m a","name":"defState","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:defState"},{"display_html":"<a href=\"#v:adaptState\">adaptState</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:State\" title=\"Streamly.Internal.Data.SVar\">State</a> t m a -&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:State\" title=\"Streamly.Internal.Data.SVar\">State</a> t n b","name":"adaptState","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:adaptState"},{"display_html":"<a href=\"#v:getMaxThreads\">getMaxThreads</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:State\" title=\"Streamly.Internal.Data.SVar\">State</a> t m a -&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:Limit\" title=\"Streamly.Internal.Data.SVar\">Limit</a>","name":"getMaxThreads","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:getMaxThreads"},{"display_html":"<a href=\"#v:setMaxThreads\">setMaxThreads</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:State\" title=\"Streamly.Internal.Data.SVar\">State</a> t m a -&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:State\" title=\"Streamly.Internal.Data.SVar\">State</a> t m a","name":"setMaxThreads","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:setMaxThreads"},{"display_html":"<a href=\"#v:getMaxBuffer\">getMaxBuffer</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:State\" title=\"Streamly.Internal.Data.SVar\">State</a> t m a -&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:Limit\" title=\"Streamly.Internal.Data.SVar\">Limit</a>","name":"getMaxBuffer","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:getMaxBuffer"},{"display_html":"<a href=\"#v:setMaxBuffer\">setMaxBuffer</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:State\" title=\"Streamly.Internal.Data.SVar\">State</a> t m a -&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:State\" title=\"Streamly.Internal.Data.SVar\">State</a> t m a","name":"setMaxBuffer","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:setMaxBuffer"},{"display_html":"<a href=\"#v:getStreamRate\">getStreamRate</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:State\" title=\"Streamly.Internal.Data.SVar\">State</a> t m a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"Streamly-Internal-Data-SVar.html#t:Rate\" title=\"Streamly.Internal.Data.SVar\">Rate</a>","name":"getStreamRate","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:getStreamRate"},{"display_html":"<a href=\"#v:setStreamRate\">setStreamRate</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"Streamly-Internal-Data-SVar.html#t:Rate\" title=\"Streamly.Internal.Data.SVar\">Rate</a> -&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:State\" title=\"Streamly.Internal.Data.SVar\">State</a> t m a -&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:State\" title=\"Streamly.Internal.Data.SVar\">State</a> t m a","name":"setStreamRate","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:setStreamRate"},{"display_html":"<a href=\"#v:setStreamLatency\">setStreamLatency</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:State\" title=\"Streamly.Internal.Data.SVar\">State</a> t m a -&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:State\" title=\"Streamly.Internal.Data.SVar\">State</a> t m a","name":"setStreamLatency","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:setStreamLatency"},{"display_html":"<a href=\"#v:getYieldLimit\">getYieldLimit</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:State\" title=\"Streamly.Internal.Data.SVar\">State</a> t m a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> Count","name":"getYieldLimit","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:getYieldLimit"},{"display_html":"<a href=\"#v:setYieldLimit\">setYieldLimit</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int64\" title=\"Data.Int\">Int64</a> -&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:State\" title=\"Streamly.Internal.Data.SVar\">State</a> t m a -&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:State\" title=\"Streamly.Internal.Data.SVar\">State</a> t m a","name":"setYieldLimit","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:setYieldLimit"},{"display_html":"<a href=\"#v:getInspectMode\">getInspectMode</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:State\" title=\"Streamly.Internal.Data.SVar\">State</a> t m a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"getInspectMode","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:getInspectMode"},{"display_html":"<a href=\"#v:setInspectMode\">setInspectMode</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:State\" title=\"Streamly.Internal.Data.SVar\">State</a> t m a -&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:State\" title=\"Streamly.Internal.Data.SVar\">State</a> t m a","name":"setInspectMode","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:setInspectMode"},{"display_html":"<a href=\"#v:cleanupSVar\">cleanupSVar</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"cleanupSVar","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:cleanupSVar"},{"display_html":"<a href=\"#v:cleanupSVarFromWorker\">cleanupSVarFromWorker</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"cleanupSVarFromWorker","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:cleanupSVarFromWorker"},{"display_html":"<a href=\"#v:newAheadVar\">newAheadVar</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m =&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:State\" title=\"Streamly.Internal.Data.SVar\">State</a> t m a -&gt; t m a -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> ([t m a], <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> (Heap (Entry <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> (<a href=\"Streamly-Internal-Data-SVar.html#t:AheadHeapEntry\" title=\"Streamly.Internal.Data.SVar\">AheadHeapEntry</a> t m a)), <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>) -&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:State\" title=\"Streamly.Internal.Data.SVar\">State</a> t m a -&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"Streamly-Internal-Data-SVar.html#t:WorkerInfo\" title=\"Streamly.Internal.Data.SVar\">WorkerInfo</a> -&gt; m ()) -&gt; m (<a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a)","name":"newAheadVar","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:newAheadVar"},{"display_html":"<a href=\"#v:newParallelVar\">newParallelVar</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m =&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:SVarStopStyle\" title=\"Streamly.Internal.Data.SVar\">SVarStopStyle</a> -&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:State\" title=\"Streamly.Internal.Data.SVar\">State</a> t m a -&gt; m (<a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a)","name":"newParallelVar","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:newParallelVar"},{"display_html":"<a href=\"#v:captureMonadState\">captureMonadState</a> :: MonadBaseControl <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> m =&gt; m (<a href=\"Streamly-Internal-Data-SVar.html#t:RunInIO\" title=\"Streamly.Internal.Data.SVar\">RunInIO</a> m)","name":"captureMonadState","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:captureMonadState"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:RunInIO\">RunInIO</a> m = <a href=\"#v:RunInIO\">RunInIO</a> {<ul class=\"subs\"><li><a href=\"#v:runInIO\">runInIO</a> :: <span class=\"keyword\">forall</span> b. m b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> (StM m b)</li></ul>}","name":"RunInIO RunInIO runInIO","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#t:RunInIO"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:WorkerInfo\">WorkerInfo</a> = <a href=\"#v:WorkerInfo\">WorkerInfo</a> {<ul class=\"subs\"><li><a href=\"#v:workerYieldMax\">workerYieldMax</a> :: Count</li><li><a href=\"#v:workerYieldCount\">workerYieldCount</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> Count</li><li><a href=\"#v:workerLatencyStart\">workerLatencyStart</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> (Count, <a href=\"Streamly-Internal-Data-Time-Units.html#t:AbsTime\" title=\"Streamly.Internal.Data.Time.Units\">AbsTime</a>)</li></ul>}","name":"WorkerInfo WorkerInfo workerYieldMax workerYieldCount workerLatencyStart","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#t:WorkerInfo"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:YieldRateInfo\">YieldRateInfo</a> = <a href=\"#v:YieldRateInfo\">YieldRateInfo</a> {<ul class=\"subs\"><li><a href=\"#v:svarLatencyTarget\">svarLatencyTarget</a> :: <a href=\"Streamly-Internal-Data-Time-Units.html#t:NanoSecond64\" title=\"Streamly.Internal.Data.Time.Units\">NanoSecond64</a></li><li><a href=\"#v:svarLatencyRange\">svarLatencyRange</a> :: LatencyRange</li><li><a href=\"#v:svarRateBuffer\">svarRateBuffer</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li><li><a href=\"#v:svarGainedLostYields\">svarGainedLostYields</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> Count</li><li><a href=\"#v:svarAllTimeLatency\">svarAllTimeLatency</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> (Count, <a href=\"Streamly-Internal-Data-Time-Units.html#t:AbsTime\" title=\"Streamly.Internal.Data.Time.Units\">AbsTime</a>)</li><li><a href=\"#v:workerBootstrapLatency\">workerBootstrapLatency</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"Streamly-Internal-Data-Time-Units.html#t:NanoSecond64\" title=\"Streamly.Internal.Data.Time.Units\">NanoSecond64</a></li><li><a href=\"#v:workerPollingInterval\">workerPollingInterval</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> Count</li><li><a href=\"#v:workerPendingLatency\">workerPendingLatency</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> (Count, Count, <a href=\"Streamly-Internal-Data-Time-Units.html#t:NanoSecond64\" title=\"Streamly.Internal.Data.Time.Units\">NanoSecond64</a>)</li><li><a href=\"#v:workerCollectedLatency\">workerCollectedLatency</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> (Count, Count, <a href=\"Streamly-Internal-Data-Time-Units.html#t:NanoSecond64\" title=\"Streamly.Internal.Data.Time.Units\">NanoSecond64</a>)</li><li><a href=\"#v:workerMeasuredLatency\">workerMeasuredLatency</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> <a href=\"Streamly-Internal-Data-Time-Units.html#t:NanoSecond64\" title=\"Streamly.Internal.Data.Time.Units\">NanoSecond64</a></li></ul>}","name":"YieldRateInfo YieldRateInfo svarLatencyTarget svarLatencyRange svarRateBuffer svarGainedLostYields svarAllTimeLatency workerBootstrapLatency workerPollingInterval workerPendingLatency workerCollectedLatency workerMeasuredLatency","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#t:YieldRateInfo"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ThreadAbort\">ThreadAbort</a> = <a href=\"#v:ThreadAbort\">ThreadAbort</a>","name":"ThreadAbort ThreadAbort","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#t:ThreadAbort"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ChildEvent\">ChildEvent</a> a<ul class=\"subs\"><li>= <a href=\"#v:ChildYield\">ChildYield</a> a</li><li>| <a href=\"#v:ChildStop\">ChildStop</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Concurrent.html#t:ThreadId\" title=\"Control.Concurrent\">ThreadId</a> (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Exception-Base.html#t:SomeException\" title=\"Control.Exception.Base\">SomeException</a>)</li></ul>","name":"ChildEvent ChildYield ChildStop","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#t:ChildEvent"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AheadHeapEntry\">AheadHeapEntry</a> (t :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) m a<ul class=\"subs\"><li>= <a href=\"#v:AheadEntryNull\">AheadEntryNull</a></li><li>| <a href=\"#v:AheadEntryPure\">AheadEntryPure</a> a</li><li>| <a href=\"#v:AheadEntryStream\">AheadEntryStream</a> (t m a)</li></ul>","name":"AheadHeapEntry AheadEntryNull AheadEntryPure AheadEntryStream","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#t:AheadHeapEntry"},{"display_html":"<a href=\"#v:send\">send</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a -&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:ChildEvent\" title=\"Streamly.Internal.Data.SVar\">ChildEvent</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"send","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:send"},{"display_html":"<a href=\"#v:sendYield\">sendYield</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"Streamly-Internal-Data-SVar.html#t:WorkerInfo\" title=\"Streamly.Internal.Data.SVar\">WorkerInfo</a> -&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:ChildEvent\" title=\"Streamly.Internal.Data.SVar\">ChildEvent</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"sendYield","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:sendYield"},{"display_html":"<a href=\"#v:sendStop\">sendStop</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"Streamly-Internal-Data-SVar.html#t:WorkerInfo\" title=\"Streamly.Internal.Data.SVar\">WorkerInfo</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"sendStop","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:sendStop"},{"display_html":"<a href=\"#v:enqueueLIFO\">enqueueLIFO</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> [t m a] -&gt; t m a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"enqueueLIFO","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:enqueueLIFO"},{"display_html":"<a href=\"#v:enqueueFIFO\">enqueueFIFO</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a -&gt; LinkedQueue (t m a) -&gt; t m a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"enqueueFIFO","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:enqueueFIFO"},{"display_html":"<a href=\"#v:enqueueAhead\">enqueueAhead</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> ([t m a], <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>) -&gt; t m a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"enqueueAhead","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:enqueueAhead"},{"display_html":"<a href=\"#v:reEnqueueAhead\">reEnqueueAhead</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> ([t m a], <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>) -&gt; t m a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"reEnqueueAhead","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:reEnqueueAhead"},{"display_html":"<a href=\"#v:pushWorkerPar\">pushWorkerPar</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m =&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"Streamly-Internal-Data-SVar.html#t:WorkerInfo\" title=\"Streamly.Internal.Data.SVar\">WorkerInfo</a> -&gt; m ()) -&gt; m ()","name":"pushWorkerPar","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:pushWorkerPar"},{"display_html":"<a href=\"#v:queueEmptyAhead\">queueEmptyAhead</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> ([t m a], <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>) -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"queueEmptyAhead","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:queueEmptyAhead"},{"display_html":"<a href=\"#v:dequeueAhead\">dequeueAhead</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> ([t m a], <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>) -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> (t m a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>))","name":"dequeueAhead","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:dequeueAhead"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:HeapDequeueResult\">HeapDequeueResult</a> t m a<ul class=\"subs\"><li>= <a href=\"#v:Clearing\">Clearing</a></li><li>| <a href=\"#v:Waiting\">Waiting</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li><li>| <a href=\"#v:Ready\">Ready</a> (Entry <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> (<a href=\"Streamly-Internal-Data-SVar.html#t:AheadHeapEntry\" title=\"Streamly.Internal.Data.SVar\">AheadHeapEntry</a> t m a))</li></ul>","name":"HeapDequeueResult Clearing Waiting Ready","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#t:HeapDequeueResult"},{"display_html":"<a href=\"#v:dequeueFromHeap\">dequeueFromHeap</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> (Heap (Entry <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> (<a href=\"Streamly-Internal-Data-SVar.html#t:AheadHeapEntry\" title=\"Streamly.Internal.Data.SVar\">AheadHeapEntry</a> t m a)), <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> (<a href=\"Streamly-Internal-Data-SVar.html#t:HeapDequeueResult\" title=\"Streamly.Internal.Data.SVar\">HeapDequeueResult</a> t m a)","name":"dequeueFromHeap","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:dequeueFromHeap"},{"display_html":"<a href=\"#v:dequeueFromHeapSeq\">dequeueFromHeapSeq</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> (Heap (Entry <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> (<a href=\"Streamly-Internal-Data-SVar.html#t:AheadHeapEntry\" title=\"Streamly.Internal.Data.SVar\">AheadHeapEntry</a> t m a)), <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> (<a href=\"Streamly-Internal-Data-SVar.html#t:HeapDequeueResult\" title=\"Streamly.Internal.Data.SVar\">HeapDequeueResult</a> t m a)","name":"dequeueFromHeapSeq","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:dequeueFromHeapSeq"},{"display_html":"<a href=\"#v:requeueOnHeapTop\">requeueOnHeapTop</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> (Heap (Entry <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> (<a href=\"Streamly-Internal-Data-SVar.html#t:AheadHeapEntry\" title=\"Streamly.Internal.Data.SVar\">AheadHeapEntry</a> t m a)), <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>) -&gt; Entry <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> (<a href=\"Streamly-Internal-Data-SVar.html#t:AheadHeapEntry\" title=\"Streamly.Internal.Data.SVar\">AheadHeapEntry</a> t m a) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"requeueOnHeapTop","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:requeueOnHeapTop"},{"display_html":"<a href=\"#v:updateHeapSeq\">updateHeapSeq</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> (Heap (Entry <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> (<a href=\"Streamly-Internal-Data-SVar.html#t:AheadHeapEntry\" title=\"Streamly.Internal.Data.SVar\">AheadHeapEntry</a> t m a)), <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"updateHeapSeq","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:updateHeapSeq"},{"display_html":"<a href=\"#v:withIORef\">withIORef</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> b) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> b","name":"withIORef","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:withIORef"},{"display_html":"<a href=\"#v:heapIsSane\">heapIsSane</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"heapIsSane","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:heapIsSane"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Rate\">Rate</a> = <a href=\"#v:Rate\">Rate</a> {<ul class=\"subs\"><li><a href=\"#v:rateLow\">rateLow</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Double\" title=\"Prelude\">Double</a></li><li><a href=\"#v:rateGoal\">rateGoal</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Double\" title=\"Prelude\">Double</a></li><li><a href=\"#v:rateHigh\">rateHigh</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Double\" title=\"Prelude\">Double</a></li><li><a href=\"#v:rateBuffer\">rateBuffer</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li></ul>}","name":"Rate Rate rateLow rateGoal rateHigh rateBuffer","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#t:Rate"},{"display_html":"<a href=\"#v:getYieldRateInfo\">getYieldRateInfo</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:State\" title=\"Streamly.Internal.Data.SVar\">State</a> t m a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"Streamly-Internal-Data-SVar.html#t:YieldRateInfo\" title=\"Streamly.Internal.Data.SVar\">YieldRateInfo</a>)","name":"getYieldRateInfo","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:getYieldRateInfo"},{"display_html":"<a href=\"#v:newSVarStats\">newSVarStats</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"Streamly-Internal-Data-SVar.html#t:SVarStats\" title=\"Streamly.Internal.Data.SVar\">SVarStats</a>","name":"newSVarStats","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:newSVarStats"},{"display_html":"<a href=\"#v:collectLatency\">collectLatency</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a -&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:YieldRateInfo\" title=\"Streamly.Internal.Data.SVar\">YieldRateInfo</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> (Count, <a href=\"Streamly-Internal-Data-Time-Units.html#t:AbsTime\" title=\"Streamly.Internal.Data.Time.Units\">AbsTime</a>, <a href=\"Streamly-Internal-Data-Time-Units.html#t:NanoSecond64\" title=\"Streamly.Internal.Data.Time.Units\">NanoSecond64</a>)","name":"collectLatency","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:collectLatency"},{"display_html":"<a href=\"#v:workerUpdateLatency\">workerUpdateLatency</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:YieldRateInfo\" title=\"Streamly.Internal.Data.SVar\">YieldRateInfo</a> -&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:WorkerInfo\" title=\"Streamly.Internal.Data.SVar\">WorkerInfo</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"workerUpdateLatency","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:workerUpdateLatency"},{"display_html":"<a href=\"#v:isBeyondMaxRate\">isBeyondMaxRate</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a -&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:YieldRateInfo\" title=\"Streamly.Internal.Data.SVar\">YieldRateInfo</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"isBeyondMaxRate","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:isBeyondMaxRate"},{"display_html":"<a href=\"#v:workerRateControl\">workerRateControl</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a -&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:YieldRateInfo\" title=\"Streamly.Internal.Data.SVar\">YieldRateInfo</a> -&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:WorkerInfo\" title=\"Streamly.Internal.Data.SVar\">WorkerInfo</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"workerRateControl","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:workerRateControl"},{"display_html":"<a href=\"#v:updateYieldCount\">updateYieldCount</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:WorkerInfo\" title=\"Streamly.Internal.Data.SVar\">WorkerInfo</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> Count","name":"updateYieldCount","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:updateYieldCount"},{"display_html":"<a href=\"#v:decrementYieldLimit\">decrementYieldLimit</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"decrementYieldLimit","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:decrementYieldLimit"},{"display_html":"<a href=\"#v:incrementYieldLimit\">incrementYieldLimit</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"incrementYieldLimit","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:incrementYieldLimit"},{"display_html":"<a href=\"#v:decrementBufferLimit\">decrementBufferLimit</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"decrementBufferLimit","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:decrementBufferLimit"},{"display_html":"<a href=\"#v:incrementBufferLimit\">incrementBufferLimit</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"incrementBufferLimit","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:incrementBufferLimit"},{"display_html":"<a href=\"#v:postProcessBounded\">postProcessBounded</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m =&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"postProcessBounded","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:postProcessBounded"},{"display_html":"<a href=\"#v:postProcessPaced\">postProcessPaced</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m =&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"postProcessPaced","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:postProcessPaced"},{"display_html":"<a href=\"#v:readOutputQBounded\">readOutputQBounded</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m =&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a -&gt; m [<a href=\"Streamly-Internal-Data-SVar.html#t:ChildEvent\" title=\"Streamly.Internal.Data.SVar\">ChildEvent</a> a]","name":"readOutputQBounded","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:readOutputQBounded"},{"display_html":"<a href=\"#v:readOutputQPaced\">readOutputQPaced</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m =&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a -&gt; m [<a href=\"Streamly-Internal-Data-SVar.html#t:ChildEvent\" title=\"Streamly.Internal.Data.SVar\">ChildEvent</a> a]","name":"readOutputQPaced","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:readOutputQPaced"},{"display_html":"<a href=\"#v:dispatchWorkerPaced\">dispatchWorkerPaced</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m =&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"dispatchWorkerPaced","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:dispatchWorkerPaced"},{"display_html":"<a href=\"#v:sendFirstWorker\">sendFirstWorker</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m =&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a -&gt; t m a -&gt; m (<a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a)","name":"sendFirstWorker","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:sendFirstWorker"},{"display_html":"<a href=\"#v:delThread\">delThread</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Concurrent.html#t:ThreadId\" title=\"Control.Concurrent\">ThreadId</a> -&gt; m ()","name":"delThread","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:delThread"},{"display_html":"<a href=\"#v:modifyThread\">modifyThread</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Concurrent.html#t:ThreadId\" title=\"Control.Concurrent\">ThreadId</a> -&gt; m ()","name":"modifyThread","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:modifyThread"},{"display_html":"<a href=\"#v:doFork\">doFork</a> :: MonadBaseControl <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> m =&gt; m () -&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:RunInIO\" title=\"Streamly.Internal.Data.SVar\">RunInIO</a> m -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Exception-Base.html#t:SomeException\" title=\"Control.Exception.Base\">SomeException</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()) -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Concurrent.html#t:ThreadId\" title=\"Control.Concurrent\">ThreadId</a>","name":"doFork","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:doFork"},{"display_html":"<a href=\"#v:toStreamVar\">toStreamVar</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m =&gt; <a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a -&gt; t m a -&gt; m ()","name":"toStreamVar","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:toStreamVar"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SVarStats\">SVarStats</a> = <a href=\"#v:SVarStats\">SVarStats</a> {<ul class=\"subs\"><li><a href=\"#v:totalDispatches\">totalDispatches</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li><li><a href=\"#v:maxWorkers\">maxWorkers</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li><li><a href=\"#v:maxOutQSize\">maxOutQSize</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li><li><a href=\"#v:maxHeapSize\">maxHeapSize</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li><li><a href=\"#v:maxWorkQSize\">maxWorkQSize</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li><li><a href=\"#v:avgWorkerLatency\">avgWorkerLatency</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> (Count, <a href=\"Streamly-Internal-Data-Time-Units.html#t:NanoSecond64\" title=\"Streamly.Internal.Data.Time.Units\">NanoSecond64</a>)</li><li><a href=\"#v:minWorkerLatency\">minWorkerLatency</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> <a href=\"Streamly-Internal-Data-Time-Units.html#t:NanoSecond64\" title=\"Streamly.Internal.Data.Time.Units\">NanoSecond64</a></li><li><a href=\"#v:maxWorkerLatency\">maxWorkerLatency</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> <a href=\"Streamly-Internal-Data-Time-Units.html#t:NanoSecond64\" title=\"Streamly.Internal.Data.Time.Units\">NanoSecond64</a></li><li><a href=\"#v:svarStopTime\">svarStopTime</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"Streamly-Internal-Data-Time-Units.html#t:AbsTime\" title=\"Streamly.Internal.Data.Time.Units\">AbsTime</a>)</li></ul>}","name":"SVarStats SVarStats maxHeapSize totalDispatches maxWorkers maxOutQSize maxWorkQSize avgWorkerLatency minWorkerLatency maxWorkerLatency svarStopTime","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#t:SVarStats"},{"display_html":"<a href=\"#v:dumpSVar\">dumpSVar</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:SVar\" title=\"Streamly.Internal.Data.SVar\">SVar</a> t m a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"dumpSVar","module":"Streamly.Internal.Data.SVar","link":"Streamly-Internal-Data-SVar.html#v:dumpSVar"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Fold\">Fold</a> m a b = <a href=\"#v:Fold\">Fold</a> (s -&gt; a -&gt; m s) (m s) (s -&gt; m b)","name":"Fold Fold","module":"Streamly.Internal.Data.Fold.Types","link":"Streamly-Internal-Data-Fold-Types.html#t:Fold"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Fold2\">Fold2</a> m c a b = <a href=\"#v:Fold2\">Fold2</a> (s -&gt; a -&gt; m s) (c -&gt; m s) (s -&gt; m b)","name":"Fold2 Fold2","module":"Streamly.Internal.Data.Fold.Types","link":"Streamly-Internal-Data-Fold-Types.html#t:Fold2"},{"display_html":"<a href=\"#v:simplify\">simplify</a> :: <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold2\" title=\"Streamly.Internal.Data.Fold.Types\">Fold2</a> m c a b -&gt; c -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b","name":"simplify","module":"Streamly.Internal.Data.Fold.Types","link":"Streamly-Internal-Data-Fold-Types.html#v:simplify"},{"display_html":"<a href=\"#v:toListRevF\">toListRevF</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a [a]","name":"toListRevF","module":"Streamly.Internal.Data.Fold.Types","link":"Streamly-Internal-Data-Fold-Types.html#v:toListRevF"},{"display_html":"<a href=\"#v:lmap\">lmap</a> :: (a -&gt; b) -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m b r -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a r","name":"lmap","module":"Streamly.Internal.Data.Fold.Types","link":"Streamly-Internal-Data-Fold-Types.html#v:lmap"},{"display_html":"<a href=\"#v:lmapM\">lmapM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m b) -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m b r -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a r","name":"lmapM","module":"Streamly.Internal.Data.Fold.Types","link":"Streamly-Internal-Data-Fold-Types.html#v:lmapM"},{"display_html":"<a href=\"#v:lfilter\">lfilter</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a r -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a r","name":"lfilter","module":"Streamly.Internal.Data.Fold.Types","link":"Streamly-Internal-Data-Fold-Types.html#v:lfilter"},{"display_html":"<a href=\"#v:lfilterM\">lfilterM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a r -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a r","name":"lfilterM","module":"Streamly.Internal.Data.Fold.Types","link":"Streamly-Internal-Data-Fold-Types.html#v:lfilterM"},{"display_html":"<a href=\"#v:lcatMaybes\">lcatMaybes</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a) b","name":"lcatMaybes","module":"Streamly.Internal.Data.Fold.Types","link":"Streamly-Internal-Data-Fold-Types.html#v:lcatMaybes"},{"display_html":"<a href=\"#v:ltake\">ltake</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b","name":"ltake","module":"Streamly.Internal.Data.Fold.Types","link":"Streamly-Internal-Data-Fold-Types.html#v:ltake"},{"display_html":"<a href=\"#v:ltakeWhile\">ltakeWhile</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b","name":"ltakeWhile","module":"Streamly.Internal.Data.Fold.Types","link":"Streamly-Internal-Data-Fold-Types.html#v:ltakeWhile"},{"display_html":"<a href=\"#v:lsessionsOf\">lsessionsOf</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Double\" title=\"Prelude\">Double</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m b c -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a c","name":"lsessionsOf","module":"Streamly.Internal.Data.Fold.Types","link":"Streamly-Internal-Data-Fold-Types.html#v:lsessionsOf"},{"display_html":"<a href=\"#v:lchunksOf\">lchunksOf</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m b c -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a c","name":"lchunksOf","module":"Streamly.Internal.Data.Fold.Types","link":"Streamly-Internal-Data-Fold-Types.html#v:lchunksOf"},{"display_html":"<a href=\"#v:lchunksOf2\">lchunksOf2</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold2\" title=\"Streamly.Internal.Data.Fold.Types\">Fold2</a> m x b c -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold2\" title=\"Streamly.Internal.Data.Fold.Types\">Fold2</a> m x a c","name":"lchunksOf2","module":"Streamly.Internal.Data.Fold.Types","link":"Streamly-Internal-Data-Fold-Types.html#v:lchunksOf2"},{"display_html":"<a href=\"#v:duplicate\">duplicate</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m =&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a (<a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b)","name":"duplicate","module":"Streamly.Internal.Data.Fold.Types","link":"Streamly-Internal-Data-Fold-Types.html#v:duplicate"},{"display_html":"<a href=\"#v:initialize\">initialize</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; m (<a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b)","name":"initialize","module":"Streamly.Internal.Data.Fold.Types","link":"Streamly-Internal-Data-Fold-Types.html#v:initialize"},{"display_html":"<a href=\"#v:runStep\">runStep</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; a -&gt; m (<a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b)","name":"runStep","module":"Streamly.Internal.Data.Fold.Types","link":"Streamly-Internal-Data-Fold-Types.html#v:runStep"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Sink\">Sink</a> m a = <a href=\"#v:Sink\">Sink</a> (a -&gt; m ())","name":"Sink Sink","module":"Streamly.Internal.Data.Sink","link":"Streamly-Internal-Data-Sink.html#t:Sink"},{"display_html":"<a href=\"#v:toFold\">toFold</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Sink.html#t:Sink\" title=\"Streamly.Internal.Data.Sink\">Sink</a> m a -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a ()","name":"toFold","module":"Streamly.Internal.Data.Sink","link":"Streamly-Internal-Data-Sink.html#v:toFold"},{"display_html":"<a href=\"#v:tee\">tee</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Sink.html#t:Sink\" title=\"Streamly.Internal.Data.Sink\">Sink</a> m a -&gt; <a href=\"Streamly-Internal-Data-Sink.html#t:Sink\" title=\"Streamly.Internal.Data.Sink\">Sink</a> m a -&gt; <a href=\"Streamly-Internal-Data-Sink.html#t:Sink\" title=\"Streamly.Internal.Data.Sink\">Sink</a> m a","name":"tee","module":"Streamly.Internal.Data.Sink","link":"Streamly-Internal-Data-Sink.html#v:tee"},{"display_html":"<a href=\"#v:distribute\">distribute</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; [<a href=\"Streamly-Internal-Data-Sink.html#t:Sink\" title=\"Streamly.Internal.Data.Sink\">Sink</a> m a] -&gt; <a href=\"Streamly-Internal-Data-Sink.html#t:Sink\" title=\"Streamly.Internal.Data.Sink\">Sink</a> m a","name":"distribute","module":"Streamly.Internal.Data.Sink","link":"Streamly-Internal-Data-Sink.html#v:distribute"},{"display_html":"<a href=\"#v:demux\">demux</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ord\" title=\"Data.Ord\">Ord</a> k) =&gt; <a href=\"https://hackage.haskell.org/package/containers-0.6.0.1/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> k (<a href=\"Streamly-Internal-Data-Sink.html#t:Sink\" title=\"Streamly.Internal.Data.Sink\">Sink</a> m a) -&gt; <a href=\"Streamly-Internal-Data-Sink.html#t:Sink\" title=\"Streamly.Internal.Data.Sink\">Sink</a> m (a, k)","name":"demux","module":"Streamly.Internal.Data.Sink","link":"Streamly-Internal-Data-Sink.html#v:demux"},{"display_html":"<a href=\"#v:unzipM\">unzipM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m (b, c)) -&gt; <a href=\"Streamly-Internal-Data-Sink.html#t:Sink\" title=\"Streamly.Internal.Data.Sink\">Sink</a> m b -&gt; <a href=\"Streamly-Internal-Data-Sink.html#t:Sink\" title=\"Streamly.Internal.Data.Sink\">Sink</a> m c -&gt; <a href=\"Streamly-Internal-Data-Sink.html#t:Sink\" title=\"Streamly.Internal.Data.Sink\">Sink</a> m a","name":"unzipM","module":"Streamly.Internal.Data.Sink","link":"Streamly-Internal-Data-Sink.html#v:unzipM"},{"display_html":"<a href=\"#v:unzip\">unzip</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; (b, c)) -&gt; <a href=\"Streamly-Internal-Data-Sink.html#t:Sink\" title=\"Streamly.Internal.Data.Sink\">Sink</a> m b -&gt; <a href=\"Streamly-Internal-Data-Sink.html#t:Sink\" title=\"Streamly.Internal.Data.Sink\">Sink</a> m c -&gt; <a href=\"Streamly-Internal-Data-Sink.html#t:Sink\" title=\"Streamly.Internal.Data.Sink\">Sink</a> m a","name":"unzip","module":"Streamly.Internal.Data.Sink","link":"Streamly-Internal-Data-Sink.html#v:unzip"},{"display_html":"<a href=\"#v:lmap\">lmap</a> :: (a -&gt; b) -&gt; <a href=\"Streamly-Internal-Data-Sink.html#t:Sink\" title=\"Streamly.Internal.Data.Sink\">Sink</a> m b -&gt; <a href=\"Streamly-Internal-Data-Sink.html#t:Sink\" title=\"Streamly.Internal.Data.Sink\">Sink</a> m a","name":"lmap","module":"Streamly.Internal.Data.Sink","link":"Streamly-Internal-Data-Sink.html#v:lmap"},{"display_html":"<a href=\"#v:lmapM\">lmapM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m b) -&gt; <a href=\"Streamly-Internal-Data-Sink.html#t:Sink\" title=\"Streamly.Internal.Data.Sink\">Sink</a> m b -&gt; <a href=\"Streamly-Internal-Data-Sink.html#t:Sink\" title=\"Streamly.Internal.Data.Sink\">Sink</a> m a","name":"lmapM","module":"Streamly.Internal.Data.Sink","link":"Streamly-Internal-Data-Sink.html#v:lmapM"},{"display_html":"<a href=\"#v:lfilter\">lfilter</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Sink.html#t:Sink\" title=\"Streamly.Internal.Data.Sink\">Sink</a> m a -&gt; <a href=\"Streamly-Internal-Data-Sink.html#t:Sink\" title=\"Streamly.Internal.Data.Sink\">Sink</a> m a","name":"lfilter","module":"Streamly.Internal.Data.Sink","link":"Streamly-Internal-Data-Sink.html#v:lfilter"},{"display_html":"<a href=\"#v:lfilterM\">lfilterM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Sink.html#t:Sink\" title=\"Streamly.Internal.Data.Sink\">Sink</a> m a -&gt; <a href=\"Streamly-Internal-Data-Sink.html#t:Sink\" title=\"Streamly.Internal.Data.Sink\">Sink</a> m a","name":"lfilterM","module":"Streamly.Internal.Data.Sink","link":"Streamly-Internal-Data-Sink.html#v:lfilterM"},{"display_html":"<a href=\"#v:drain\">drain</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Sink.html#t:Sink\" title=\"Streamly.Internal.Data.Sink\">Sink</a> m a","name":"drain","module":"Streamly.Internal.Data.Sink","link":"Streamly-Internal-Data-Sink.html#v:drain"},{"display_html":"<a href=\"#v:drainM\">drainM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m b) -&gt; <a href=\"Streamly-Internal-Data-Sink.html#t:Sink\" title=\"Streamly.Internal.Data.Sink\">Sink</a> m a","name":"drainM","module":"Streamly.Internal.Data.Sink","link":"Streamly-Internal-Data-Sink.html#v:drainM"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Fold\">Fold</a> m a b = <a href=\"#v:Fold\">Fold</a> (s -&gt; a -&gt; m s) (m s) (s -&gt; m b)","name":"Fold Fold","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#t:Fold"},{"display_html":"<a href=\"#v:hoist\">hoist</a> :: (<span class=\"keyword\">forall</span> x. m x -&gt; n x) -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> n a b","name":"hoist","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:hoist"},{"display_html":"<a href=\"#v:generally\">generally</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Functor-Identity.html#t:Identity\" title=\"Data.Functor.Identity\">Identity</a> a b -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a b","name":"generally","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:generally"},{"display_html":"<a href=\"#v:mkPure\">mkPure</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (s -&gt; a -&gt; s) -&gt; s -&gt; (s -&gt; b) -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a b","name":"mkPure","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:mkPure"},{"display_html":"<a href=\"#v:mkPureId\">mkPureId</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (b -&gt; a -&gt; b) -&gt; b -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a b","name":"mkPureId","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:mkPureId"},{"display_html":"<a href=\"#v:mkFold\">mkFold</a> :: (s -&gt; a -&gt; m s) -&gt; m s -&gt; (s -&gt; m b) -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a b","name":"mkFold","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:mkFold"},{"display_html":"<a href=\"#v:mkFoldId\">mkFoldId</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (b -&gt; a -&gt; m b) -&gt; m b -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a b","name":"mkFoldId","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:mkFoldId"},{"display_html":"<a href=\"#v:drain\">drain</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a ()","name":"drain","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:drain"},{"display_html":"<a href=\"#v:drainBy\">drainBy</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m b) -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a ()","name":"drainBy","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:drainBy"},{"display_html":"<a href=\"#v:drainBy2\">drainBy2</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m b) -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold2\" title=\"Streamly.Internal.Data.Fold.Types\">Fold2</a> m c a ()","name":"drainBy2","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:drainBy2"},{"display_html":"<a href=\"#v:last\">last</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"last","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:last"},{"display_html":"<a href=\"#v:length\">length</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"length","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:length"},{"display_html":"<a href=\"#v:sum\">sum</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a) =&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a a","name":"sum","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:sum"},{"display_html":"<a href=\"#v:product\">product</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a) =&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a a","name":"product","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:product"},{"display_html":"<a href=\"#v:maximumBy\">maximumBy</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"maximumBy","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:maximumBy"},{"display_html":"<a href=\"#v:maximum\">maximum</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ord\" title=\"Data.Ord\">Ord</a> a) =&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"maximum","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:maximum"},{"display_html":"<a href=\"#v:minimumBy\">minimumBy</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"minimumBy","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:minimumBy"},{"display_html":"<a href=\"#v:minimum\">minimum</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ord\" title=\"Data.Ord\">Ord</a> a) =&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"minimum","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:minimum"},{"display_html":"<a href=\"#v:mean\">mean</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Fractional\" title=\"Prelude\">Fractional</a> a) =&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a a","name":"mean","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:mean"},{"display_html":"<a href=\"#v:variance\">variance</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Fractional\" title=\"Prelude\">Fractional</a> a) =&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a a","name":"variance","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:variance"},{"display_html":"<a href=\"#v:stdDev\">stdDev</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Numeric.html#t:Floating\" title=\"Numeric\">Floating</a> a) =&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a a","name":"stdDev","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:stdDev"},{"display_html":"<a href=\"#v:rollingHash\">rollingHash</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Enum\" title=\"Prelude\">Enum</a> a) =&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"rollingHash","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:rollingHash"},{"display_html":"<a href=\"#v:rollingHashWithSalt\">rollingHashWithSalt</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Enum\" title=\"Prelude\">Enum</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"rollingHashWithSalt","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:rollingHashWithSalt"},{"display_html":"<a href=\"#v:mconcat\">mconcat</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Monoid.html#t:Monoid\" title=\"Data.Monoid\">Monoid</a> a) =&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a a","name":"mconcat","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:mconcat"},{"display_html":"<a href=\"#v:foldMap\">foldMap</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Monoid.html#t:Monoid\" title=\"Data.Monoid\">Monoid</a> b) =&gt; (a -&gt; b) -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a b","name":"foldMap","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:foldMap"},{"display_html":"<a href=\"#v:foldMapM\">foldMapM</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Monoid.html#t:Monoid\" title=\"Data.Monoid\">Monoid</a> b) =&gt; (a -&gt; m b) -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a b","name":"foldMapM","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:foldMapM"},{"display_html":"<a href=\"#v:toList\">toList</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a [a]","name":"toList","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:toList"},{"display_html":"<a href=\"#v:toListRevF\">toListRevF</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a [a]","name":"toListRevF","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:toListRevF"},{"display_html":"<a href=\"#v:index\">index</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"index","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:index"},{"display_html":"<a href=\"#v:head\">head</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"head","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:head"},{"display_html":"<a href=\"#v:find\">find</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"find","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:find"},{"display_html":"<a href=\"#v:lookup\">lookup</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; a -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m (a, b) (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> b)","name":"lookup","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:lookup"},{"display_html":"<a href=\"#v:findIndex\">findIndex</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>)","name":"findIndex","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:findIndex"},{"display_html":"<a href=\"#v:elemIndex\">elemIndex</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; a -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>)","name":"elemIndex","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:elemIndex"},{"display_html":"<a href=\"#v:null\">null</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"null","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:null"},{"display_html":"<a href=\"#v:elem\">elem</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; a -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"elem","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:elem"},{"display_html":"<a href=\"#v:notElem\">notElem</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; a -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"notElem","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:notElem"},{"display_html":"<a href=\"#v:all\">all</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"all","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:all"},{"display_html":"<a href=\"#v:any\">any</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"any","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:any"},{"display_html":"<a href=\"#v:and\">and</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"and","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:and"},{"display_html":"<a href=\"#v:or\">or</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"or","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:or"},{"display_html":"<a href=\"#v:sequence\">sequence</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a (m b) -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a b","name":"sequence","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:sequence"},{"display_html":"<a href=\"#v:mapM\">mapM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (b -&gt; m c) -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a c","name":"mapM","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:mapM"},{"display_html":"<a href=\"#v:transform\">transform</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Pipe-Types.html#t:Pipe\" title=\"Streamly.Internal.Data.Pipe.Types\">Pipe</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m b c -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a c","name":"transform","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:transform"},{"display_html":"<a href=\"#v:lmap\">lmap</a> :: (a -&gt; b) -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m b r -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a r","name":"lmap","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:lmap"},{"display_html":"<a href=\"#v:lmapM\">lmapM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m b) -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m b r -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a r","name":"lmapM","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:lmapM"},{"display_html":"<a href=\"#v:lfilter\">lfilter</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a r -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a r","name":"lfilter","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:lfilter"},{"display_html":"<a href=\"#v:lfilterM\">lfilterM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a r -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a r","name":"lfilterM","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:lfilterM"},{"display_html":"<a href=\"#v:lcatMaybes\">lcatMaybes</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a) b","name":"lcatMaybes","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:lcatMaybes"},{"display_html":"<a href=\"#v:ltake\">ltake</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a b","name":"ltake","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:ltake"},{"display_html":"<a href=\"#v:ltakeWhile\">ltakeWhile</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a b","name":"ltakeWhile","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:ltakeWhile"},{"display_html":"<a href=\"#v:lsessionsOf\">lsessionsOf</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Double\" title=\"Prelude\">Double</a> -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m b c -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a c","name":"lsessionsOf","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:lsessionsOf"},{"display_html":"<a href=\"#v:lchunksOf\">lchunksOf</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m b c -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a c","name":"lchunksOf","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:lchunksOf"},{"display_html":"<a href=\"#v:tee\">tee</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a c -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a (b, c)","name":"tee","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:tee"},{"display_html":"<a href=\"#v:distribute\">distribute</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; [<a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a b] -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a [b]","name":"distribute","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:distribute"},{"display_html":"<a href=\"#v:partition\">partition</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m b x -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m c y -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> b c) (x, y)","name":"partition","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:partition"},{"display_html":"<a href=\"#v:demux\">demux</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ord\" title=\"Data.Ord\">Ord</a> k) =&gt; <a href=\"https://hackage.haskell.org/package/containers-0.6.0.1/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> k (<a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a b) -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m (k, a) (<a href=\"https://hackage.haskell.org/package/containers-0.6.0.1/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> k b)","name":"demux","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:demux"},{"display_html":"<a href=\"#v:demux_\">demux_</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ord\" title=\"Data.Ord\">Ord</a> k) =&gt; <a href=\"https://hackage.haskell.org/package/containers-0.6.0.1/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> k (<a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a ()) -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m (k, a) ()","name":"demux_","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:demux_"},{"display_html":"<a href=\"#v:classify\">classify</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ord\" title=\"Data.Ord\">Ord</a> k) =&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m (k, a) (<a href=\"https://hackage.haskell.org/package/containers-0.6.0.1/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> k b)","name":"classify","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:classify"},{"display_html":"<a href=\"#v:unzip\">unzip</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a x -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m b y -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m (a, b) (x, y)","name":"unzip","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:unzip"},{"display_html":"<a href=\"#v:initialize\">initialize</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a b -&gt; m (<a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a b)","name":"initialize","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:initialize"},{"display_html":"<a href=\"#v:runStep\">runStep</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a b -&gt; a -&gt; m (<a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a b)","name":"runStep","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:runStep"},{"display_html":"<a href=\"#v:duplicate\">duplicate</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m =&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a (<a href=\"Streamly-Internal-Data-Fold.html#t:Fold\" title=\"Streamly.Internal.Data.Fold\">Fold</a> m a b)","name":"duplicate","module":"Streamly.Internal.Data.Fold","link":"Streamly-Internal-Data-Fold.html#v:duplicate"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Fold\">Fold</a> m a b","name":"Fold","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#t:Fold"},{"display_html":"<a href=\"#v:drain\">drain</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a ()","name":"drain","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:drain"},{"display_html":"<a href=\"#v:drainBy\">drainBy</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m b) -&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a ()","name":"drainBy","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:drainBy"},{"display_html":"<a href=\"#v:last\">last</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"last","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:last"},{"display_html":"<a href=\"#v:length\">length</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"length","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:length"},{"display_html":"<a href=\"#v:sum\">sum</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a) =&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a a","name":"sum","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:sum"},{"display_html":"<a href=\"#v:product\">product</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a) =&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a a","name":"product","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:product"},{"display_html":"<a href=\"#v:maximumBy\">maximumBy</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"maximumBy","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:maximumBy"},{"display_html":"<a href=\"#v:maximum\">maximum</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ord\" title=\"Data.Ord\">Ord</a> a) =&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"maximum","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:maximum"},{"display_html":"<a href=\"#v:minimumBy\">minimumBy</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"minimumBy","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:minimumBy"},{"display_html":"<a href=\"#v:minimum\">minimum</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ord\" title=\"Data.Ord\">Ord</a> a) =&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"minimum","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:minimum"},{"display_html":"<a href=\"#v:mean\">mean</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Fractional\" title=\"Prelude\">Fractional</a> a) =&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a a","name":"mean","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:mean"},{"display_html":"<a href=\"#v:variance\">variance</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Fractional\" title=\"Prelude\">Fractional</a> a) =&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a a","name":"variance","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:variance"},{"display_html":"<a href=\"#v:stdDev\">stdDev</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Numeric.html#t:Floating\" title=\"Numeric\">Floating</a> a) =&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a a","name":"stdDev","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:stdDev"},{"display_html":"<a href=\"#v:mconcat\">mconcat</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Monoid.html#t:Monoid\" title=\"Data.Monoid\">Monoid</a> a) =&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a a","name":"mconcat","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:mconcat"},{"display_html":"<a href=\"#v:foldMap\">foldMap</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Monoid.html#t:Monoid\" title=\"Data.Monoid\">Monoid</a> b) =&gt; (a -&gt; b) -&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a b","name":"foldMap","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:foldMap"},{"display_html":"<a href=\"#v:foldMapM\">foldMapM</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Monoid.html#t:Monoid\" title=\"Data.Monoid\">Monoid</a> b) =&gt; (a -&gt; m b) -&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a b","name":"foldMapM","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:foldMapM"},{"display_html":"<a href=\"#v:toList\">toList</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a [a]","name":"toList","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:toList"},{"display_html":"<a href=\"#v:index\">index</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"index","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:index"},{"display_html":"<a href=\"#v:head\">head</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"head","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:head"},{"display_html":"<a href=\"#v:find\">find</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"find","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:find"},{"display_html":"<a href=\"#v:lookup\">lookup</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; a -&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m (a, b) (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> b)","name":"lookup","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:lookup"},{"display_html":"<a href=\"#v:findIndex\">findIndex</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>)","name":"findIndex","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:findIndex"},{"display_html":"<a href=\"#v:elemIndex\">elemIndex</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; a -&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>)","name":"elemIndex","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:elemIndex"},{"display_html":"<a href=\"#v:null\">null</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"null","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:null"},{"display_html":"<a href=\"#v:elem\">elem</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; a -&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"elem","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:elem"},{"display_html":"<a href=\"#v:notElem\">notElem</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; a -&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"notElem","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:notElem"},{"display_html":"<a href=\"#v:all\">all</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"all","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:all"},{"display_html":"<a href=\"#v:any\">any</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"any","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:any"},{"display_html":"<a href=\"#v:and\">and</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"and","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:and"},{"display_html":"<a href=\"#v:or\">or</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"or","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:or"},{"display_html":"<a href=\"#v:sequence\">sequence</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a (m b) -&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a b","name":"sequence","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:sequence"},{"display_html":"<a href=\"#v:mapM\">mapM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (b -&gt; m c) -&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a b -&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a c","name":"mapM","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:mapM"},{"display_html":"<a href=\"#v:tee\">tee</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a b -&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a c -&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a (b, c)","name":"tee","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:tee"},{"display_html":"<a href=\"#v:distribute\">distribute</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; [<a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a b] -&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a [b]","name":"distribute","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:distribute"},{"display_html":"<a href=\"#v:partition\">partition</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m b x -&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m c y -&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> b c) (x, y)","name":"partition","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:partition"},{"display_html":"<a href=\"#v:unzip\">unzip</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m a x -&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m b y -&gt; <a href=\"Streamly-Data-Fold.html#t:Fold\" title=\"Streamly.Data.Fold\">Fold</a> m (a, b) (x, y)","name":"unzip","module":"Streamly.Data.Fold","link":"Streamly-Data-Fold.html#v:unzip"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Step\">Step</a> s a<ul class=\"subs\"><li>= <a href=\"#v:Yield\">Yield</a> a s</li><li>| <a href=\"#v:Skip\">Skip</a> s</li><li>| <a href=\"#v:Stop\">Stop</a></li></ul>","name":"Step Stop Yield Skip","module":"Streamly.Internal.Data.Stream.StreamD.Type","link":"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Step"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Stream\">Stream</a> m a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:UnStream\">UnStream</a> (<a href=\"Streamly-Internal-Data-SVar.html#t:State\" title=\"Streamly.Internal.Data.SVar\">State</a> Stream m a -&gt; s -&gt; m (<a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Step\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Step</a> s a)) s</li><li><span class=\"keyword\">pattern</span> <a href=\"#v:Stream\">Stream</a> :: (<a href=\"Streamly-Internal-Data-SVar.html#t:State\" title=\"Streamly.Internal.Data.SVar\">State</a> Stream m a -&gt; s -&gt; m (<a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Step\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Step</a> s a)) -&gt; s -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a</li></ul>","name":"Stream Stream UnStream","module":"Streamly.Internal.Data.Stream.StreamD.Type","link":"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream"},{"display_html":"<a href=\"#v:fromStreamK\">fromStreamK</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; Stream m a -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a","name":"fromStreamK","module":"Streamly.Internal.Data.Stream.StreamD.Type","link":"Streamly-Internal-Data-Stream-StreamD-Type.html#v:fromStreamK"},{"display_html":"<a href=\"#v:toStreamK\">toStreamK</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a -&gt; Stream m a","name":"toStreamK","module":"Streamly.Internal.Data.Stream.StreamD.Type","link":"Streamly-Internal-Data-Stream-StreamD-Type.html#v:toStreamK"},{"display_html":"<a href=\"#v:fromStreamD\">fromStreamD</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a -&gt; t m a","name":"fromStreamD","module":"Streamly.Internal.Data.Stream.StreamD.Type","link":"Streamly-Internal-Data-Stream-StreamD-Type.html#v:fromStreamD"},{"display_html":"<a href=\"#v:map\">map</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; b) -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m b","name":"map","module":"Streamly.Internal.Data.Stream.StreamD.Type","link":"Streamly-Internal-Data-Stream-StreamD-Type.html#v:map"},{"display_html":"<a href=\"#v:mapM\">mapM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m b) -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m b","name":"mapM","module":"Streamly.Internal.Data.Stream.StreamD.Type","link":"Streamly-Internal-Data-Stream-StreamD-Type.html#v:mapM"},{"display_html":"<a href=\"#v:yield\">yield</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; a -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a","name":"yield","module":"Streamly.Internal.Data.Stream.StreamD.Type","link":"Streamly-Internal-Data-Stream-StreamD-Type.html#v:yield"},{"display_html":"<a href=\"#v:yieldM\">yieldM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; m a -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a","name":"yieldM","module":"Streamly.Internal.Data.Stream.StreamD.Type","link":"Streamly-Internal-Data-Stream-StreamD-Type.html#v:yieldM"},{"display_html":"<a href=\"#v:concatMap\">concatMap</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m b) -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m b","name":"concatMap","module":"Streamly.Internal.Data.Stream.StreamD.Type","link":"Streamly-Internal-Data-Stream-StreamD-Type.html#v:concatMap"},{"display_html":"<a href=\"#v:concatMapM\">concatMapM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m (<a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m b)) -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m b","name":"concatMapM","module":"Streamly.Internal.Data.Stream.StreamD.Type","link":"Streamly-Internal-Data-Stream-StreamD-Type.html#v:concatMapM"},{"display_html":"<a href=\"#v:foldrT\">foldrT</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> (t m), <a href=\"https://hackage.haskell.org/package/transformers-0.5.5.0/docs/Control-Monad-Trans-Class.html#t:MonadTrans\" title=\"Control.Monad.Trans.Class\">MonadTrans</a> t) =&gt; (a -&gt; t m b -&gt; t m b) -&gt; t m b -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a -&gt; t m b","name":"foldrT","module":"Streamly.Internal.Data.Stream.StreamD.Type","link":"Streamly-Internal-Data-Stream-StreamD-Type.html#v:foldrT"},{"display_html":"<a href=\"#v:foldrM\">foldrM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m b -&gt; m b) -&gt; m b -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a -&gt; m b","name":"foldrM","module":"Streamly.Internal.Data.Stream.StreamD.Type","link":"Streamly-Internal-Data-Stream-StreamD-Type.html#v:foldrM"},{"display_html":"<a href=\"#v:foldrMx\">foldrMx</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m x -&gt; m x) -&gt; m x -&gt; (m x -&gt; m b) -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a -&gt; m b","name":"foldrMx","module":"Streamly.Internal.Data.Stream.StreamD.Type","link":"Streamly-Internal-Data-Stream-StreamD-Type.html#v:foldrMx"},{"display_html":"<a href=\"#v:foldr\">foldr</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; b -&gt; b) -&gt; b -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a -&gt; m b","name":"foldr","module":"Streamly.Internal.Data.Stream.StreamD.Type","link":"Streamly-Internal-Data-Stream-StreamD-Type.html#v:foldr"},{"display_html":"<a href=\"#v:foldrS\">foldrS</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m b -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m b) -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m b -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m b","name":"foldrS","module":"Streamly.Internal.Data.Stream.StreamD.Type","link":"Streamly-Internal-Data-Stream-StreamD-Type.html#v:foldrS"},{"display_html":"<a href=\"#v:foldl-39-\">foldl'</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (b -&gt; a -&gt; b) -&gt; b -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a -&gt; m b","name":"foldl'","module":"Streamly.Internal.Data.Stream.StreamD.Type","link":"Streamly-Internal-Data-Stream-StreamD-Type.html#v:foldl-39-"},{"display_html":"<a href=\"#v:foldlM-39-\">foldlM'</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (b -&gt; a -&gt; m b) -&gt; b -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a -&gt; m b","name":"foldlM'","module":"Streamly.Internal.Data.Stream.StreamD.Type","link":"Streamly-Internal-Data-Stream-StreamD-Type.html#v:foldlM-39-"},{"display_html":"<a href=\"#v:foldlx-39-\">foldlx'</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (x -&gt; a -&gt; x) -&gt; x -&gt; (x -&gt; b) -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a -&gt; m b","name":"foldlx'","module":"Streamly.Internal.Data.Stream.StreamD.Type","link":"Streamly-Internal-Data-Stream-StreamD-Type.html#v:foldlx-39-"},{"display_html":"<a href=\"#v:foldlMx-39-\">foldlMx'</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (x -&gt; a -&gt; m x) -&gt; m x -&gt; (x -&gt; m b) -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a -&gt; m b","name":"foldlMx'","module":"Streamly.Internal.Data.Stream.StreamD.Type","link":"Streamly-Internal-Data-Stream-StreamD-Type.html#v:foldlMx-39-"},{"display_html":"<a href=\"#v:toList\">toList</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a -&gt; m [a]","name":"toList","module":"Streamly.Internal.Data.Stream.StreamD.Type","link":"Streamly-Internal-Data-Stream-StreamD-Type.html#v:toList"},{"display_html":"<a href=\"#v:fromList\">fromList</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; [a] -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a","name":"fromList","module":"Streamly.Internal.Data.Stream.StreamD.Type","link":"Streamly-Internal-Data-Stream-StreamD-Type.html#v:fromList"},{"display_html":"<a href=\"#v:eqBy\">eqBy</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m b -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"eqBy","module":"Streamly.Internal.Data.Stream.StreamD.Type","link":"Streamly-Internal-Data-Stream-StreamD-Type.html#v:eqBy"},{"display_html":"<a href=\"#v:cmpBy\">cmpBy</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m b -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>","name":"cmpBy","module":"Streamly.Internal.Data.Stream.StreamD.Type","link":"Streamly-Internal-Data-Stream-StreamD-Type.html#v:cmpBy"},{"display_html":"<a href=\"#v:take\">take</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a","name":"take","module":"Streamly.Internal.Data.Stream.StreamD.Type","link":"Streamly-Internal-Data-Stream-StreamD-Type.html#v:take"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:GroupState\">GroupState</a> s fs<ul class=\"subs\"><li>= <a href=\"#v:GroupStart\">GroupStart</a> s</li><li>| <a href=\"#v:GroupBuffer\">GroupBuffer</a> s fs <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li><li>| <a href=\"#v:GroupYield\">GroupYield</a> fs (<a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:GroupState\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">GroupState</a> s fs)</li><li>| <a href=\"#v:GroupFinish\">GroupFinish</a></li></ul>","name":"GroupState GroupStart GroupBuffer GroupYield GroupFinish","module":"Streamly.Internal.Data.Stream.StreamD.Type","link":"Streamly-Internal-Data-Stream-StreamD-Type.html#t:GroupState"},{"display_html":"<a href=\"#v:groupsOf\">groupsOf</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m b","name":"groupsOf","module":"Streamly.Internal.Data.Stream.StreamD.Type","link":"Streamly-Internal-Data-Stream-StreamD-Type.html#v:groupsOf"},{"display_html":"<a href=\"#v:groupsOf2\">groupsOf2</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; m c -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold2\" title=\"Streamly.Internal.Data.Fold.Types\">Fold2</a> m c a b -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m b","name":"groupsOf2","module":"Streamly.Internal.Data.Stream.StreamD.Type","link":"Streamly-Internal-Data-Stream-StreamD-Type.html#v:groupsOf2"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Array\">Array</a> a = <a href=\"#v:Array\">Array</a> {<ul class=\"subs\"><li><a href=\"#v:aStart\">aStart</a> :: !(<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-ForeignPtr-Safe.html#t:ForeignPtr\" title=\"Foreign.ForeignPtr.Safe\">ForeignPtr</a> a)</li><li><a href=\"#v:aEnd\">aEnd</a> :: !(<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Ptr.html#t:Ptr\" title=\"Foreign.Ptr\">Ptr</a> a)</li><li><a href=\"#v:aBound\">aBound</a> :: !(<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Ptr.html#t:Ptr\" title=\"Foreign.Ptr\">Ptr</a> a)</li></ul>}","name":"Array Array aStart aEnd aBound","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#t:Array"},{"display_html":"<a href=\"#v:withNewArray\">withNewArray</a> :: <span class=\"keyword\">forall</span> a. <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Ptr.html#t:Ptr\" title=\"Foreign.Ptr\">Ptr</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a)","name":"withNewArray","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:withNewArray"},{"display_html":"<a href=\"#v:newArray\">newArray</a> :: <span class=\"keyword\">forall</span> a. <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a)","name":"newArray","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:newArray"},{"display_html":"<a href=\"#v:unsafeSnoc\">unsafeSnoc</a> :: <span class=\"keyword\">forall</span> a. <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a)","name":"unsafeSnoc","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:unsafeSnoc"},{"display_html":"<a href=\"#v:snoc\">snoc</a> :: <span class=\"keyword\">forall</span> a. <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a)","name":"snoc","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:snoc"},{"display_html":"<a href=\"#v:spliceWithDoubling\">spliceWithDoubling</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a)","name":"spliceWithDoubling","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:spliceWithDoubling"},{"display_html":"<a href=\"#v:spliceTwo\">spliceTwo</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a)","name":"spliceTwo","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:spliceTwo"},{"display_html":"<a href=\"#v:fromList\">fromList</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; [a] -&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a","name":"fromList","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:fromList"},{"display_html":"<a href=\"#v:fromListN\">fromListN</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; [a] -&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a","name":"fromListN","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:fromListN"},{"display_html":"<a href=\"#v:fromStreamDN\">fromStreamDN</a> :: <span class=\"keyword\">forall</span> m a. (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a -&gt; m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a)","name":"fromStreamDN","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:fromStreamDN"},{"display_html":"<a href=\"#v:fromStreamDArraysOf\">fromStreamDArraysOf</a> :: <span class=\"keyword\">forall</span> m a. (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a)","name":"fromStreamDArraysOf","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:fromStreamDArraysOf"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FlattenState\">FlattenState</a> s a<ul class=\"subs\"><li>= <a href=\"#v:OuterLoop\">OuterLoop</a> s</li><li>| <a href=\"#v:InnerLoop\">InnerLoop</a> s !(<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-ForeignPtr-Safe.html#t:ForeignPtr\" title=\"Foreign.ForeignPtr.Safe\">ForeignPtr</a> a) !(<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Ptr.html#t:Ptr\" title=\"Foreign.Ptr\">Ptr</a> a) !(<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Ptr.html#t:Ptr\" title=\"Foreign.Ptr\">Ptr</a> a)</li></ul>","name":"FlattenState OuterLoop InnerLoop","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#t:FlattenState"},{"display_html":"<a href=\"#v:flattenArrays\">flattenArrays</a> :: <span class=\"keyword\">forall</span> m a. (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a) -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a","name":"flattenArrays","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:flattenArrays"},{"display_html":"<a href=\"#v:flattenArraysRev\">flattenArraysRev</a> :: <span class=\"keyword\">forall</span> m a. (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a) -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a","name":"flattenArraysRev","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:flattenArraysRev"},{"display_html":"<a href=\"#v:packArraysChunksOf\">packArraysChunksOf</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a) -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a)","name":"packArraysChunksOf","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:packArraysChunksOf"},{"display_html":"<a href=\"#v:lpackArraysChunksOf\">lpackArraysChunksOf</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a) () -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a) ()","name":"lpackArraysChunksOf","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:lpackArraysChunksOf"},{"display_html":"<a href=\"#v:groupIOVecsOf\">groupIOVecsOf</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a) -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> IOVec)","name":"groupIOVecsOf","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:groupIOVecsOf"},{"display_html":"<a href=\"#v:splitOn\">splitOn</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>) -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>)","name":"splitOn","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:splitOn"},{"display_html":"<a href=\"#v:breakOn\">breakOn</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>))","name":"breakOn","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:breakOn"},{"display_html":"<a href=\"#v:unsafeIndexIO\">unsafeIndexIO</a> :: <span class=\"keyword\">forall</span> a. <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> a","name":"unsafeIndexIO","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:unsafeIndexIO"},{"display_html":"<a href=\"#v:unsafeIndex\">unsafeIndex</a> :: <span class=\"keyword\">forall</span> a. <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a","name":"unsafeIndex","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:unsafeIndex"},{"display_html":"<a href=\"#v:length\">length</a> :: <span class=\"keyword\">forall</span> a. <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"length","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:length"},{"display_html":"<a href=\"#v:byteLength\">byteLength</a> :: <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"byteLength","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:byteLength"},{"display_html":"<a href=\"#v:byteCapacity\">byteCapacity</a> :: <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"byteCapacity","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:byteCapacity"},{"display_html":"<a href=\"#v:foldl-39-\">foldl'</a> :: <span class=\"keyword\">forall</span> a b. <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; (b -&gt; a -&gt; b) -&gt; b -&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; b","name":"foldl'","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:foldl-39-"},{"display_html":"<a href=\"#v:foldr\">foldr</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; (a -&gt; b -&gt; b) -&gt; b -&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; b","name":"foldr","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:foldr"},{"display_html":"<a href=\"#v:splitAt\">splitAt</a> :: <span class=\"keyword\">forall</span> a. <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a, <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a)","name":"splitAt","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:splitAt"},{"display_html":"<a href=\"#v:toStreamD\">toStreamD</a> :: <span class=\"keyword\">forall</span> m a. (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a","name":"toStreamD","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:toStreamD"},{"display_html":"<a href=\"#v:toStreamDRev\">toStreamDRev</a> :: <span class=\"keyword\">forall</span> m a. (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a","name":"toStreamDRev","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:toStreamDRev"},{"display_html":"<a href=\"#v:toStreamK\">toStreamK</a> :: <span class=\"keyword\">forall</span> t m a. (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; t m a","name":"toStreamK","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:toStreamK"},{"display_html":"<a href=\"#v:toStreamKRev\">toStreamKRev</a> :: <span class=\"keyword\">forall</span> t m a. (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; t m a","name":"toStreamKRev","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:toStreamKRev"},{"display_html":"<a href=\"#v:toList\">toList</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; [a]","name":"toList","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:toList"},{"display_html":"<a href=\"#v:toArrayMinChunk\">toArrayMinChunk</a> :: <span class=\"keyword\">forall</span> m a. (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a)","name":"toArrayMinChunk","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:toArrayMinChunk"},{"display_html":"<a href=\"#v:writeN\">writeN</a> :: <span class=\"keyword\">forall</span> m a. (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a)","name":"writeN","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:writeN"},{"display_html":"<a href=\"#v:writeNUnsafe\">writeNUnsafe</a> :: <span class=\"keyword\">forall</span> m a. (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a)","name":"writeNUnsafe","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:writeNUnsafe"},{"display_html":"<a href=\"#v:writeNAligned\">writeNAligned</a> :: <span class=\"keyword\">forall</span> m a. (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a)","name":"writeNAligned","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:writeNAligned"},{"display_html":"<a href=\"#v:writeNAlignedUnmanaged\">writeNAlignedUnmanaged</a> :: <span class=\"keyword\">forall</span> m a. (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a)","name":"writeNAlignedUnmanaged","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:writeNAlignedUnmanaged"},{"display_html":"<a href=\"#v:write\">write</a> :: <span class=\"keyword\">forall</span> m a. (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a)","name":"write","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:write"},{"display_html":"<a href=\"#v:writeAligned\">writeAligned</a> :: <span class=\"keyword\">forall</span> m a. (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a)","name":"writeAligned","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:writeAligned"},{"display_html":"<a href=\"#v:defaultChunkSize\">defaultChunkSize</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"defaultChunkSize","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:defaultChunkSize"},{"display_html":"<a href=\"#v:mkChunkSize\">mkChunkSize</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"mkChunkSize","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:mkChunkSize"},{"display_html":"<a href=\"#v:mkChunkSizeKB\">mkChunkSizeKB</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"mkChunkSizeKB","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:mkChunkSizeKB"},{"display_html":"<a href=\"#v:unsafeInlineIO\">unsafeInlineIO</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> a -&gt; a","name":"unsafeInlineIO","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:unsafeInlineIO"},{"display_html":"<a href=\"#v:realloc\">realloc</a> :: <span class=\"keyword\">forall</span> a. <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a)","name":"realloc","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:realloc"},{"display_html":"<a href=\"#v:shrinkToFit\">shrinkToFit</a> :: <span class=\"keyword\">forall</span> a. <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a)","name":"shrinkToFit","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:shrinkToFit"},{"display_html":"<a href=\"#v:memcpy\">memcpy</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Ptr.html#t:Ptr\" title=\"Foreign.Ptr\">Ptr</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Ptr.html#t:Ptr\" title=\"Foreign.Ptr\">Ptr</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"memcpy","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:memcpy"},{"display_html":"<a href=\"#v:memcmp\">memcmp</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Ptr.html#t:Ptr\" title=\"Foreign.Ptr\">Ptr</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Ptr.html#t:Ptr\" title=\"Foreign.Ptr\">Ptr</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"memcmp","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:memcmp"},{"display_html":"<a href=\"#v:bytesToElemCount\">bytesToElemCount</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"bytesToElemCount","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:bytesToElemCount"},{"display_html":"<a href=\"#v:unlines\">unlines</a> :: <span class=\"keyword\">forall</span> m a. (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; a -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a) -&gt; <a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Stream\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Stream</a> m a","name":"unlines","module":"Streamly.Internal.Memory.Array.Types","link":"Streamly-Internal-Memory-Array-Types.html#v:unlines"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Unfold\">Unfold</a> m a b = <a href=\"#v:Unfold\">Unfold</a> (s -&gt; m (<a href=\"Streamly-Internal-Data-Stream-StreamD-Type.html#t:Step\" title=\"Streamly.Internal.Data.Stream.StreamD.Type\">Step</a> s b)) (a -&gt; m s)","name":"Unfold Unfold","module":"Streamly.Internal.Data.Unfold.Types","link":"Streamly-Internal-Data-Unfold-Types.html#t:Unfold"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Unfold\">Unfold</a> m a b","name":"Unfold","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#t:Unfold"},{"display_html":"<a href=\"#v:lmap\">lmap</a> :: (a -&gt; c) -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m c b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b","name":"lmap","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:lmap"},{"display_html":"<a href=\"#v:lmapM\">lmapM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m c) -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m c b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b","name":"lmapM","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:lmapM"},{"display_html":"<a href=\"#v:supply\">supply</a> :: <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b -&gt; a -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Void.html#t:Void\" title=\"Data.Void\">Void</a> b","name":"supply","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:supply"},{"display_html":"<a href=\"#v:supplyFirst\">supplyFirst</a> :: <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m (a, b) c -&gt; a -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m b c","name":"supplyFirst","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:supplyFirst"},{"display_html":"<a href=\"#v:supplySecond\">supplySecond</a> :: <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m (a, b) c -&gt; b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a c","name":"supplySecond","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:supplySecond"},{"display_html":"<a href=\"#v:discardFirst\">discardFirst</a> :: <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m (c, a) b","name":"discardFirst","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:discardFirst"},{"display_html":"<a href=\"#v:discardSecond\">discardSecond</a> :: <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m (a, c) b","name":"discardSecond","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:discardSecond"},{"display_html":"<a href=\"#v:swap\">swap</a> :: <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m (a, c) b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m (c, a) b","name":"swap","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:swap"},{"display_html":"<a href=\"#v:fold\">fold</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m b c -&gt; a -&gt; m c","name":"fold","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:fold"},{"display_html":"<a href=\"#v:fromStream\">fromStream</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; t m b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Void.html#t:Void\" title=\"Data.Void\">Void</a> b","name":"fromStream","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:fromStream"},{"display_html":"<a href=\"#v:fromStream1\">fromStream1</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; t m b) -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b","name":"fromStream1","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:fromStream1"},{"display_html":"<a href=\"#v:fromStream2\">fromStream2</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; b -&gt; t m c) -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m (a, b) c","name":"fromStream2","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:fromStream2"},{"display_html":"<a href=\"#v:nilM\">nilM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m c) -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b","name":"nilM","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:nilM"},{"display_html":"<a href=\"#v:consM\">consM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m b) -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b","name":"consM","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:consM"},{"display_html":"<a href=\"#v:effect\">effect</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; m b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Void.html#t:Void\" title=\"Data.Void\">Void</a> b","name":"effect","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:effect"},{"display_html":"<a href=\"#v:singleton\">singleton</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m b) -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b","name":"singleton","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:singleton"},{"display_html":"<a href=\"#v:identity\">identity</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a a","name":"identity","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:identity"},{"display_html":"<a href=\"#v:const\">const</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; m b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b","name":"const","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:const"},{"display_html":"<a href=\"#v:replicateM\">replicateM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a a","name":"replicateM","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:replicateM"},{"display_html":"<a href=\"#v:fromList\">fromList</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m [a] a","name":"fromList","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:fromList"},{"display_html":"<a href=\"#v:fromListM\">fromListM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m [m a] a","name":"fromListM","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:fromListM"},{"display_html":"<a href=\"#v:enumerateFromStepIntegral\">enumerateFromStepIntegral</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m (a, a) a","name":"enumerateFromStepIntegral","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:enumerateFromStepIntegral"},{"display_html":"<a href=\"#v:enumerateFromToIntegral\">enumerateFromToIntegral</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> a) =&gt; a -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a a","name":"enumerateFromToIntegral","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:enumerateFromToIntegral"},{"display_html":"<a href=\"#v:enumerateFromIntegral\">enumerateFromIntegral</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Bounded\" title=\"Prelude\">Bounded</a> a) =&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a a","name":"enumerateFromIntegral","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:enumerateFromIntegral"},{"display_html":"<a href=\"#v:map\">map</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (b -&gt; c) -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a c","name":"map","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:map"},{"display_html":"<a href=\"#v:mapM\">mapM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (b -&gt; m c) -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a c","name":"mapM","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:mapM"},{"display_html":"<a href=\"#v:mapMWithInput\">mapMWithInput</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; b -&gt; m c) -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a c","name":"mapMWithInput","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:mapMWithInput"},{"display_html":"<a href=\"#v:takeWhileM\">takeWhileM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (b -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b","name":"takeWhileM","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:takeWhileM"},{"display_html":"<a href=\"#v:takeWhile\">takeWhile</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b","name":"takeWhile","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:takeWhile"},{"display_html":"<a href=\"#v:take\">take</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b","name":"take","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:take"},{"display_html":"<a href=\"#v:filter\">filter</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b","name":"filter","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:filter"},{"display_html":"<a href=\"#v:filterM\">filterM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (b -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b","name":"filterM","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:filterM"},{"display_html":"<a href=\"#v:concat\">concat</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m b c -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a c","name":"concat","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:concat"},{"display_html":"<a href=\"#v:concatMapM\">concatMapM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (b -&gt; m (<a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m () c)) -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a c","name":"concatMapM","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:concatMapM"},{"display_html":"<a href=\"#v:outerProduct\">outerProduct</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m c d -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m (a, c) (b, d)","name":"outerProduct","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:outerProduct"},{"display_html":"<a href=\"#v:gbracket\">gbracket</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m c) -&gt; (<span class=\"keyword\">forall</span> s. m s -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e s)) -&gt; (c -&gt; m d) -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m (c, e) b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m c b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b","name":"gbracket","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:gbracket"},{"display_html":"<a href=\"#v:before\">before</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m c) -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b","name":"before","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:before"},{"display_html":"<a href=\"#v:after\">after</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m c) -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b","name":"after","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:after"},{"display_html":"<a href=\"#v:onException\">onException</a> :: MonadCatch m =&gt; (a -&gt; m c) -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b","name":"onException","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:onException"},{"display_html":"<a href=\"#v:finally\">finally</a> :: MonadCatch m =&gt; (a -&gt; m c) -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b","name":"finally","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:finally"},{"display_html":"<a href=\"#v:bracket\">bracket</a> :: MonadCatch m =&gt; (a -&gt; m c) -&gt; (c -&gt; m d) -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m c b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b","name":"bracket","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:bracket"},{"display_html":"<a href=\"#v:handle\">handle</a> :: (MonadCatch m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Exception-Base.html#t:Exception\" title=\"Control.Exception.Base\">Exception</a> e) =&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m e b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Unfold.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold\">Unfold</a> m a b","name":"handle","module":"Streamly.Internal.Data.Unfold","link":"Streamly-Internal-Data-Unfold.html#v:handle"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Unfold\">Unfold</a> m a b","name":"Unfold","module":"Streamly.Data.Unfold","link":"Streamly-Data-Unfold.html#t:Unfold"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Array\">Array</a> a","name":"Array","module":"Streamly.Internal.Memory.Array","link":"Streamly-Internal-Memory-Array.html#t:Array"},{"display_html":"<a href=\"#v:fromListN\">fromListN</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; [a] -&gt; <a href=\"Streamly-Internal-Memory-Array.html#t:Array\" title=\"Streamly.Internal.Memory.Array\">Array</a> a","name":"fromListN","module":"Streamly.Internal.Memory.Array","link":"Streamly-Internal-Memory-Array.html#v:fromListN"},{"display_html":"<a href=\"#v:fromList\">fromList</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; [a] -&gt; <a href=\"Streamly-Internal-Memory-Array.html#t:Array\" title=\"Streamly.Internal.Memory.Array\">Array</a> a","name":"fromList","module":"Streamly.Internal.Memory.Array","link":"Streamly-Internal-Memory-Array.html#v:fromList"},{"display_html":"<a href=\"#v:fromStreamN\">fromStreamN</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"Streamly-Internal-Memory-Array.html#t:Array\" title=\"Streamly.Internal.Memory.Array\">Array</a> a)","name":"fromStreamN","module":"Streamly.Internal.Memory.Array","link":"Streamly-Internal-Memory-Array.html#v:fromStreamN"},{"display_html":"<a href=\"#v:fromStream\">fromStream</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"Streamly-Internal-Memory-Array.html#t:Array\" title=\"Streamly.Internal.Memory.Array\">Array</a> a)","name":"fromStream","module":"Streamly.Internal.Memory.Array","link":"Streamly-Internal-Memory-Array.html#v:fromStream"},{"display_html":"<a href=\"#v:writeN\">writeN</a> :: <span class=\"keyword\">forall</span> m a. (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a (<a href=\"Streamly-Internal-Memory-Array.html#t:Array\" title=\"Streamly.Internal.Memory.Array\">Array</a> a)","name":"writeN","module":"Streamly.Internal.Memory.Array","link":"Streamly-Internal-Memory-Array.html#v:writeN"},{"display_html":"<a href=\"#v:write\">write</a> :: <span class=\"keyword\">forall</span> m a. (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a (<a href=\"Streamly-Internal-Memory-Array.html#t:Array\" title=\"Streamly.Internal.Memory.Array\">Array</a> a)","name":"write","module":"Streamly.Internal.Memory.Array","link":"Streamly-Internal-Memory-Array.html#v:write"},{"display_html":"<a href=\"#v:toList\">toList</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; <a href=\"Streamly-Internal-Memory-Array.html#t:Array\" title=\"Streamly.Internal.Memory.Array\">Array</a> a -&gt; [a]","name":"toList","module":"Streamly.Internal.Memory.Array","link":"Streamly-Internal-Memory-Array.html#v:toList"},{"display_html":"<a href=\"#v:toStream\">toStream</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"Streamly-Internal-Memory-Array.html#t:Array\" title=\"Streamly.Internal.Memory.Array\">Array</a> a -&gt; t m a","name":"toStream","module":"Streamly.Internal.Memory.Array","link":"Streamly-Internal-Memory-Array.html#v:toStream"},{"display_html":"<a href=\"#v:toStreamRev\">toStreamRev</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"Streamly-Internal-Memory-Array.html#t:Array\" title=\"Streamly.Internal.Memory.Array\">Array</a> a -&gt; t m a","name":"toStreamRev","module":"Streamly.Internal.Memory.Array","link":"Streamly-Internal-Memory-Array.html#v:toStreamRev"},{"display_html":"<a href=\"#v:read\">read</a> :: <span class=\"keyword\">forall</span> m a. (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m (<a href=\"Streamly-Internal-Memory-Array.html#t:Array\" title=\"Streamly.Internal.Memory.Array\">Array</a> a) a","name":"read","module":"Streamly.Internal.Memory.Array","link":"Streamly-Internal-Memory-Array.html#v:read"},{"display_html":"<a href=\"#v:length\">length</a> :: <span class=\"keyword\">forall</span> a. <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; <a href=\"Streamly-Internal-Memory-Array.html#t:Array\" title=\"Streamly.Internal.Memory.Array\">Array</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"length","module":"Streamly.Internal.Memory.Array","link":"Streamly-Internal-Memory-Array.html#v:length"},{"display_html":"<a href=\"#v:null\">null</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; <a href=\"Streamly-Internal-Memory-Array.html#t:Array\" title=\"Streamly.Internal.Memory.Array\">Array</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"null","module":"Streamly.Internal.Memory.Array","link":"Streamly-Internal-Memory-Array.html#v:null"},{"display_html":"<a href=\"#v:last\">last</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; <a href=\"Streamly-Internal-Memory-Array.html#t:Array\" title=\"Streamly.Internal.Memory.Array\">Array</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a","name":"last","module":"Streamly.Internal.Memory.Array","link":"Streamly-Internal-Memory-Array.html#v:last"},{"display_html":"<a href=\"#v:readIndex\">readIndex</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; <a href=\"Streamly-Internal-Memory-Array.html#t:Array\" title=\"Streamly.Internal.Memory.Array\">Array</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a","name":"readIndex","module":"Streamly.Internal.Memory.Array","link":"Streamly-Internal-Memory-Array.html#v:readIndex"},{"display_html":"<a href=\"#v:writeIndex\">writeIndex</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"Streamly-Internal-Memory-Array.html#t:Array\" title=\"Streamly.Internal.Memory.Array\">Array</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a -&gt; m ()","name":"writeIndex","module":"Streamly.Internal.Memory.Array","link":"Streamly-Internal-Memory-Array.html#v:writeIndex"},{"display_html":"<a href=\"#v:streamTransform\">streamTransform</a> :: <span class=\"keyword\">forall</span> m a b. (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> b) =&gt; (<a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m b) -&gt; <a href=\"Streamly-Internal-Memory-Array.html#t:Array\" title=\"Streamly.Internal.Memory.Array\">Array</a> a -&gt; m (<a href=\"Streamly-Internal-Memory-Array.html#t:Array\" title=\"Streamly.Internal.Memory.Array\">Array</a> b)","name":"streamTransform","module":"Streamly.Internal.Memory.Array","link":"Streamly-Internal-Memory-Array.html#v:streamTransform"},{"display_html":"<a href=\"#v:streamFold\">streamFold</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; (<a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m b) -&gt; <a href=\"Streamly-Internal-Memory-Array.html#t:Array\" title=\"Streamly.Internal.Memory.Array\">Array</a> a -&gt; m b","name":"streamFold","module":"Streamly.Internal.Memory.Array","link":"Streamly-Internal-Memory-Array.html#v:streamFold"},{"display_html":"<a href=\"#v:fold\">fold</a> :: <span class=\"keyword\">forall</span> m a b. (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; <a href=\"Streamly-Internal-Memory-Array.html#t:Array\" title=\"Streamly.Internal.Memory.Array\">Array</a> a -&gt; m b","name":"fold","module":"Streamly.Internal.Memory.Array","link":"Streamly-Internal-Memory-Array.html#v:fold"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Array\">Array</a> a","name":"Array","module":"Streamly.Memory.Array","link":"Streamly-Memory-Array.html#t:Array"},{"display_html":"<a href=\"#v:fromListN\">fromListN</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; [a] -&gt; <a href=\"Streamly-Memory-Array.html#t:Array\" title=\"Streamly.Memory.Array\">Array</a> a","name":"fromListN","module":"Streamly.Memory.Array","link":"Streamly-Memory-Array.html#v:fromListN"},{"display_html":"<a href=\"#v:fromList\">fromList</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; [a] -&gt; <a href=\"Streamly-Memory-Array.html#t:Array\" title=\"Streamly.Memory.Array\">Array</a> a","name":"fromList","module":"Streamly.Memory.Array","link":"Streamly-Memory-Array.html#v:fromList"},{"display_html":"<a href=\"#v:writeN\">writeN</a> :: <span class=\"keyword\">forall</span> m a. (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a (<a href=\"Streamly-Memory-Array.html#t:Array\" title=\"Streamly.Memory.Array\">Array</a> a)","name":"writeN","module":"Streamly.Memory.Array","link":"Streamly-Memory-Array.html#v:writeN"},{"display_html":"<a href=\"#v:write\">write</a> :: <span class=\"keyword\">forall</span> m a. (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a (<a href=\"Streamly-Memory-Array.html#t:Array\" title=\"Streamly.Memory.Array\">Array</a> a)","name":"write","module":"Streamly.Memory.Array","link":"Streamly-Memory-Array.html#v:write"},{"display_html":"<a href=\"#v:toList\">toList</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; <a href=\"Streamly-Memory-Array.html#t:Array\" title=\"Streamly.Memory.Array\">Array</a> a -&gt; [a]","name":"toList","module":"Streamly.Memory.Array","link":"Streamly-Memory-Array.html#v:toList"},{"display_html":"<a href=\"#v:read\">read</a> :: <span class=\"keyword\">forall</span> m a. (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m (<a href=\"Streamly-Memory-Array.html#t:Array\" title=\"Streamly.Memory.Array\">Array</a> a) a","name":"read","module":"Streamly.Memory.Array","link":"Streamly-Memory-Array.html#v:read"},{"display_html":"<a href=\"#v:length\">length</a> :: <span class=\"keyword\">forall</span> a. <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; <a href=\"Streamly-Memory-Array.html#t:Array\" title=\"Streamly.Memory.Array\">Array</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"length","module":"Streamly.Memory.Array","link":"Streamly-Memory-Array.html#v:length"},{"display_html":"<a href=\"#v:nil\">nil</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; t m a","name":"nil","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:nil"},{"display_html":"<a href=\"#v:nilM\">nilM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; m b -&gt; t m a","name":"nilM","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:nilM"},{"display_html":"<a href=\"#v:cons\">cons</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; a -&gt; t m a -&gt; t m a","name":"cons","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:cons"},{"display_html":"<a href=\"#v:.:\">(.:)</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; a -&gt; t m a -&gt; t m a","name":".:","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:.:"},{"display_html":"<a href=\"#v:consM\">consM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; m a -&gt; t m a -&gt; t m a","name":"consM","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:consM"},{"display_html":"<a href=\"#v:-124-:\">(|:)</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; m a -&gt; t m a -&gt; t m a","name":"|:","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:-124-:"},{"display_html":"<a href=\"#v:yield\">yield</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; a -&gt; t m a","name":"yield","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:yield"},{"display_html":"<a href=\"#v:yieldM\">yieldM</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; m a -&gt; t m a","name":"yieldM","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:yieldM"},{"display_html":"<a href=\"#v:repeat\">repeat</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; a -&gt; t m a","name":"repeat","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:repeat"},{"display_html":"<a href=\"#v:repeatM\">repeatM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; m a -&gt; t m a","name":"repeatM","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:repeatM"},{"display_html":"<a href=\"#v:replicate\">replicate</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a -&gt; t m a","name":"replicate","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:replicate"},{"display_html":"<a href=\"#v:replicateM\">replicateM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; m a -&gt; t m a","name":"replicateM","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:replicateM"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Enum\" title=\"Prelude\">Enum</a> a =&gt; <a href=\"#t:Enumerable\">Enumerable</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:enumerateFrom\">enumerateFrom</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; a -&gt; t m a</li><li><a href=\"#v:enumerateFromTo\">enumerateFromTo</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; a -&gt; a -&gt; t m a</li><li><a href=\"#v:enumerateFromThen\">enumerateFromThen</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; a -&gt; a -&gt; t m a</li><li><a href=\"#v:enumerateFromThenTo\">enumerateFromThenTo</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; a -&gt; a -&gt; a -&gt; t m a</li></ul>","name":"Enumerable enumerateFromThenTo enumerateFrom enumerateFromTo enumerateFromThen","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#t:Enumerable"},{"display_html":"<a href=\"#v:enumerate\">enumerate</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Bounded\" title=\"Prelude\">Bounded</a> a, <a href=\"Streamly-Internal-Prelude.html#t:Enumerable\" title=\"Streamly.Internal.Prelude\">Enumerable</a> a) =&gt; t m a","name":"enumerate","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:enumerate"},{"display_html":"<a href=\"#v:enumerateTo\">enumerateTo</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Bounded\" title=\"Prelude\">Bounded</a> a, <a href=\"Streamly-Internal-Prelude.html#t:Enumerable\" title=\"Streamly.Internal.Prelude\">Enumerable</a> a) =&gt; a -&gt; t m a","name":"enumerateTo","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:enumerateTo"},{"display_html":"<a href=\"#v:unfoldr\">unfoldr</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; (b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> (a, b)) -&gt; b -&gt; t m a","name":"unfoldr","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:unfoldr"},{"display_html":"<a href=\"#v:unfoldrM\">unfoldrM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; (b -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> (a, b))) -&gt; b -&gt; t m a","name":"unfoldrM","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:unfoldrM"},{"display_html":"<a href=\"#v:unfold\">unfold</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m a b -&gt; a -&gt; t m b","name":"unfold","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:unfold"},{"display_html":"<a href=\"#v:iterate\">iterate</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; (a -&gt; a) -&gt; a -&gt; t m a","name":"iterate","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:iterate"},{"display_html":"<a href=\"#v:iterateM\">iterateM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; (a -&gt; m a) -&gt; m a -&gt; t m a","name":"iterateM","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:iterateM"},{"display_html":"<a href=\"#v:fromIndices\">fromIndices</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a) -&gt; t m a","name":"fromIndices","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:fromIndices"},{"display_html":"<a href=\"#v:fromIndicesM\">fromIndicesM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; m a) -&gt; t m a","name":"fromIndicesM","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:fromIndicesM"},{"display_html":"<a href=\"#v:fromList\">fromList</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; [a] -&gt; t m a","name":"fromList","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:fromList"},{"display_html":"<a href=\"#v:fromListM\">fromListM</a> :: (<a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; [m a] -&gt; t m a","name":"fromListM","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:fromListM"},{"display_html":"<a href=\"#v:fromFoldable\">fromFoldable</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> f) =&gt; f a -&gt; t m a","name":"fromFoldable","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:fromFoldable"},{"display_html":"<a href=\"#v:fromFoldableM\">fromFoldableM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> f) =&gt; f (m a) -&gt; t m a","name":"fromFoldableM","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:fromFoldableM"},{"display_html":"<a href=\"#v:uncons\">uncons</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> (a, t m a))","name":"uncons","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:uncons"},{"display_html":"<a href=\"#v:tail\">tail</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> (t m a))","name":"tail","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:tail"},{"display_html":"<a href=\"#v:init\">init</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> (t m a))","name":"init","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:init"},{"display_html":"<a href=\"#v:foldrM\">foldrM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m b -&gt; m b) -&gt; m b -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m b","name":"foldrM","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:foldrM"},{"display_html":"<a href=\"#v:foldrS\">foldrS</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; (a -&gt; t m b -&gt; t m b) -&gt; t m b -&gt; t m a -&gt; t m b","name":"foldrS","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:foldrS"},{"display_html":"<a href=\"#v:foldrT\">foldrT</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> (s m), <a href=\"https://hackage.haskell.org/package/transformers-0.5.5.0/docs/Control-Monad-Trans-Class.html#t:MonadTrans\" title=\"Control.Monad.Trans.Class\">MonadTrans</a> s) =&gt; (a -&gt; s m b -&gt; s m b) -&gt; s m b -&gt; t m a -&gt; s m b","name":"foldrT","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:foldrT"},{"display_html":"<a href=\"#v:foldr\">foldr</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; b -&gt; b) -&gt; b -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m b","name":"foldr","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:foldr"},{"display_html":"<a href=\"#v:foldl-39-\">foldl'</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (b -&gt; a -&gt; b) -&gt; b -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m b","name":"foldl'","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:foldl-39-"},{"display_html":"<a href=\"#v:foldl1-39-\">foldl1'</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; a -&gt; a) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"foldl1'","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:foldl1-39-"},{"display_html":"<a href=\"#v:foldlM-39-\">foldlM'</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (b -&gt; a -&gt; m b) -&gt; b -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m b","name":"foldlM'","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:foldlM-39-"},{"display_html":"<a href=\"#v:drain\">drain</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m ()","name":"drain","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:drain"},{"display_html":"<a href=\"#v:last\">last</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"last","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:last"},{"display_html":"<a href=\"#v:length\">length</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"length","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:length"},{"display_html":"<a href=\"#v:sum\">sum</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a) =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m a","name":"sum","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:sum"},{"display_html":"<a href=\"#v:product\">product</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a) =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m a","name":"product","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:product"},{"display_html":"<a href=\"#v:maximumBy\">maximumBy</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"maximumBy","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:maximumBy"},{"display_html":"<a href=\"#v:maximum\">maximum</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ord\" title=\"Data.Ord\">Ord</a> a) =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"maximum","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:maximum"},{"display_html":"<a href=\"#v:minimumBy\">minimumBy</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"minimumBy","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:minimumBy"},{"display_html":"<a href=\"#v:minimum\">minimum</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ord\" title=\"Data.Ord\">Ord</a> a) =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"minimum","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:minimum"},{"display_html":"<a href=\"#v:the\">the</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"the","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:the"},{"display_html":"<a href=\"#v:drainN\">drainN</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m ()","name":"drainN","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:drainN"},{"display_html":"<a href=\"#v:drainWhile\">drainWhile</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m ()","name":"drainWhile","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:drainWhile"},{"display_html":"<a href=\"#v:-33--33-\">(!!)</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"!!","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:-33--33-"},{"display_html":"<a href=\"#v:head\">head</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"head","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:head"},{"display_html":"<a href=\"#v:findM\">findM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"findM","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:findM"},{"display_html":"<a href=\"#v:find\">find</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"find","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:find"},{"display_html":"<a href=\"#v:lookup\">lookup</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a) =&gt; a -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m (a, b) -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> b)","name":"lookup","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:lookup"},{"display_html":"<a href=\"#v:findIndex\">findIndex</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>)","name":"findIndex","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:findIndex"},{"display_html":"<a href=\"#v:elemIndex\">elemIndex</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a) =&gt; a -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>)","name":"elemIndex","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:elemIndex"},{"display_html":"<a href=\"#v:null\">null</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"null","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:null"},{"display_html":"<a href=\"#v:elem\">elem</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a) =&gt; a -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"elem","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:elem"},{"display_html":"<a href=\"#v:notElem\">notElem</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a) =&gt; a -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"notElem","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:notElem"},{"display_html":"<a href=\"#v:all\">all</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"all","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:all"},{"display_html":"<a href=\"#v:any\">any</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"any","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:any"},{"display_html":"<a href=\"#v:and\">and</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"and","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:and"},{"display_html":"<a href=\"#v:or\">or</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"or","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:or"},{"display_html":"<a href=\"#v:toList\">toList</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m [a]","name":"toList","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:toList"},{"display_html":"<a href=\"#v:toListRev\">toListRev</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m [a]","name":"toListRev","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:toListRev"},{"display_html":"<a href=\"#v:toPure\">toPure</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Functor-Identity.html#t:Identity\" title=\"Data.Functor.Identity\">Identity</a> a)","name":"toPure","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:toPure"},{"display_html":"<a href=\"#v:toPureRev\">toPureRev</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Functor-Identity.html#t:Identity\" title=\"Data.Functor.Identity\">Identity</a> a)","name":"toPureRev","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:toPureRev"},{"display_html":"<a href=\"#v:fold\">fold</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m b","name":"fold","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:fold"},{"display_html":"<a href=\"#v:toStream\">toStream</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a (<a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Functor-Identity.html#t:Identity\" title=\"Data.Functor.Identity\">Identity</a> a)","name":"toStream","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:toStream"},{"display_html":"<a href=\"#v:toStreamRev\">toStreamRev</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a (<a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Functor-Identity.html#t:Identity\" title=\"Data.Functor.Identity\">Identity</a> a)","name":"toStreamRev","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:toStreamRev"},{"display_html":"<a href=\"#v:transform\">transform</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"Streamly-Internal-Data-Pipe-Types.html#t:Pipe\" title=\"Streamly.Internal.Data.Pipe.Types\">Pipe</a> m a b -&gt; t m a -&gt; t m b","name":"transform","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:transform"},{"display_html":"<a href=\"#v:map\">map</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; b) -&gt; t m a -&gt; t m b","name":"map","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:map"},{"display_html":"<a href=\"#v:sequence\">sequence</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; t m (m a) -&gt; t m a","name":"sequence","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:sequence"},{"display_html":"<a href=\"#v:mapM\">mapM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; (a -&gt; m b) -&gt; t m a -&gt; t m b","name":"mapM","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:mapM"},{"display_html":"<a href=\"#v:mapM_\">mapM_</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m b) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m ()","name":"mapM_","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:mapM_"},{"display_html":"<a href=\"#v:scanl-39-\">scanl'</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (b -&gt; a -&gt; b) -&gt; b -&gt; t m a -&gt; t m b","name":"scanl'","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:scanl-39-"},{"display_html":"<a href=\"#v:scanlM-39-\">scanlM'</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (b -&gt; a -&gt; m b) -&gt; b -&gt; t m a -&gt; t m b","name":"scanlM'","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:scanlM-39-"},{"display_html":"<a href=\"#v:postscanl-39-\">postscanl'</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (b -&gt; a -&gt; b) -&gt; b -&gt; t m a -&gt; t m b","name":"postscanl'","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:postscanl-39-"},{"display_html":"<a href=\"#v:postscanlM-39-\">postscanlM'</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (b -&gt; a -&gt; m b) -&gt; b -&gt; t m a -&gt; t m b","name":"postscanlM'","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:postscanlM-39-"},{"display_html":"<a href=\"#v:prescanl-39-\">prescanl'</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (b -&gt; a -&gt; b) -&gt; b -&gt; t m a -&gt; t m b","name":"prescanl'","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:prescanl-39-"},{"display_html":"<a href=\"#v:prescanlM-39-\">prescanlM'</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (b -&gt; a -&gt; m b) -&gt; m b -&gt; t m a -&gt; t m b","name":"prescanlM'","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:prescanlM-39-"},{"display_html":"<a href=\"#v:scanl1-39-\">scanl1'</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; a -&gt; a) -&gt; t m a -&gt; t m a","name":"scanl1'","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:scanl1-39-"},{"display_html":"<a href=\"#v:scanl1M-39-\">scanl1M'</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; a -&gt; m a) -&gt; t m a -&gt; t m a","name":"scanl1M'","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:scanl1M-39-"},{"display_html":"<a href=\"#v:scan\">scan</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m a -&gt; t m b","name":"scan","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:scan"},{"display_html":"<a href=\"#v:postscan\">postscan</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m a -&gt; t m b","name":"postscan","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:postscan"},{"display_html":"<a href=\"#v:indexed\">indexed</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; t m a -&gt; t m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>, a)","name":"indexed","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:indexed"},{"display_html":"<a href=\"#v:indexedR\">indexedR</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; t m a -&gt; t m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>, a)","name":"indexedR","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:indexedR"},{"display_html":"<a href=\"#v:filter\">filter</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; t m a -&gt; t m a","name":"filter","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:filter"},{"display_html":"<a href=\"#v:filterM\">filterM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; t m a -&gt; t m a","name":"filterM","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:filterM"},{"display_html":"<a href=\"#v:take\">take</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; t m a -&gt; t m a","name":"take","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:take"},{"display_html":"<a href=\"#v:takeWhile\">takeWhile</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; t m a -&gt; t m a","name":"takeWhile","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:takeWhile"},{"display_html":"<a href=\"#v:takeWhileM\">takeWhileM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; t m a -&gt; t m a","name":"takeWhileM","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:takeWhileM"},{"display_html":"<a href=\"#v:drop\">drop</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; t m a -&gt; t m a","name":"drop","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:drop"},{"display_html":"<a href=\"#v:dropWhile\">dropWhile</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; t m a -&gt; t m a","name":"dropWhile","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:dropWhile"},{"display_html":"<a href=\"#v:dropWhileM\">dropWhileM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; t m a -&gt; t m a","name":"dropWhileM","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:dropWhileM"},{"display_html":"<a href=\"#v:deleteBy\">deleteBy</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; a -&gt; t m a -&gt; t m a","name":"deleteBy","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:deleteBy"},{"display_html":"<a href=\"#v:uniq\">uniq</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; t m a -&gt; t m a","name":"uniq","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:uniq"},{"display_html":"<a href=\"#v:mapMaybe\">mapMaybe</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> b) -&gt; t m a -&gt; t m b","name":"mapMaybe","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:mapMaybe"},{"display_html":"<a href=\"#v:mapMaybeM\">mapMaybeM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> (t m)) =&gt; (a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> b)) -&gt; t m a -&gt; t m b","name":"mapMaybeM","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:mapMaybeM"},{"display_html":"<a href=\"#v:findIndices\">findIndices</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; t m a -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"findIndices","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:findIndices"},{"display_html":"<a href=\"#v:elemIndices\">elemIndices</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; a -&gt; t m a -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"elemIndices","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:elemIndices"},{"display_html":"<a href=\"#v:insertBy\">insertBy</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; a -&gt; t m a -&gt; t m a","name":"insertBy","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:insertBy"},{"display_html":"<a href=\"#v:intersperseM\">intersperseM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; m a -&gt; t m a -&gt; t m a","name":"intersperseM","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:intersperseM"},{"display_html":"<a href=\"#v:intersperse\">intersperse</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; a -&gt; t m a -&gt; t m a","name":"intersperse","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:intersperse"},{"display_html":"<a href=\"#v:intersperseSuffix\">intersperseSuffix</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; m a -&gt; t m a -&gt; t m a","name":"intersperseSuffix","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:intersperseSuffix"},{"display_html":"<a href=\"#v:interjectSuffix\">interjectSuffix</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Double\" title=\"Prelude\">Double</a> -&gt; m a -&gt; t m a -&gt; t m a","name":"interjectSuffix","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:interjectSuffix"},{"display_html":"<a href=\"#v:reverse\">reverse</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; t m a -&gt; t m a","name":"reverse","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:reverse"},{"display_html":"<a href=\"#v:reverse-39-\">reverse'</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; t m a -&gt; t m a","name":"reverse'","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:reverse-39-"},{"display_html":"<a href=\"#v:append\">append</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; t m b -&gt; t m b -&gt; t m b","name":"append","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:append"},{"display_html":"<a href=\"#v:interleave\">interleave</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; t m b -&gt; t m b -&gt; t m b","name":"interleave","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:interleave"},{"display_html":"<a href=\"#v:interleaveMin\">interleaveMin</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; t m b -&gt; t m b -&gt; t m b","name":"interleaveMin","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:interleaveMin"},{"display_html":"<a href=\"#v:interleaveSuffix\">interleaveSuffix</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; t m b -&gt; t m b -&gt; t m b","name":"interleaveSuffix","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:interleaveSuffix"},{"display_html":"<a href=\"#v:interleaveInfix\">interleaveInfix</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; t m b -&gt; t m b -&gt; t m b","name":"interleaveInfix","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:interleaveInfix"},{"display_html":"<a href=\"#v:wSerialFst\">wSerialFst</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; t m a -&gt; t m a -&gt; t m a","name":"wSerialFst","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:wSerialFst"},{"display_html":"<a href=\"#v:wSerialMin\">wSerialMin</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; t m a -&gt; t m a -&gt; t m a","name":"wSerialMin","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:wSerialMin"},{"display_html":"<a href=\"#v:roundrobin\">roundrobin</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; t m b -&gt; t m b -&gt; t m b","name":"roundrobin","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:roundrobin"},{"display_html":"<a href=\"#v:parallelFst\">parallelFst</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; t m a -&gt; t m a -&gt; t m a","name":"parallelFst","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:parallelFst"},{"display_html":"<a href=\"#v:parallelMin\">parallelMin</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; t m a -&gt; t m a -&gt; t m a","name":"parallelMin","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:parallelMin"},{"display_html":"<a href=\"#v:mergeBy\">mergeBy</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; t m a -&gt; t m a -&gt; t m a","name":"mergeBy","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:mergeBy"},{"display_html":"<a href=\"#v:mergeByM\">mergeByM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; t m a -&gt; t m a -&gt; t m a","name":"mergeByM","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:mergeByM"},{"display_html":"<a href=\"#v:mergeAsyncBy\">mergeAsyncBy</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; (a -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; t m a -&gt; t m a -&gt; t m a","name":"mergeAsyncBy","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:mergeAsyncBy"},{"display_html":"<a href=\"#v:mergeAsyncByM\">mergeAsyncByM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; (a -&gt; a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; t m a -&gt; t m a -&gt; t m a","name":"mergeAsyncByM","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:mergeAsyncByM"},{"display_html":"<a href=\"#v:zipWith\">zipWith</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; b -&gt; c) -&gt; t m a -&gt; t m b -&gt; t m c","name":"zipWith","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:zipWith"},{"display_html":"<a href=\"#v:zipWithM\">zipWithM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; b -&gt; m c) -&gt; t m a -&gt; t m b -&gt; t m c","name":"zipWithM","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:zipWithM"},{"display_html":"<a href=\"#v:zipAsyncWith\">zipAsyncWith</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; (a -&gt; b -&gt; c) -&gt; t m a -&gt; t m b -&gt; t m c","name":"zipAsyncWith","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:zipAsyncWith"},{"display_html":"<a href=\"#v:zipAsyncWithM\">zipAsyncWithM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; (a -&gt; b -&gt; m c) -&gt; t m a -&gt; t m b -&gt; t m c","name":"zipAsyncWithM","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:zipAsyncWithM"},{"display_html":"<a href=\"#v:concatMapM\">concatMapM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; m (t m b)) -&gt; t m a -&gt; t m b","name":"concatMapM","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:concatMapM"},{"display_html":"<a href=\"#v:concatUnfold\">concatUnfold</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m a b -&gt; t m a -&gt; t m b","name":"concatUnfold","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:concatUnfold"},{"display_html":"<a href=\"#v:concatUnfoldInterleave\">concatUnfoldInterleave</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m a b -&gt; t m a -&gt; t m b","name":"concatUnfoldInterleave","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:concatUnfoldInterleave"},{"display_html":"<a href=\"#v:concatUnfoldRoundrobin\">concatUnfoldRoundrobin</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m a b -&gt; t m a -&gt; t m b","name":"concatUnfoldRoundrobin","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:concatUnfoldRoundrobin"},{"display_html":"<a href=\"#v:concatMap\">concatMap</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; t m b) -&gt; t m a -&gt; t m b","name":"concatMap","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:concatMap"},{"display_html":"<a href=\"#v:concatMapWith\">concatMapWith</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; (<span class=\"keyword\">forall</span> c. t m c -&gt; t m c -&gt; t m c) -&gt; (a -&gt; t m b) -&gt; t m a -&gt; t m b","name":"concatMapWith","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:concatMapWith"},{"display_html":"<a href=\"#v:gintercalate\">gintercalate</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m a c -&gt; t m a -&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m b c -&gt; t m b -&gt; t m c","name":"gintercalate","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:gintercalate"},{"display_html":"<a href=\"#v:gintercalateSuffix\">gintercalateSuffix</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m a c -&gt; t m a -&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m b c -&gt; t m b -&gt; t m c","name":"gintercalateSuffix","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:gintercalateSuffix"},{"display_html":"<a href=\"#v:intercalate\">intercalate</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; b -&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m b c -&gt; t m b -&gt; t m c","name":"intercalate","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:intercalate"},{"display_html":"<a href=\"#v:intercalateSuffix\">intercalateSuffix</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; b -&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m b c -&gt; t m b -&gt; t m c","name":"intercalateSuffix","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:intercalateSuffix"},{"display_html":"<a href=\"#v:interpose\">interpose</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; c -&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m b c -&gt; t m b -&gt; t m c","name":"interpose","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:interpose"},{"display_html":"<a href=\"#v:interposeSuffix\">interposeSuffix</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; c -&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m b c -&gt; t m b -&gt; t m c","name":"interposeSuffix","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:interposeSuffix"},{"display_html":"<a href=\"#v:splitAt\">splitAt</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a c -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a (b, c)","name":"splitAt","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:splitAt"},{"display_html":"<a href=\"#v:span\">span</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a c -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a (b, c)","name":"span","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:span"},{"display_html":"<a href=\"#v:break\">break</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a c -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a (b, c)","name":"break","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:break"},{"display_html":"<a href=\"#v:spanBy\">spanBy</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a c -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a (b, c)","name":"spanBy","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:spanBy"},{"display_html":"<a href=\"#v:spanByRolling\">spanByRolling</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a c -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a (b, c)","name":"spanByRolling","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:spanByRolling"},{"display_html":"<a href=\"#v:chunksOf\">chunksOf</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m a -&gt; t m b","name":"chunksOf","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:chunksOf"},{"display_html":"<a href=\"#v:chunksOf2\">chunksOf2</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; m c -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold2\" title=\"Streamly.Internal.Data.Fold.Types\">Fold2</a> m c a b -&gt; t m a -&gt; t m b","name":"chunksOf2","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:chunksOf2"},{"display_html":"<a href=\"#v:arraysOf\">arraysOf</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; t m a -&gt; t m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a)","name":"arraysOf","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:arraysOf"},{"display_html":"<a href=\"#v:intervalsOf\">intervalsOf</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Double\" title=\"Prelude\">Double</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m a -&gt; t m b","name":"intervalsOf","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:intervalsOf"},{"display_html":"<a href=\"#v:splitOn\">splitOn</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m a -&gt; t m b","name":"splitOn","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:splitOn"},{"display_html":"<a href=\"#v:splitOnSuffix\">splitOnSuffix</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m a -&gt; t m b","name":"splitOnSuffix","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:splitOnSuffix"},{"display_html":"<a href=\"#v:splitWithSuffix\">splitWithSuffix</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m a -&gt; t m b","name":"splitWithSuffix","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:splitWithSuffix"},{"display_html":"<a href=\"#v:wordsBy\">wordsBy</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m a -&gt; t m b","name":"wordsBy","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:wordsBy"},{"display_html":"<a href=\"#v:splitOnSeq\">splitOnSeq</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Enum\" title=\"Prelude\">Enum</a> a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a) =&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m a -&gt; t m b","name":"splitOnSeq","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:splitOnSeq"},{"display_html":"<a href=\"#v:splitOnSuffixSeq\">splitOnSuffixSeq</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Enum\" title=\"Prelude\">Enum</a> a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a) =&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m a -&gt; t m b","name":"splitOnSuffixSeq","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:splitOnSuffixSeq"},{"display_html":"<a href=\"#v:splitBySeq\">splitBySeq</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Enum\" title=\"Prelude\">Enum</a> a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a) =&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m a -&gt; t m b","name":"splitBySeq","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:splitBySeq"},{"display_html":"<a href=\"#v:splitWithSuffixSeq\">splitWithSuffixSeq</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Enum\" title=\"Prelude\">Enum</a> a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a) =&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m a -&gt; t m b","name":"splitWithSuffixSeq","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:splitWithSuffixSeq"},{"display_html":"<a href=\"#v:splitInnerBy\">splitInnerBy</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (f a -&gt; m (f a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> (f a))) -&gt; (f a -&gt; f a -&gt; m (f a)) -&gt; t m (f a) -&gt; t m (f a)","name":"splitInnerBy","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:splitInnerBy"},{"display_html":"<a href=\"#v:splitInnerBySuffix\">splitInnerBySuffix</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> (f a), <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Monoid.html#t:Monoid\" title=\"Data.Monoid\">Monoid</a> (f a)) =&gt; (f a -&gt; m (f a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> (f a))) -&gt; (f a -&gt; f a -&gt; m (f a)) -&gt; t m (f a) -&gt; t m (f a)","name":"splitInnerBySuffix","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:splitInnerBySuffix"},{"display_html":"<a href=\"#v:groups\">groups</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a) =&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m a -&gt; t m b","name":"groups","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:groups"},{"display_html":"<a href=\"#v:groupsBy\">groupsBy</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m a -&gt; t m b","name":"groupsBy","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:groupsBy"},{"display_html":"<a href=\"#v:groupsByRolling\">groupsByRolling</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m a -&gt; t m b","name":"groupsByRolling","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:groupsByRolling"},{"display_html":"<a href=\"#v:trace\">trace</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; (a -&gt; m b) -&gt; t m a -&gt; t m a","name":"trace","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:trace"},{"display_html":"<a href=\"#v:tap\">tap</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m a -&gt; t m a","name":"tap","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:tap"},{"display_html":"<a href=\"#v:tapAsync\">tapAsync</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; (t m a -&gt; m b) -&gt; t m a -&gt; t m a","name":"tapAsync","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:tapAsync"},{"display_html":"<a href=\"#v:classifySessionsBy\">classifySessionsBy</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ord\" title=\"Data.Ord\">Ord</a> k) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Double\" title=\"Prelude\">Double</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Double\" title=\"Prelude\">Double</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m (k, a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>, <a href=\"Streamly-Internal-Data-Time-Units.html#t:AbsTime\" title=\"Streamly.Internal.Data.Time.Units\">AbsTime</a>) -&gt; t m (k, b)","name":"classifySessionsBy","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:classifySessionsBy"},{"display_html":"<a href=\"#v:classifySessionsOf\">classifySessionsOf</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ord\" title=\"Data.Ord\">Ord</a> k) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Double\" title=\"Prelude\">Double</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m (k, a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>, <a href=\"Streamly-Internal-Data-Time-Units.html#t:AbsTime\" title=\"Streamly.Internal.Data.Time.Units\">AbsTime</a>) -&gt; t m (k, b)","name":"classifySessionsOf","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:classifySessionsOf"},{"display_html":"<a href=\"#v:classifyKeepAliveSessions\">classifyKeepAliveSessions</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ord\" title=\"Data.Ord\">Ord</a> k) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Double\" title=\"Prelude\">Double</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m (k, a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>, <a href=\"Streamly-Internal-Data-Time-Units.html#t:AbsTime\" title=\"Streamly.Internal.Data.Time.Units\">AbsTime</a>) -&gt; t m (k, b)","name":"classifyKeepAliveSessions","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:classifyKeepAliveSessions"},{"display_html":"<a href=\"#v:foldWith\">foldWith</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> f) =&gt; (t m a -&gt; t m a -&gt; t m a) -&gt; f (t m a) -&gt; t m a","name":"foldWith","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:foldWith"},{"display_html":"<a href=\"#v:foldMapWith\">foldMapWith</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> f) =&gt; (t m b -&gt; t m b -&gt; t m b) -&gt; (a -&gt; t m b) -&gt; f a -&gt; t m b","name":"foldMapWith","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:foldMapWith"},{"display_html":"<a href=\"#v:forEachWith\">forEachWith</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> f) =&gt; (t m b -&gt; t m b -&gt; t m b) -&gt; f a -&gt; (a -&gt; t m b) -&gt; t m b","name":"forEachWith","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:forEachWith"},{"display_html":"<a href=\"#v:eqBy\">eqBy</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; t m a -&gt; t m b -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"eqBy","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:eqBy"},{"display_html":"<a href=\"#v:cmpBy\">cmpBy</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; t m a -&gt; t m b -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>","name":"cmpBy","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:cmpBy"},{"display_html":"<a href=\"#v:isPrefixOf\">isPrefixOf</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; t m a -&gt; t m a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"isPrefixOf","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:isPrefixOf"},{"display_html":"<a href=\"#v:isSubsequenceOf\">isSubsequenceOf</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; t m a -&gt; t m a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"isSubsequenceOf","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:isSubsequenceOf"},{"display_html":"<a href=\"#v:stripPrefix\">stripPrefix</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; t m a -&gt; t m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> (t m a))","name":"stripPrefix","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:stripPrefix"},{"display_html":"<a href=\"#v:before\">before</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; m b -&gt; t m a -&gt; t m a","name":"before","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:before"},{"display_html":"<a href=\"#v:after\">after</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; m b -&gt; t m a -&gt; t m a","name":"after","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:after"},{"display_html":"<a href=\"#v:bracket\">bracket</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, MonadCatch m) =&gt; m b -&gt; (b -&gt; m c) -&gt; (b -&gt; t m a) -&gt; t m a","name":"bracket","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:bracket"},{"display_html":"<a href=\"#v:onException\">onException</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, MonadCatch m) =&gt; m b -&gt; t m a -&gt; t m a","name":"onException","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:onException"},{"display_html":"<a href=\"#v:finally\">finally</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, MonadCatch m) =&gt; m b -&gt; t m a -&gt; t m a","name":"finally","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:finally"},{"display_html":"<a href=\"#v:handle\">handle</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, MonadCatch m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Exception-Base.html#t:Exception\" title=\"Control.Exception.Base\">Exception</a> e) =&gt; (e -&gt; t m a) -&gt; t m a -&gt; t m a","name":"handle","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:handle"},{"display_html":"<a href=\"#v:hoist\">hoist</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> n) =&gt; (<span class=\"keyword\">forall</span> x. m x -&gt; n x) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> n a","name":"hoist","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:hoist"},{"display_html":"<a href=\"#v:generally\">generally</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; t <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Functor-Identity.html#t:Identity\" title=\"Data.Functor.Identity\">Identity</a> a -&gt; t m a","name":"generally","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:generally"},{"display_html":"<a href=\"#v:liftInner\">liftInner</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/transformers-0.5.5.0/docs/Control-Monad-Trans-Class.html#t:MonadTrans\" title=\"Control.Monad.Trans.Class\">MonadTrans</a> tr, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> (tr m)) =&gt; t m a -&gt; t (tr m) a","name":"liftInner","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:liftInner"},{"display_html":"<a href=\"#v:runReaderT\">runReaderT</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; s -&gt; t (<a href=\"https://hackage.haskell.org/package/mtl-2.2.2/docs/Control-Monad-Reader.html#t:ReaderT\" title=\"Control.Monad.Reader\">ReaderT</a> s m) a -&gt; t m a","name":"runReaderT","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:runReaderT"},{"display_html":"<a href=\"#v:evalStateT\">evalStateT</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; s -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> (<a href=\"https://hackage.haskell.org/package/mtl-2.2.2/docs/Control-Monad-State-Strict.html#t:StateT\" title=\"Control.Monad.State.Strict\">StateT</a> s m) a -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a","name":"evalStateT","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:evalStateT"},{"display_html":"<a href=\"#v:usingStateT\">usingStateT</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; s -&gt; (<a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> (<a href=\"https://hackage.haskell.org/package/mtl-2.2.2/docs/Control-Monad-State-Strict.html#t:StateT\" title=\"Control.Monad.State.Strict\">StateT</a> s m) a -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> (<a href=\"https://hackage.haskell.org/package/mtl-2.2.2/docs/Control-Monad-State-Strict.html#t:StateT\" title=\"Control.Monad.State.Strict\">StateT</a> s m) a) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a","name":"usingStateT","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:usingStateT"},{"display_html":"<a href=\"#v:runStateT\">runStateT</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; s -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> (<a href=\"https://hackage.haskell.org/package/mtl-2.2.2/docs/Control-Monad-State-Strict.html#t:StateT\" title=\"Control.Monad.State.Strict\">StateT</a> s m) a -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m (s, a)","name":"runStateT","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:runStateT"},{"display_html":"<a href=\"#v:inspectMode\">inspectMode</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; t m a -&gt; t m a","name":"inspectMode","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:inspectMode"},{"display_html":"<a href=\"#v:once\">once</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; m a -&gt; t m a","name":"once","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:once"},{"display_html":"<a href=\"#v:each\">each</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> f) =&gt; f a -&gt; t m a","name":"each","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:each"},{"display_html":"<a href=\"#v:scanx\">scanx</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (x -&gt; a -&gt; x) -&gt; x -&gt; (x -&gt; b) -&gt; t m a -&gt; t m b","name":"scanx","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:scanx"},{"display_html":"<a href=\"#v:foldx\">foldx</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (x -&gt; a -&gt; x) -&gt; x -&gt; (x -&gt; b) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m b","name":"foldx","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:foldx"},{"display_html":"<a href=\"#v:foldxM\">foldxM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (x -&gt; a -&gt; m x) -&gt; m x -&gt; (x -&gt; m b) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m b","name":"foldxM","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:foldxM"},{"display_html":"<a href=\"#v:foldr1\">foldr1</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; a -&gt; a) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"foldr1","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:foldr1"},{"display_html":"<a href=\"#v:runStream\">runStream</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m ()","name":"runStream","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:runStream"},{"display_html":"<a href=\"#v:runN\">runN</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m ()","name":"runN","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:runN"},{"display_html":"<a href=\"#v:runWhile\">runWhile</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m ()","name":"runWhile","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:runWhile"},{"display_html":"<a href=\"#v:fromHandle\">fromHandle</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a> -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"fromHandle","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:fromHandle"},{"display_html":"<a href=\"#v:toHandle\">toHandle</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a> -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; m ()","name":"toHandle","module":"Streamly.Internal.Prelude","link":"Streamly-Internal-Prelude.html#v:toHandle"},{"display_html":"<a href=\"#v:nil\">nil</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; t m a","name":"nil","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:nil"},{"display_html":"<a href=\"#v:cons\">cons</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; a -&gt; t m a -&gt; t m a","name":"cons","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:cons"},{"display_html":"<a href=\"#v:.:\">(.:)</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; a -&gt; t m a -&gt; t m a","name":".:","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:.:"},{"display_html":"<a href=\"#v:consM\">consM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; m a -&gt; t m a -&gt; t m a","name":"consM","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:consM"},{"display_html":"<a href=\"#v:-124-:\">(|:)</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; m a -&gt; t m a -&gt; t m a","name":"|:","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:-124-:"},{"display_html":"<a href=\"#v:yield\">yield</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; a -&gt; t m a","name":"yield","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:yield"},{"display_html":"<a href=\"#v:yieldM\">yieldM</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; m a -&gt; t m a","name":"yieldM","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:yieldM"},{"display_html":"<a href=\"#v:repeat\">repeat</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; a -&gt; t m a","name":"repeat","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:repeat"},{"display_html":"<a href=\"#v:repeatM\">repeatM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; m a -&gt; t m a","name":"repeatM","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:repeatM"},{"display_html":"<a href=\"#v:replicate\">replicate</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a -&gt; t m a","name":"replicate","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:replicate"},{"display_html":"<a href=\"#v:replicateM\">replicateM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; m a -&gt; t m a","name":"replicateM","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:replicateM"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Enum\" title=\"Prelude\">Enum</a> a =&gt; <a href=\"#t:Enumerable\">Enumerable</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:enumerateFrom\">enumerateFrom</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; a -&gt; t m a</li><li><a href=\"#v:enumerateFromTo\">enumerateFromTo</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; a -&gt; a -&gt; t m a</li><li><a href=\"#v:enumerateFromThen\">enumerateFromThen</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; a -&gt; a -&gt; t m a</li><li><a href=\"#v:enumerateFromThenTo\">enumerateFromThenTo</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; a -&gt; a -&gt; a -&gt; t m a</li></ul>","name":"Enumerable enumerateFromThenTo enumerateFrom enumerateFromTo enumerateFromThen","module":"Streamly.Prelude","link":"Streamly-Prelude.html#t:Enumerable"},{"display_html":"<a href=\"#v:enumerate\">enumerate</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Bounded\" title=\"Prelude\">Bounded</a> a, <a href=\"Streamly-Prelude.html#t:Enumerable\" title=\"Streamly.Prelude\">Enumerable</a> a) =&gt; t m a","name":"enumerate","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:enumerate"},{"display_html":"<a href=\"#v:enumerateTo\">enumerateTo</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Bounded\" title=\"Prelude\">Bounded</a> a, <a href=\"Streamly-Prelude.html#t:Enumerable\" title=\"Streamly.Prelude\">Enumerable</a> a) =&gt; a -&gt; t m a","name":"enumerateTo","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:enumerateTo"},{"display_html":"<a href=\"#v:unfoldr\">unfoldr</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; (b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> (a, b)) -&gt; b -&gt; t m a","name":"unfoldr","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:unfoldr"},{"display_html":"<a href=\"#v:unfoldrM\">unfoldrM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; (b -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> (a, b))) -&gt; b -&gt; t m a","name":"unfoldrM","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:unfoldrM"},{"display_html":"<a href=\"#v:unfold\">unfold</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m a b -&gt; a -&gt; t m b","name":"unfold","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:unfold"},{"display_html":"<a href=\"#v:iterate\">iterate</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; (a -&gt; a) -&gt; a -&gt; t m a","name":"iterate","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:iterate"},{"display_html":"<a href=\"#v:iterateM\">iterateM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; (a -&gt; m a) -&gt; m a -&gt; t m a","name":"iterateM","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:iterateM"},{"display_html":"<a href=\"#v:fromIndices\">fromIndices</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a) -&gt; t m a","name":"fromIndices","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:fromIndices"},{"display_html":"<a href=\"#v:fromIndicesM\">fromIndicesM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; m a) -&gt; t m a","name":"fromIndicesM","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:fromIndicesM"},{"display_html":"<a href=\"#v:fromList\">fromList</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; [a] -&gt; t m a","name":"fromList","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:fromList"},{"display_html":"<a href=\"#v:fromListM\">fromListM</a> :: (<a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; [m a] -&gt; t m a","name":"fromListM","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:fromListM"},{"display_html":"<a href=\"#v:fromFoldable\">fromFoldable</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> f) =&gt; f a -&gt; t m a","name":"fromFoldable","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:fromFoldable"},{"display_html":"<a href=\"#v:fromFoldableM\">fromFoldableM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> f) =&gt; f (m a) -&gt; t m a","name":"fromFoldableM","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:fromFoldableM"},{"display_html":"<a href=\"#v:uncons\">uncons</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> (a, t m a))","name":"uncons","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:uncons"},{"display_html":"<a href=\"#v:tail\">tail</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> (t m a))","name":"tail","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:tail"},{"display_html":"<a href=\"#v:init\">init</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> (t m a))","name":"init","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:init"},{"display_html":"<a href=\"#v:foldrM\">foldrM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m b -&gt; m b) -&gt; m b -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m b","name":"foldrM","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:foldrM"},{"display_html":"<a href=\"#v:foldr\">foldr</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; b -&gt; b) -&gt; b -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m b","name":"foldr","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:foldr"},{"display_html":"<a href=\"#v:foldl-39-\">foldl'</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (b -&gt; a -&gt; b) -&gt; b -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m b","name":"foldl'","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:foldl-39-"},{"display_html":"<a href=\"#v:foldl1-39-\">foldl1'</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; a -&gt; a) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"foldl1'","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:foldl1-39-"},{"display_html":"<a href=\"#v:foldlM-39-\">foldlM'</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (b -&gt; a -&gt; m b) -&gt; b -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m b","name":"foldlM'","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:foldlM-39-"},{"display_html":"<a href=\"#v:fold\">fold</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m b","name":"fold","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:fold"},{"display_html":"<a href=\"#v:drain\">drain</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m ()","name":"drain","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:drain"},{"display_html":"<a href=\"#v:last\">last</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"last","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:last"},{"display_html":"<a href=\"#v:length\">length</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"length","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:length"},{"display_html":"<a href=\"#v:sum\">sum</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a) =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m a","name":"sum","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:sum"},{"display_html":"<a href=\"#v:product\">product</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a) =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m a","name":"product","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:product"},{"display_html":"<a href=\"#v:maximumBy\">maximumBy</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"maximumBy","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:maximumBy"},{"display_html":"<a href=\"#v:maximum\">maximum</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ord\" title=\"Data.Ord\">Ord</a> a) =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"maximum","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:maximum"},{"display_html":"<a href=\"#v:minimumBy\">minimumBy</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"minimumBy","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:minimumBy"},{"display_html":"<a href=\"#v:minimum\">minimum</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ord\" title=\"Data.Ord\">Ord</a> a) =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"minimum","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:minimum"},{"display_html":"<a href=\"#v:the\">the</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"the","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:the"},{"display_html":"<a href=\"#v:toList\">toList</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m [a]","name":"toList","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:toList"},{"display_html":"<a href=\"#v:drainN\">drainN</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m ()","name":"drainN","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:drainN"},{"display_html":"<a href=\"#v:drainWhile\">drainWhile</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m ()","name":"drainWhile","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:drainWhile"},{"display_html":"<a href=\"#v:-33--33-\">(!!)</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"!!","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:-33--33-"},{"display_html":"<a href=\"#v:head\">head</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"head","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:head"},{"display_html":"<a href=\"#v:findM\">findM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"findM","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:findM"},{"display_html":"<a href=\"#v:find\">find</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"find","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:find"},{"display_html":"<a href=\"#v:lookup\">lookup</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a) =&gt; a -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m (a, b) -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> b)","name":"lookup","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:lookup"},{"display_html":"<a href=\"#v:findIndex\">findIndex</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>)","name":"findIndex","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:findIndex"},{"display_html":"<a href=\"#v:elemIndex\">elemIndex</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a) =&gt; a -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>)","name":"elemIndex","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:elemIndex"},{"display_html":"<a href=\"#v:null\">null</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"null","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:null"},{"display_html":"<a href=\"#v:elem\">elem</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a) =&gt; a -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"elem","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:elem"},{"display_html":"<a href=\"#v:notElem\">notElem</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a) =&gt; a -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"notElem","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:notElem"},{"display_html":"<a href=\"#v:all\">all</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"all","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:all"},{"display_html":"<a href=\"#v:any\">any</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"any","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:any"},{"display_html":"<a href=\"#v:and\">and</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"and","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:and"},{"display_html":"<a href=\"#v:or\">or</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"or","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:or"},{"display_html":"<a href=\"#v:eqBy\">eqBy</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; t m a -&gt; t m b -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"eqBy","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:eqBy"},{"display_html":"<a href=\"#v:cmpBy\">cmpBy</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; t m a -&gt; t m b -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>","name":"cmpBy","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:cmpBy"},{"display_html":"<a href=\"#v:isPrefixOf\">isPrefixOf</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; t m a -&gt; t m a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"isPrefixOf","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:isPrefixOf"},{"display_html":"<a href=\"#v:isSubsequenceOf\">isSubsequenceOf</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; t m a -&gt; t m a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"isSubsequenceOf","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:isSubsequenceOf"},{"display_html":"<a href=\"#v:stripPrefix\">stripPrefix</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; t m a -&gt; t m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> (t m a))","name":"stripPrefix","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:stripPrefix"},{"display_html":"<a href=\"#v:map\">map</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; b) -&gt; t m a -&gt; t m b","name":"map","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:map"},{"display_html":"<a href=\"#v:sequence\">sequence</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; t m (m a) -&gt; t m a","name":"sequence","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:sequence"},{"display_html":"<a href=\"#v:mapM\">mapM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; (a -&gt; m b) -&gt; t m a -&gt; t m b","name":"mapM","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:mapM"},{"display_html":"<a href=\"#v:mapM_\">mapM_</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; m b) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m ()","name":"mapM_","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:mapM_"},{"display_html":"<a href=\"#v:trace\">trace</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; (a -&gt; m b) -&gt; t m a -&gt; t m a","name":"trace","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:trace"},{"display_html":"<a href=\"#v:tap\">tap</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m a -&gt; t m a","name":"tap","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:tap"},{"display_html":"<a href=\"#v:scanl-39-\">scanl'</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (b -&gt; a -&gt; b) -&gt; b -&gt; t m a -&gt; t m b","name":"scanl'","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:scanl-39-"},{"display_html":"<a href=\"#v:scanlM-39-\">scanlM'</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (b -&gt; a -&gt; m b) -&gt; b -&gt; t m a -&gt; t m b","name":"scanlM'","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:scanlM-39-"},{"display_html":"<a href=\"#v:postscanl-39-\">postscanl'</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (b -&gt; a -&gt; b) -&gt; b -&gt; t m a -&gt; t m b","name":"postscanl'","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:postscanl-39-"},{"display_html":"<a href=\"#v:postscanlM-39-\">postscanlM'</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (b -&gt; a -&gt; m b) -&gt; b -&gt; t m a -&gt; t m b","name":"postscanlM'","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:postscanlM-39-"},{"display_html":"<a href=\"#v:scanl1-39-\">scanl1'</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; a -&gt; a) -&gt; t m a -&gt; t m a","name":"scanl1'","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:scanl1-39-"},{"display_html":"<a href=\"#v:scanl1M-39-\">scanl1M'</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; a -&gt; m a) -&gt; t m a -&gt; t m a","name":"scanl1M'","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:scanl1M-39-"},{"display_html":"<a href=\"#v:scan\">scan</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m a -&gt; t m b","name":"scan","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:scan"},{"display_html":"<a href=\"#v:postscan\">postscan</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m a -&gt; t m b","name":"postscan","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:postscan"},{"display_html":"<a href=\"#v:filter\">filter</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; t m a -&gt; t m a","name":"filter","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:filter"},{"display_html":"<a href=\"#v:filterM\">filterM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; t m a -&gt; t m a","name":"filterM","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:filterM"},{"display_html":"<a href=\"#v:mapMaybe\">mapMaybe</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> b) -&gt; t m a -&gt; t m b","name":"mapMaybe","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:mapMaybe"},{"display_html":"<a href=\"#v:mapMaybeM\">mapMaybeM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> (t m)) =&gt; (a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> b)) -&gt; t m a -&gt; t m b","name":"mapMaybeM","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:mapMaybeM"},{"display_html":"<a href=\"#v:deleteBy\">deleteBy</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; a -&gt; t m a -&gt; t m a","name":"deleteBy","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:deleteBy"},{"display_html":"<a href=\"#v:uniq\">uniq</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; t m a -&gt; t m a","name":"uniq","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:uniq"},{"display_html":"<a href=\"#v:insertBy\">insertBy</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; a -&gt; t m a -&gt; t m a","name":"insertBy","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:insertBy"},{"display_html":"<a href=\"#v:intersperseM\">intersperseM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; m a -&gt; t m a -&gt; t m a","name":"intersperseM","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:intersperseM"},{"display_html":"<a href=\"#v:intersperse\">intersperse</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; a -&gt; t m a -&gt; t m a","name":"intersperse","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:intersperse"},{"display_html":"<a href=\"#v:indexed\">indexed</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; t m a -&gt; t m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>, a)","name":"indexed","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:indexed"},{"display_html":"<a href=\"#v:indexedR\">indexedR</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; t m a -&gt; t m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>, a)","name":"indexedR","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:indexedR"},{"display_html":"<a href=\"#v:reverse\">reverse</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; t m a -&gt; t m a","name":"reverse","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:reverse"},{"display_html":"<a href=\"#v:take\">take</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; t m a -&gt; t m a","name":"take","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:take"},{"display_html":"<a href=\"#v:takeWhile\">takeWhile</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; t m a -&gt; t m a","name":"takeWhile","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:takeWhile"},{"display_html":"<a href=\"#v:takeWhileM\">takeWhileM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; t m a -&gt; t m a","name":"takeWhileM","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:takeWhileM"},{"display_html":"<a href=\"#v:drop\">drop</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; t m a -&gt; t m a","name":"drop","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:drop"},{"display_html":"<a href=\"#v:dropWhile\">dropWhile</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; t m a -&gt; t m a","name":"dropWhile","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:dropWhile"},{"display_html":"<a href=\"#v:dropWhileM\">dropWhileM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; t m a -&gt; t m a","name":"dropWhileM","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:dropWhileM"},{"display_html":"<a href=\"#v:chunksOf\">chunksOf</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m a -&gt; t m b","name":"chunksOf","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:chunksOf"},{"display_html":"<a href=\"#v:intervalsOf\">intervalsOf</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Double\" title=\"Prelude\">Double</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m a -&gt; t m b","name":"intervalsOf","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:intervalsOf"},{"display_html":"<a href=\"#v:findIndices\">findIndices</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; t m a -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"findIndices","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:findIndices"},{"display_html":"<a href=\"#v:elemIndices\">elemIndices</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; a -&gt; t m a -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"elemIndices","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:elemIndices"},{"display_html":"<a href=\"#v:splitOn\">splitOn</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m a -&gt; t m b","name":"splitOn","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:splitOn"},{"display_html":"<a href=\"#v:splitOnSuffix\">splitOnSuffix</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m a -&gt; t m b","name":"splitOnSuffix","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:splitOnSuffix"},{"display_html":"<a href=\"#v:splitWithSuffix\">splitWithSuffix</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m a -&gt; t m b","name":"splitWithSuffix","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:splitWithSuffix"},{"display_html":"<a href=\"#v:wordsBy\">wordsBy</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m a -&gt; t m b","name":"wordsBy","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:wordsBy"},{"display_html":"<a href=\"#v:groups\">groups</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a) =&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m a -&gt; t m b","name":"groups","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:groups"},{"display_html":"<a href=\"#v:groupsBy\">groupsBy</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m a -&gt; t m b","name":"groupsBy","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:groupsBy"},{"display_html":"<a href=\"#v:groupsByRolling\">groupsByRolling</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m a b -&gt; t m a -&gt; t m b","name":"groupsByRolling","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:groupsByRolling"},{"display_html":"<a href=\"#v:mergeBy\">mergeBy</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; t m a -&gt; t m a -&gt; t m a","name":"mergeBy","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:mergeBy"},{"display_html":"<a href=\"#v:mergeByM\">mergeByM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; t m a -&gt; t m a -&gt; t m a","name":"mergeByM","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:mergeByM"},{"display_html":"<a href=\"#v:mergeAsyncBy\">mergeAsyncBy</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; (a -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; t m a -&gt; t m a -&gt; t m a","name":"mergeAsyncBy","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:mergeAsyncBy"},{"display_html":"<a href=\"#v:mergeAsyncByM\">mergeAsyncByM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; (a -&gt; a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; t m a -&gt; t m a -&gt; t m a","name":"mergeAsyncByM","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:mergeAsyncByM"},{"display_html":"<a href=\"#v:zipWith\">zipWith</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; b -&gt; c) -&gt; t m a -&gt; t m b -&gt; t m c","name":"zipWith","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:zipWith"},{"display_html":"<a href=\"#v:zipWithM\">zipWithM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; b -&gt; m c) -&gt; t m a -&gt; t m b -&gt; t m c","name":"zipWithM","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:zipWithM"},{"display_html":"<a href=\"#v:zipAsyncWith\">zipAsyncWith</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; (a -&gt; b -&gt; c) -&gt; t m a -&gt; t m b -&gt; t m c","name":"zipAsyncWith","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:zipAsyncWith"},{"display_html":"<a href=\"#v:zipAsyncWithM\">zipAsyncWithM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; (a -&gt; b -&gt; m c) -&gt; t m a -&gt; t m b -&gt; t m c","name":"zipAsyncWithM","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:zipAsyncWithM"},{"display_html":"<a href=\"#v:concatMapWith\">concatMapWith</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; (<span class=\"keyword\">forall</span> c. t m c -&gt; t m c -&gt; t m c) -&gt; (a -&gt; t m b) -&gt; t m a -&gt; t m b","name":"concatMapWith","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:concatMapWith"},{"display_html":"<a href=\"#v:concatMap\">concatMap</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; t m b) -&gt; t m a -&gt; t m b","name":"concatMap","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:concatMap"},{"display_html":"<a href=\"#v:concatMapM\">concatMapM</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (a -&gt; m (t m b)) -&gt; t m a -&gt; t m b","name":"concatMapM","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:concatMapM"},{"display_html":"<a href=\"#v:concatUnfold\">concatUnfold</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m a b -&gt; t m a -&gt; t m b","name":"concatUnfold","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:concatUnfold"},{"display_html":"<a href=\"#v:before\">before</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; m b -&gt; t m a -&gt; t m a","name":"before","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:before"},{"display_html":"<a href=\"#v:after\">after</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; m b -&gt; t m a -&gt; t m a","name":"after","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:after"},{"display_html":"<a href=\"#v:bracket\">bracket</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, MonadCatch m) =&gt; m b -&gt; (b -&gt; m c) -&gt; (b -&gt; t m a) -&gt; t m a","name":"bracket","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:bracket"},{"display_html":"<a href=\"#v:onException\">onException</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, MonadCatch m) =&gt; m b -&gt; t m a -&gt; t m a","name":"onException","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:onException"},{"display_html":"<a href=\"#v:finally\">finally</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, MonadCatch m) =&gt; m b -&gt; t m a -&gt; t m a","name":"finally","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:finally"},{"display_html":"<a href=\"#v:handle\">handle</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, MonadCatch m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Exception-Base.html#t:Exception\" title=\"Control.Exception.Base\">Exception</a> e) =&gt; (e -&gt; t m a) -&gt; t m a -&gt; t m a","name":"handle","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:handle"},{"display_html":"<a href=\"#v:once\">once</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; m a -&gt; t m a","name":"once","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:once"},{"display_html":"<a href=\"#v:each\">each</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> f) =&gt; f a -&gt; t m a","name":"each","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:each"},{"display_html":"<a href=\"#v:scanx\">scanx</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (x -&gt; a -&gt; x) -&gt; x -&gt; (x -&gt; b) -&gt; t m a -&gt; t m b","name":"scanx","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:scanx"},{"display_html":"<a href=\"#v:foldx\">foldx</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (x -&gt; a -&gt; x) -&gt; x -&gt; (x -&gt; b) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m b","name":"foldx","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:foldx"},{"display_html":"<a href=\"#v:foldxM\">foldxM</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (x -&gt; a -&gt; m x) -&gt; m x -&gt; (x -&gt; m b) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m b","name":"foldxM","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:foldxM"},{"display_html":"<a href=\"#v:foldr1\">foldr1</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; a -&gt; a) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> a)","name":"foldr1","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:foldr1"},{"display_html":"<a href=\"#v:runStream\">runStream</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m ()","name":"runStream","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:runStream"},{"display_html":"<a href=\"#v:runN\">runN</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m ()","name":"runN","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:runN"},{"display_html":"<a href=\"#v:runWhile\">runWhile</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m ()","name":"runWhile","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:runWhile"},{"display_html":"<a href=\"#v:fromHandle\">fromHandle</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a> -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"fromHandle","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:fromHandle"},{"display_html":"<a href=\"#v:toHandle\">toHandle</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a> -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; m ()","name":"toHandle","module":"Streamly.Prelude","link":"Streamly-Prelude.html#v:toHandle"},{"display_html":"<a href=\"#v:arraysOf\">arraysOf</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; t m a -&gt; t m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a)","name":"arraysOf","module":"Streamly.Internal.Memory.ArrayStream","link":"Streamly-Internal-Memory-ArrayStream.html#v:arraysOf"},{"display_html":"<a href=\"#v:concat\">concat</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; t m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a) -&gt; t m a","name":"concat","module":"Streamly.Internal.Memory.ArrayStream","link":"Streamly-Internal-Memory-ArrayStream.html#v:concat"},{"display_html":"<a href=\"#v:concatRev\">concatRev</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; t m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a) -&gt; t m a","name":"concatRev","module":"Streamly.Internal.Memory.ArrayStream","link":"Streamly-Internal-Memory-ArrayStream.html#v:concatRev"},{"display_html":"<a href=\"#v:interpose\">interpose</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; a -&gt; t m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a) -&gt; t m a","name":"interpose","module":"Streamly.Internal.Memory.ArrayStream","link":"Streamly-Internal-Memory-ArrayStream.html#v:interpose"},{"display_html":"<a href=\"#v:interposeSuffix\">interposeSuffix</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; a -&gt; t m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a) -&gt; t m a","name":"interposeSuffix","module":"Streamly.Internal.Memory.ArrayStream","link":"Streamly-Internal-Memory-ArrayStream.html#v:interposeSuffix"},{"display_html":"<a href=\"#v:intercalateSuffix\">intercalateSuffix</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; t m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a) -&gt; t m a","name":"intercalateSuffix","module":"Streamly.Internal.Memory.ArrayStream","link":"Streamly-Internal-Memory-ArrayStream.html#v:intercalateSuffix"},{"display_html":"<a href=\"#v:splitOn\">splitOn</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; t m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>) -&gt; t m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>)","name":"splitOn","module":"Streamly.Internal.Memory.ArrayStream","link":"Streamly-Internal-Memory-ArrayStream.html#v:splitOn"},{"display_html":"<a href=\"#v:splitOnSuffix\">splitOnSuffix</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; t m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>) -&gt; t m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>)","name":"splitOnSuffix","module":"Streamly.Internal.Memory.ArrayStream","link":"Streamly-Internal-Memory-ArrayStream.html#v:splitOnSuffix"},{"display_html":"<a href=\"#v:compact\">compact</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a) -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a)","name":"compact","module":"Streamly.Internal.Memory.ArrayStream","link":"Streamly-Internal-Memory-ArrayStream.html#v:compact"},{"display_html":"<a href=\"#v:toArray\">toArray</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a) -&gt; m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a)","name":"toArray","module":"Streamly.Internal.Memory.ArrayStream","link":"Streamly-Internal-Memory-ArrayStream.html#v:toArray"},{"display_html":"<a href=\"#v:read\">read</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"read","module":"Streamly.Internal.FileSystem.Dir","link":"Streamly-Internal-FileSystem-Dir.html#v:read"},{"display_html":"<a href=\"#v:readFiles\">readFiles</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"readFiles","module":"Streamly.Internal.FileSystem.Dir","link":"Streamly-Internal-FileSystem-Dir.html#v:readFiles"},{"display_html":"<a href=\"#v:readDirs\">readDirs</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"readDirs","module":"Streamly.Internal.FileSystem.Dir","link":"Streamly-Internal-FileSystem-Dir.html#v:readDirs"},{"display_html":"<a href=\"#v:readEither\">readEither</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>)","name":"readEither","module":"Streamly.Internal.FileSystem.Dir","link":"Streamly-Internal-FileSystem-Dir.html#v:readEither"},{"display_html":"<a href=\"#v:toStream\">toStream</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"toStream","module":"Streamly.Internal.FileSystem.Dir","link":"Streamly-Internal-FileSystem-Dir.html#v:toStream"},{"display_html":"<a href=\"#v:toEither\">toEither</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; t m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>)","name":"toEither","module":"Streamly.Internal.FileSystem.Dir","link":"Streamly-Internal-FileSystem-Dir.html#v:toEither"},{"display_html":"<a href=\"#v:toFiles\">toFiles</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"toFiles","module":"Streamly.Internal.FileSystem.Dir","link":"Streamly-Internal-FileSystem-Dir.html#v:toFiles"},{"display_html":"<a href=\"#v:toDirs\">toDirs</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"toDirs","module":"Streamly.Internal.FileSystem.Dir","link":"Streamly-Internal-FileSystem-Dir.html#v:toDirs"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:List\">List</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:List\">List</a> { <ul class=\"subs\"><li><a href=\"#v:toSerial\">toSerial</a> :: <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Functor-Identity.html#t:Identity\" title=\"Data.Functor.Identity\">Identity</a> a</li></ul> }</li><li><span class=\"keyword\">pattern</span> <a href=\"#v:Nil\">Nil</a> :: <a href=\"Streamly-Internal-Data-List.html#t:List\" title=\"Streamly.Internal.Data.List\">List</a> a</li><li><span class=\"keyword\">pattern</span> <a href=\"#v:Cons\">Cons</a> :: a -&gt; <a href=\"Streamly-Internal-Data-List.html#t:List\" title=\"Streamly.Internal.Data.List\">List</a> a -&gt; <a href=\"Streamly-Internal-Data-List.html#t:List\" title=\"Streamly.Internal.Data.List\">List</a> a</li></ul>","name":"List Nil Cons List toSerial","module":"Streamly.Internal.Data.List","link":"Streamly-Internal-Data-List.html#t:List"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:ZipList\">ZipList</a> a = <a href=\"#v:ZipList\">ZipList</a> {<ul class=\"subs\"><li><a href=\"#v:toZipSerial\">toZipSerial</a> :: <a href=\"Streamly.html#t:ZipSerialM\" title=\"Streamly\">ZipSerialM</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Functor-Identity.html#t:Identity\" title=\"Data.Functor.Identity\">Identity</a> a</li></ul>}","name":"ZipList ZipList toZipSerial","module":"Streamly.Internal.Data.List","link":"Streamly-Internal-Data-List.html#t:ZipList"},{"display_html":"<a href=\"#v:fromZipList\">fromZipList</a> :: <a href=\"Streamly-Internal-Data-List.html#t:ZipList\" title=\"Streamly.Internal.Data.List\">ZipList</a> a -&gt; <a href=\"Streamly-Internal-Data-List.html#t:List\" title=\"Streamly.Internal.Data.List\">List</a> a","name":"fromZipList","module":"Streamly.Internal.Data.List","link":"Streamly-Internal-Data-List.html#v:fromZipList"},{"display_html":"<a href=\"#v:toZipList\">toZipList</a> :: <a href=\"Streamly-Internal-Data-List.html#t:List\" title=\"Streamly.Internal.Data.List\">List</a> a -&gt; <a href=\"Streamly-Internal-Data-List.html#t:ZipList\" title=\"Streamly.Internal.Data.List\">ZipList</a> a","name":"toZipList","module":"Streamly.Internal.Data.List","link":"Streamly-Internal-Data-List.html#v:toZipList"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:MonadAsync\">MonadAsync</a> m = (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, MonadBaseControl <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> m, MonadThrow m)","name":"MonadAsync","module":"Streamly","link":"Streamly.html#t:MonadAsync"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SerialT\">SerialT</a> m a","name":"SerialT","module":"Streamly","link":"Streamly.html#t:SerialT"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:WSerialT\">WSerialT</a> m a","name":"WSerialT","module":"Streamly","link":"Streamly.html#t:WSerialT"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AheadT\">AheadT</a> m a","name":"AheadT","module":"Streamly","link":"Streamly.html#t:AheadT"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AsyncT\">AsyncT</a> m a","name":"AsyncT","module":"Streamly","link":"Streamly.html#t:AsyncT"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:WAsyncT\">WAsyncT</a> m a","name":"WAsyncT","module":"Streamly","link":"Streamly.html#t:WAsyncT"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ParallelT\">ParallelT</a> m a","name":"ParallelT","module":"Streamly","link":"Streamly.html#t:ParallelT"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ZipSerialM\">ZipSerialM</a> m a","name":"ZipSerialM","module":"Streamly","link":"Streamly.html#t:ZipSerialM"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ZipAsyncM\">ZipAsyncM</a> m a","name":"ZipAsyncM","module":"Streamly","link":"Streamly.html#t:ZipAsyncM"},{"display_html":"<a href=\"#v:-124--36-\">(|$)</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly.html#t:MonadAsync\" title=\"Streamly\">MonadAsync</a> m) =&gt; (t m a -&gt; t m b) -&gt; t m a -&gt; t m b","name":"|$","module":"Streamly","link":"Streamly.html#v:-124--36-"},{"display_html":"<a href=\"#v:-124--38-\">(|&amp;)</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly.html#t:MonadAsync\" title=\"Streamly\">MonadAsync</a> m) =&gt; t m a -&gt; (t m a -&gt; t m b) -&gt; t m b","name":"|&","module":"Streamly","link":"Streamly.html#v:-124--38-"},{"display_html":"<a href=\"#v:-124--36-.\">(|$.)</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly.html#t:MonadAsync\" title=\"Streamly\">MonadAsync</a> m) =&gt; (t m a -&gt; m b) -&gt; t m a -&gt; m b","name":"|$.","module":"Streamly","link":"Streamly.html#v:-124--36-."},{"display_html":"<a href=\"#v:-124--38-.\">(|&amp;.)</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly.html#t:MonadAsync\" title=\"Streamly\">MonadAsync</a> m) =&gt; t m a -&gt; (t m a -&gt; m b) -&gt; m b","name":"|&.","module":"Streamly","link":"Streamly.html#v:-124--38-."},{"display_html":"<a href=\"#v:mkAsync\">mkAsync</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly.html#t:MonadAsync\" title=\"Streamly\">MonadAsync</a> m) =&gt; t m a -&gt; m (t m a)","name":"mkAsync","module":"Streamly","link":"Streamly.html#v:mkAsync"},{"display_html":"<a href=\"#v:serial\">serial</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; t m a -&gt; t m a -&gt; t m a","name":"serial","module":"Streamly","link":"Streamly.html#v:serial"},{"display_html":"<a href=\"#v:wSerial\">wSerial</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; t m a -&gt; t m a -&gt; t m a","name":"wSerial","module":"Streamly","link":"Streamly.html#v:wSerial"},{"display_html":"<a href=\"#v:ahead\">ahead</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly.html#t:MonadAsync\" title=\"Streamly\">MonadAsync</a> m) =&gt; t m a -&gt; t m a -&gt; t m a","name":"ahead","module":"Streamly","link":"Streamly.html#v:ahead"},{"display_html":"<a href=\"#v:async\">async</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly.html#t:MonadAsync\" title=\"Streamly\">MonadAsync</a> m) =&gt; t m a -&gt; t m a -&gt; t m a","name":"async","module":"Streamly","link":"Streamly.html#v:async"},{"display_html":"<a href=\"#v:wAsync\">wAsync</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly.html#t:MonadAsync\" title=\"Streamly\">MonadAsync</a> m) =&gt; t m a -&gt; t m a -&gt; t m a","name":"wAsync","module":"Streamly","link":"Streamly.html#v:wAsync"},{"display_html":"<a href=\"#v:parallel\">parallel</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly.html#t:MonadAsync\" title=\"Streamly\">MonadAsync</a> m) =&gt; t m a -&gt; t m a -&gt; t m a","name":"parallel","module":"Streamly","link":"Streamly.html#v:parallel"},{"display_html":"<a href=\"#v:maxThreads\">maxThreads</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; t m a -&gt; t m a","name":"maxThreads","module":"Streamly","link":"Streamly.html#v:maxThreads"},{"display_html":"<a href=\"#v:maxBuffer\">maxBuffer</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; t m a -&gt; t m a","name":"maxBuffer","module":"Streamly","link":"Streamly.html#v:maxBuffer"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Rate\">Rate</a> = <a href=\"#v:Rate\">Rate</a> {<ul class=\"subs\"><li><a href=\"#v:rateLow\">rateLow</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Double\" title=\"Prelude\">Double</a></li><li><a href=\"#v:rateGoal\">rateGoal</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Double\" title=\"Prelude\">Double</a></li><li><a href=\"#v:rateHigh\">rateHigh</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Double\" title=\"Prelude\">Double</a></li><li><a href=\"#v:rateBuffer\">rateBuffer</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li></ul>}","name":"Rate Rate rateLow rateGoal rateHigh rateBuffer","module":"Streamly","link":"Streamly.html#t:Rate"},{"display_html":"<a href=\"#v:rate\">rate</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Maybe.html#t:Maybe\" title=\"GHC.Maybe\">Maybe</a> <a href=\"Streamly.html#t:Rate\" title=\"Streamly\">Rate</a> -&gt; t m a -&gt; t m a","name":"rate","module":"Streamly","link":"Streamly.html#v:rate"},{"display_html":"<a href=\"#v:avgRate\">avgRate</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Double\" title=\"Prelude\">Double</a> -&gt; t m a -&gt; t m a","name":"avgRate","module":"Streamly","link":"Streamly.html#v:avgRate"},{"display_html":"<a href=\"#v:minRate\">minRate</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Double\" title=\"Prelude\">Double</a> -&gt; t m a -&gt; t m a","name":"minRate","module":"Streamly","link":"Streamly.html#v:minRate"},{"display_html":"<a href=\"#v:maxRate\">maxRate</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Double\" title=\"Prelude\">Double</a> -&gt; t m a -&gt; t m a","name":"maxRate","module":"Streamly","link":"Streamly.html#v:maxRate"},{"display_html":"<a href=\"#v:constRate\">constRate</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Double\" title=\"Prelude\">Double</a> -&gt; t m a -&gt; t m a","name":"constRate","module":"Streamly","link":"Streamly.html#v:constRate"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> m a. <a href=\"Streamly.html#t:MonadAsync\" title=\"Streamly\">MonadAsync</a> m =&gt; <a href=\"Streamly.html#t:Semigroup\" title=\"Streamly\">Semigroup</a> (t m a), <span class=\"keyword\">forall</span> m a. <a href=\"Streamly.html#t:MonadAsync\" title=\"Streamly\">MonadAsync</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Monoid.html#t:Monoid\" title=\"Data.Monoid\">Monoid</a> (t m a), <span class=\"keyword\">forall</span> m. <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> (t m), <span class=\"keyword\">forall</span> m. <a href=\"Streamly.html#t:MonadAsync\" title=\"Streamly\">MonadAsync</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> (t m)) =&gt; <a href=\"#t:IsStream\">IsStream</a> t","name":"IsStream","module":"Streamly","link":"Streamly.html#t:IsStream"},{"display_html":"<a href=\"#v:serially\">serially</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; t m a","name":"serially","module":"Streamly","link":"Streamly.html#v:serially"},{"display_html":"<a href=\"#v:wSerially\">wSerially</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; <a href=\"Streamly.html#t:WSerialT\" title=\"Streamly\">WSerialT</a> m a -&gt; t m a","name":"wSerially","module":"Streamly","link":"Streamly.html#v:wSerially"},{"display_html":"<a href=\"#v:asyncly\">asyncly</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; <a href=\"Streamly.html#t:AsyncT\" title=\"Streamly\">AsyncT</a> m a -&gt; t m a","name":"asyncly","module":"Streamly","link":"Streamly.html#v:asyncly"},{"display_html":"<a href=\"#v:aheadly\">aheadly</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; <a href=\"Streamly.html#t:AheadT\" title=\"Streamly\">AheadT</a> m a -&gt; t m a","name":"aheadly","module":"Streamly","link":"Streamly.html#v:aheadly"},{"display_html":"<a href=\"#v:wAsyncly\">wAsyncly</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; <a href=\"Streamly.html#t:WAsyncT\" title=\"Streamly\">WAsyncT</a> m a -&gt; t m a","name":"wAsyncly","module":"Streamly","link":"Streamly.html#v:wAsyncly"},{"display_html":"<a href=\"#v:parallely\">parallely</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; <a href=\"Streamly.html#t:ParallelT\" title=\"Streamly\">ParallelT</a> m a -&gt; t m a","name":"parallely","module":"Streamly","link":"Streamly.html#v:parallely"},{"display_html":"<a href=\"#v:zipSerially\">zipSerially</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; <a href=\"Streamly.html#t:ZipSerialM\" title=\"Streamly\">ZipSerialM</a> m a -&gt; t m a","name":"zipSerially","module":"Streamly","link":"Streamly.html#v:zipSerially"},{"display_html":"<a href=\"#v:zipAsyncly\">zipAsyncly</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; <a href=\"Streamly.html#t:ZipAsyncM\" title=\"Streamly\">ZipAsyncM</a> m a -&gt; t m a","name":"zipAsyncly","module":"Streamly","link":"Streamly.html#v:zipAsyncly"},{"display_html":"<a href=\"#v:adapt\">adapt</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t1, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t2) =&gt; t1 m a -&gt; t2 m a","name":"adapt","module":"Streamly","link":"Streamly.html#v:adapt"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Serial\">Serial</a> = <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a>","name":"Serial","module":"Streamly","link":"Streamly.html#t:Serial"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:WSerial\">WSerial</a> = <a href=\"Streamly.html#t:WSerialT\" title=\"Streamly\">WSerialT</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a>","name":"WSerial","module":"Streamly","link":"Streamly.html#t:WSerial"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Ahead\">Ahead</a> = <a href=\"Streamly.html#t:AheadT\" title=\"Streamly\">AheadT</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a>","name":"Ahead","module":"Streamly","link":"Streamly.html#t:Ahead"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Async\">Async</a> = <a href=\"Streamly.html#t:AsyncT\" title=\"Streamly\">AsyncT</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a>","name":"Async","module":"Streamly","link":"Streamly.html#t:Async"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:WAsync\">WAsync</a> = <a href=\"Streamly.html#t:WAsyncT\" title=\"Streamly\">WAsyncT</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a>","name":"WAsync","module":"Streamly","link":"Streamly.html#t:WAsync"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Parallel\">Parallel</a> = <a href=\"Streamly.html#t:ParallelT\" title=\"Streamly\">ParallelT</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a>","name":"Parallel","module":"Streamly","link":"Streamly.html#t:Parallel"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ZipSerial\">ZipSerial</a> = <a href=\"Streamly.html#t:ZipSerialM\" title=\"Streamly\">ZipSerialM</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a>","name":"ZipSerial","module":"Streamly","link":"Streamly.html#t:ZipSerial"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ZipAsync\">ZipAsync</a> = <a href=\"Streamly.html#t:ZipAsyncM\" title=\"Streamly\">ZipAsyncM</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a>","name":"ZipAsync","module":"Streamly","link":"Streamly.html#t:ZipAsync"},{"display_html":"<a href=\"#v:foldWith\">foldWith</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> f) =&gt; (t m a -&gt; t m a -&gt; t m a) -&gt; f (t m a) -&gt; t m a","name":"foldWith","module":"Streamly","link":"Streamly.html#v:foldWith"},{"display_html":"<a href=\"#v:foldMapWith\">foldMapWith</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> f) =&gt; (t m b -&gt; t m b -&gt; t m b) -&gt; (a -&gt; t m b) -&gt; f a -&gt; t m b","name":"foldMapWith","module":"Streamly","link":"Streamly.html#v:foldMapWith"},{"display_html":"<a href=\"#v:forEachWith\">forEachWith</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> f) =&gt; (t m b -&gt; t m b -&gt; t m b) -&gt; f a -&gt; (a -&gt; t m b) -&gt; t m b","name":"forEachWith","module":"Streamly","link":"Streamly.html#v:forEachWith"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Semigroup\">Semigroup</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:-60--62-\">(&lt;&gt;)</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:sconcat\">sconcat</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-List-NonEmpty.html#t:NonEmpty\" title=\"Data.List.NonEmpty\">NonEmpty</a> a -&gt; a</li><li><a href=\"#v:stimes\">stimes</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> b =&gt; b -&gt; a -&gt; a</li></ul>","name":"Semigroup <> sconcat stimes","module":"Streamly","link":"Streamly.html#t:Semigroup"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Streaming\">Streaming</a> = <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a>","name":"Streaming","module":"Streamly","link":"Streamly.html#t:Streaming"},{"display_html":"<a href=\"#v:runStream\">runStream</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m ()","name":"runStream","module":"Streamly","link":"Streamly.html#v:runStream"},{"display_html":"<a href=\"#v:runStreaming\">runStreaming</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; t m a -&gt; m ()","name":"runStreaming","module":"Streamly","link":"Streamly.html#v:runStreaming"},{"display_html":"<a href=\"#v:runStreamT\">runStreamT</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m a -&gt; m ()","name":"runStreamT","module":"Streamly","link":"Streamly.html#v:runStreamT"},{"display_html":"<a href=\"#v:runInterleavedT\">runInterleavedT</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:WSerialT\" title=\"Streamly\">WSerialT</a> m a -&gt; m ()","name":"runInterleavedT","module":"Streamly","link":"Streamly.html#v:runInterleavedT"},{"display_html":"<a href=\"#v:runAsyncT\">runAsyncT</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:AsyncT\" title=\"Streamly\">AsyncT</a> m a -&gt; m ()","name":"runAsyncT","module":"Streamly","link":"Streamly.html#v:runAsyncT"},{"display_html":"<a href=\"#v:runParallelT\">runParallelT</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:ParallelT\" title=\"Streamly\">ParallelT</a> m a -&gt; m ()","name":"runParallelT","module":"Streamly","link":"Streamly.html#v:runParallelT"},{"display_html":"<a href=\"#v:runZipStream\">runZipStream</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:ZipSerialM\" title=\"Streamly\">ZipSerialM</a> m a -&gt; m ()","name":"runZipStream","module":"Streamly","link":"Streamly.html#v:runZipStream"},{"display_html":"<a href=\"#v:runZipAsync\">runZipAsync</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Streamly.html#t:ZipAsyncM\" title=\"Streamly\">ZipAsyncM</a> m a -&gt; m ()","name":"runZipAsync","module":"Streamly","link":"Streamly.html#v:runZipAsync"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:StreamT\">StreamT</a> = <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a>","name":"StreamT","module":"Streamly","link":"Streamly.html#t:StreamT"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:InterleavedT\">InterleavedT</a> = <a href=\"Streamly.html#t:WSerialT\" title=\"Streamly\">WSerialT</a>","name":"InterleavedT","module":"Streamly","link":"Streamly.html#t:InterleavedT"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ZipStream\">ZipStream</a> = <a href=\"Streamly.html#t:ZipSerialM\" title=\"Streamly\">ZipSerialM</a>","name":"ZipStream","module":"Streamly","link":"Streamly.html#t:ZipStream"},{"display_html":"<a href=\"#v:interleaving\">interleaving</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; <a href=\"Streamly.html#t:WSerialT\" title=\"Streamly\">WSerialT</a> m a -&gt; t m a","name":"interleaving","module":"Streamly","link":"Streamly.html#v:interleaving"},{"display_html":"<a href=\"#v:zipping\">zipping</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; <a href=\"Streamly.html#t:ZipSerialM\" title=\"Streamly\">ZipSerialM</a> m a -&gt; t m a","name":"zipping","module":"Streamly","link":"Streamly.html#v:zipping"},{"display_html":"<a href=\"#v:zippingAsync\">zippingAsync</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; <a href=\"Streamly.html#t:ZipAsyncM\" title=\"Streamly\">ZipAsyncM</a> m a -&gt; t m a","name":"zippingAsync","module":"Streamly","link":"Streamly.html#v:zippingAsync"},{"display_html":"<a href=\"#v:-60--61--62-\">(&lt;=&gt;)</a> :: <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t =&gt; t m a -&gt; t m a -&gt; t m a","name":"<=>","module":"Streamly","link":"Streamly.html#v:-60--61--62-"},{"display_html":"<a href=\"#v:-60--124-\">(&lt;|)</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"Streamly.html#t:MonadAsync\" title=\"Streamly\">MonadAsync</a> m) =&gt; t m a -&gt; t m a -&gt; t m a","name":"<|","module":"Streamly","link":"Streamly.html#v:-60--124-"},{"display_html":"<a href=\"#v:decodeLatin1\">decodeLatin1</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a>","name":"decodeLatin1","module":"Streamly.Internal.Data.Unicode.Stream","link":"Streamly-Internal-Data-Unicode-Stream.html#v:decodeLatin1"},{"display_html":"<a href=\"#v:decodeUtf8\">decodeUtf8</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a>","name":"decodeUtf8","module":"Streamly.Internal.Data.Unicode.Stream","link":"Streamly-Internal-Data-Unicode-Stream.html#v:decodeUtf8"},{"display_html":"<a href=\"#v:decodeUtf8Lax\">decodeUtf8Lax</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a>","name":"decodeUtf8Lax","module":"Streamly.Internal.Data.Unicode.Stream","link":"Streamly-Internal-Data-Unicode-Stream.html#v:decodeUtf8Lax"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DecodeError\">DecodeError</a> = <a href=\"#v:DecodeError\">DecodeError</a> !<a href=\"Streamly-Internal-Data-Unicode-Stream.html#t:DecodeState\" title=\"Streamly.Internal.Data.Unicode.Stream\">DecodeState</a> !<a href=\"Streamly-Internal-Data-Unicode-Stream.html#t:CodePoint\" title=\"Streamly.Internal.Data.Unicode.Stream\">CodePoint</a>","name":"DecodeError DecodeError","module":"Streamly.Internal.Data.Unicode.Stream","link":"Streamly-Internal-Data-Unicode-Stream.html#t:DecodeError"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:DecodeState\">DecodeState</a> = <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>","name":"DecodeState","module":"Streamly.Internal.Data.Unicode.Stream","link":"Streamly-Internal-Data-Unicode-Stream.html#t:DecodeState"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:CodePoint\">CodePoint</a> = <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"CodePoint","module":"Streamly.Internal.Data.Unicode.Stream","link":"Streamly-Internal-Data-Unicode-Stream.html#t:CodePoint"},{"display_html":"<a href=\"#v:decodeUtf8Either\">decodeUtf8Either</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; t m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Streamly-Internal-Data-Unicode-Stream.html#t:DecodeError\" title=\"Streamly.Internal.Data.Unicode.Stream\">DecodeError</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a>)","name":"decodeUtf8Either","module":"Streamly.Internal.Data.Unicode.Stream","link":"Streamly-Internal-Data-Unicode-Stream.html#v:decodeUtf8Either"},{"display_html":"<a href=\"#v:resumeDecodeUtf8Either\">resumeDecodeUtf8Either</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; <a href=\"Streamly-Internal-Data-Unicode-Stream.html#t:DecodeState\" title=\"Streamly.Internal.Data.Unicode.Stream\">DecodeState</a> -&gt; <a href=\"Streamly-Internal-Data-Unicode-Stream.html#t:CodePoint\" title=\"Streamly.Internal.Data.Unicode.Stream\">CodePoint</a> -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; t m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Streamly-Internal-Data-Unicode-Stream.html#t:DecodeError\" title=\"Streamly.Internal.Data.Unicode.Stream\">DecodeError</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a>)","name":"resumeDecodeUtf8Either","module":"Streamly.Internal.Data.Unicode.Stream","link":"Streamly-Internal-Data-Unicode-Stream.html#v:resumeDecodeUtf8Either"},{"display_html":"<a href=\"#v:decodeUtf8Arrays\">decodeUtf8Arrays</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; t m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>) -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a>","name":"decodeUtf8Arrays","module":"Streamly.Internal.Data.Unicode.Stream","link":"Streamly-Internal-Data-Unicode-Stream.html#v:decodeUtf8Arrays"},{"display_html":"<a href=\"#v:decodeUtf8ArraysLenient\">decodeUtf8ArraysLenient</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; t m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>) -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a>","name":"decodeUtf8ArraysLenient","module":"Streamly.Internal.Data.Unicode.Stream","link":"Streamly-Internal-Data-Unicode-Stream.html#v:decodeUtf8ArraysLenient"},{"display_html":"<a href=\"#v:encodeLatin1\">encodeLatin1</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a> -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>","name":"encodeLatin1","module":"Streamly.Internal.Data.Unicode.Stream","link":"Streamly-Internal-Data-Unicode-Stream.html#v:encodeLatin1"},{"display_html":"<a href=\"#v:encodeLatin1Lax\">encodeLatin1Lax</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a> -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>","name":"encodeLatin1Lax","module":"Streamly.Internal.Data.Unicode.Stream","link":"Streamly-Internal-Data-Unicode-Stream.html#v:encodeLatin1Lax"},{"display_html":"<a href=\"#v:encodeUtf8\">encodeUtf8</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a> -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>","name":"encodeUtf8","module":"Streamly.Internal.Data.Unicode.Stream","link":"Streamly-Internal-Data-Unicode-Stream.html#v:encodeUtf8"},{"display_html":"<a href=\"#v:stripStart\">stripStart</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a> -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a>","name":"stripStart","module":"Streamly.Internal.Data.Unicode.Stream","link":"Streamly-Internal-Data-Unicode-Stream.html#v:stripStart"},{"display_html":"<a href=\"#v:lines\">lines</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a> b -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a> -&gt; t m b","name":"lines","module":"Streamly.Internal.Data.Unicode.Stream","link":"Streamly-Internal-Data-Unicode-Stream.html#v:lines"},{"display_html":"<a href=\"#v:words\">words</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a> b -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a> -&gt; t m b","name":"words","module":"Streamly.Internal.Data.Unicode.Stream","link":"Streamly-Internal-Data-Unicode-Stream.html#v:words"},{"display_html":"<a href=\"#v:unlines\">unlines</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m a <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a> -&gt; t m a -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a>","name":"unlines","module":"Streamly.Internal.Data.Unicode.Stream","link":"Streamly-Internal-Data-Unicode-Stream.html#v:unlines"},{"display_html":"<a href=\"#v:unwords\">unwords</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m a <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a> -&gt; t m a -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a>","name":"unwords","module":"Streamly.Internal.Data.Unicode.Stream","link":"Streamly-Internal-Data-Unicode-Stream.html#v:unwords"},{"display_html":"<a href=\"#v:lines\">lines</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a> -&gt; t m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a>)","name":"lines","module":"Streamly.Internal.Memory.Unicode.Array","link":"Streamly-Internal-Memory-Unicode-Array.html#v:lines"},{"display_html":"<a href=\"#v:words\">words</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a> -&gt; t m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a>)","name":"words","module":"Streamly.Internal.Memory.Unicode.Array","link":"Streamly-Internal-Memory-Unicode-Array.html#v:words"},{"display_html":"<a href=\"#v:unlines\">unlines</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; t m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a>) -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a>","name":"unlines","module":"Streamly.Internal.Memory.Unicode.Array","link":"Streamly-Internal-Memory-Unicode-Array.html#v:unlines"},{"display_html":"<a href=\"#v:unwords\">unwords</a> :: (<a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; t m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a>) -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a>","name":"unwords","module":"Streamly.Internal.Memory.Unicode.Array","link":"Streamly-Internal-Memory-Unicode-Array.html#v:unwords"},{"display_html":"<a href=\"#v:read\">read</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>","name":"read","module":"Streamly.Internal.FileSystem.Handle","link":"Streamly-Internal-FileSystem-Handle.html#v:read"},{"display_html":"<a href=\"#v:readWithBufferOf\">readWithBufferOf</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a>) <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>","name":"readWithBufferOf","module":"Streamly.Internal.FileSystem.Handle","link":"Streamly-Internal-FileSystem-Handle.html#v:readWithBufferOf"},{"display_html":"<a href=\"#v:toBytes\">toBytes</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a> -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>","name":"toBytes","module":"Streamly.Internal.FileSystem.Handle","link":"Streamly-Internal-FileSystem-Handle.html#v:toBytes"},{"display_html":"<a href=\"#v:toBytesWithBufferOf\">toBytesWithBufferOf</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a> -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>","name":"toBytesWithBufferOf","module":"Streamly.Internal.FileSystem.Handle","link":"Streamly-Internal-FileSystem-Handle.html#v:toBytesWithBufferOf"},{"display_html":"<a href=\"#v:getBytes\">getBytes</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>","name":"getBytes","module":"Streamly.Internal.FileSystem.Handle","link":"Streamly-Internal-FileSystem-Handle.html#v:getBytes"},{"display_html":"<a href=\"#v:readChunks\">readChunks</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a> (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>)","name":"readChunks","module":"Streamly.Internal.FileSystem.Handle","link":"Streamly-Internal-FileSystem-Handle.html#v:readChunks"},{"display_html":"<a href=\"#v:readChunksWithBufferOf\">readChunksWithBufferOf</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a>) (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>)","name":"readChunksWithBufferOf","module":"Streamly.Internal.FileSystem.Handle","link":"Streamly-Internal-FileSystem-Handle.html#v:readChunksWithBufferOf"},{"display_html":"<a href=\"#v:toChunksWithBufferOf\">toChunksWithBufferOf</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a> -&gt; t m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>)","name":"toChunksWithBufferOf","module":"Streamly.Internal.FileSystem.Handle","link":"Streamly-Internal-FileSystem-Handle.html#v:toChunksWithBufferOf"},{"display_html":"<a href=\"#v:toChunks\">toChunks</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a> -&gt; t m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>)","name":"toChunks","module":"Streamly.Internal.FileSystem.Handle","link":"Streamly-Internal-FileSystem-Handle.html#v:toChunks"},{"display_html":"<a href=\"#v:getChunks\">getChunks</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; t m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>)","name":"getChunks","module":"Streamly.Internal.FileSystem.Handle","link":"Streamly-Internal-FileSystem-Handle.html#v:getChunks"},{"display_html":"<a href=\"#v:write\">write</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> ()","name":"write","module":"Streamly.Internal.FileSystem.Handle","link":"Streamly-Internal-FileSystem-Handle.html#v:write"},{"display_html":"<a href=\"#v:write2\">write2</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold2\" title=\"Streamly.Internal.Data.Fold.Types\">Fold2</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> ()","name":"write2","module":"Streamly.Internal.FileSystem.Handle","link":"Streamly-Internal-FileSystem-Handle.html#v:write2"},{"display_html":"<a href=\"#v:writeWithBufferOf\">writeWithBufferOf</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> ()","name":"writeWithBufferOf","module":"Streamly.Internal.FileSystem.Handle","link":"Streamly-Internal-FileSystem-Handle.html#v:writeWithBufferOf"},{"display_html":"<a href=\"#v:fromBytes\">fromBytes</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a> -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; m ()","name":"fromBytes","module":"Streamly.Internal.FileSystem.Handle","link":"Streamly-Internal-FileSystem-Handle.html#v:fromBytes"},{"display_html":"<a href=\"#v:fromBytesWithBufferOf\">fromBytesWithBufferOf</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a> -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; m ()","name":"fromBytesWithBufferOf","module":"Streamly.Internal.FileSystem.Handle","link":"Streamly-Internal-FileSystem-Handle.html#v:fromBytesWithBufferOf"},{"display_html":"<a href=\"#v:writeArray\">writeArray</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a> -&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"writeArray","module":"Streamly.Internal.FileSystem.Handle","link":"Streamly-Internal-FileSystem-Handle.html#v:writeArray"},{"display_html":"<a href=\"#v:writeChunks\">writeChunks</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a) ()","name":"writeChunks","module":"Streamly.Internal.FileSystem.Handle","link":"Streamly-Internal-FileSystem-Handle.html#v:writeChunks"},{"display_html":"<a href=\"#v:writeChunksWithBufferOf\">writeChunksWithBufferOf</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a) ()","name":"writeChunksWithBufferOf","module":"Streamly.Internal.FileSystem.Handle","link":"Streamly-Internal-FileSystem-Handle.html#v:writeChunksWithBufferOf"},{"display_html":"<a href=\"#v:fromChunksWithBufferOf\">fromChunksWithBufferOf</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a> -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a) -&gt; m ()","name":"fromChunksWithBufferOf","module":"Streamly.Internal.FileSystem.Handle","link":"Streamly-Internal-FileSystem-Handle.html#v:fromChunksWithBufferOf"},{"display_html":"<a href=\"#v:fromChunks\">fromChunks</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a> -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a) -&gt; m ()","name":"fromChunks","module":"Streamly.Internal.FileSystem.Handle","link":"Streamly-Internal-FileSystem-Handle.html#v:fromChunks"},{"display_html":"<a href=\"#v:putChunks\">putChunks</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a) -&gt; m ()","name":"putChunks","module":"Streamly.Internal.FileSystem.Handle","link":"Streamly-Internal-FileSystem-Handle.html#v:putChunks"},{"display_html":"<a href=\"#v:putStrings\">putStrings</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m =&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; m ()","name":"putStrings","module":"Streamly.Internal.FileSystem.Handle","link":"Streamly-Internal-FileSystem-Handle.html#v:putStrings"},{"display_html":"<a href=\"#v:withFile\">withFile</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, MonadCatch m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IOMode\" title=\"System.IO\">IOMode</a> -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a> -&gt; t m a) -&gt; t m a","name":"withFile","module":"Streamly.Internal.FileSystem.File","link":"Streamly-Internal-FileSystem-File.html#v:withFile"},{"display_html":"<a href=\"#v:read\">read</a> :: (MonadCatch m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>","name":"read","module":"Streamly.Internal.FileSystem.File","link":"Streamly-Internal-FileSystem-File.html#v:read"},{"display_html":"<a href=\"#v:toBytes\">toBytes</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, MonadCatch m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>","name":"toBytes","module":"Streamly.Internal.FileSystem.File","link":"Streamly-Internal-FileSystem-File.html#v:toBytes"},{"display_html":"<a href=\"#v:toChunksWithBufferOf\">toChunksWithBufferOf</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, MonadCatch m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> -&gt; t m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>)","name":"toChunksWithBufferOf","module":"Streamly.Internal.FileSystem.File","link":"Streamly-Internal-FileSystem-File.html#v:toChunksWithBufferOf"},{"display_html":"<a href=\"#v:toChunks\">toChunks</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, MonadCatch m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> -&gt; t m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>)","name":"toChunks","module":"Streamly.Internal.FileSystem.File","link":"Streamly-Internal-FileSystem-File.html#v:toChunks"},{"display_html":"<a href=\"#v:write\">write</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, MonadCatch m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> ()","name":"write","module":"Streamly.Internal.FileSystem.File","link":"Streamly-Internal-FileSystem-File.html#v:write"},{"display_html":"<a href=\"#v:writeWithBufferOf\">writeWithBufferOf</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, MonadCatch m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> ()","name":"writeWithBufferOf","module":"Streamly.Internal.FileSystem.File","link":"Streamly-Internal-FileSystem-File.html#v:writeWithBufferOf"},{"display_html":"<a href=\"#v:fromBytes\">fromBytes</a> :: (<a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m, MonadCatch m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; m ()","name":"fromBytes","module":"Streamly.Internal.FileSystem.File","link":"Streamly-Internal-FileSystem-File.html#v:fromBytes"},{"display_html":"<a href=\"#v:fromBytesWithBufferOf\">fromBytesWithBufferOf</a> :: (<a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m, MonadCatch m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; m ()","name":"fromBytesWithBufferOf","module":"Streamly.Internal.FileSystem.File","link":"Streamly-Internal-FileSystem-File.html#v:fromBytesWithBufferOf"},{"display_html":"<a href=\"#v:writeArray\">writeArray</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> -&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"writeArray","module":"Streamly.Internal.FileSystem.File","link":"Streamly-Internal-FileSystem-File.html#v:writeArray"},{"display_html":"<a href=\"#v:writeChunks\">writeChunks</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, MonadCatch m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a) ()","name":"writeChunks","module":"Streamly.Internal.FileSystem.File","link":"Streamly-Internal-FileSystem-File.html#v:writeChunks"},{"display_html":"<a href=\"#v:fromChunks\">fromChunks</a> :: (<a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m, MonadCatch m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a) -&gt; m ()","name":"fromChunks","module":"Streamly.Internal.FileSystem.File","link":"Streamly-Internal-FileSystem-File.html#v:fromChunks"},{"display_html":"<a href=\"#v:append\">append</a> :: (<a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m, MonadCatch m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; m ()","name":"append","module":"Streamly.Internal.FileSystem.File","link":"Streamly-Internal-FileSystem-File.html#v:append"},{"display_html":"<a href=\"#v:appendWithBufferOf\">appendWithBufferOf</a> :: (<a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m, MonadCatch m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; m ()","name":"appendWithBufferOf","module":"Streamly.Internal.FileSystem.File","link":"Streamly-Internal-FileSystem-File.html#v:appendWithBufferOf"},{"display_html":"<a href=\"#v:appendArray\">appendArray</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> -&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"appendArray","module":"Streamly.Internal.FileSystem.File","link":"Streamly-Internal-FileSystem-File.html#v:appendArray"},{"display_html":"<a href=\"#v:appendChunks\">appendChunks</a> :: (<a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m, MonadCatch m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a) -&gt; m ()","name":"appendChunks","module":"Streamly.Internal.FileSystem.File","link":"Streamly-Internal-FileSystem-File.html#v:appendChunks"},{"display_html":"<a href=\"#v:read\">read</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>","name":"read","module":"Streamly.FileSystem.Handle","link":"Streamly-FileSystem-Handle.html#v:read"},{"display_html":"<a href=\"#v:readWithBufferOf\">readWithBufferOf</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a>) <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>","name":"readWithBufferOf","module":"Streamly.FileSystem.Handle","link":"Streamly-FileSystem-Handle.html#v:readWithBufferOf"},{"display_html":"<a href=\"#v:readChunks\">readChunks</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a> (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>)","name":"readChunks","module":"Streamly.FileSystem.Handle","link":"Streamly-FileSystem-Handle.html#v:readChunks"},{"display_html":"<a href=\"#v:readChunksWithBufferOf\">readChunksWithBufferOf</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a>) (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>)","name":"readChunksWithBufferOf","module":"Streamly.FileSystem.Handle","link":"Streamly-FileSystem-Handle.html#v:readChunksWithBufferOf"},{"display_html":"<a href=\"#v:write\">write</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> ()","name":"write","module":"Streamly.FileSystem.Handle","link":"Streamly-FileSystem-Handle.html#v:write"},{"display_html":"<a href=\"#v:writeWithBufferOf\">writeWithBufferOf</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> ()","name":"writeWithBufferOf","module":"Streamly.FileSystem.Handle","link":"Streamly-FileSystem-Handle.html#v:writeWithBufferOf"},{"display_html":"<a href=\"#v:writeChunks\">writeChunks</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-IO-Handle.html#t:Handle\" title=\"GHC.IO.Handle\">Handle</a> -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a) ()","name":"writeChunks","module":"Streamly.FileSystem.Handle","link":"Streamly-FileSystem-Handle.html#v:writeChunks"},{"display_html":"<a href=\"#v:decodeLatin1\">decodeLatin1</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a>","name":"decodeLatin1","module":"Streamly.Data.Unicode.Stream","link":"Streamly-Data-Unicode-Stream.html#v:decodeLatin1"},{"display_html":"<a href=\"#v:decodeUtf8\">decodeUtf8</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a>","name":"decodeUtf8","module":"Streamly.Data.Unicode.Stream","link":"Streamly-Data-Unicode-Stream.html#v:decodeUtf8"},{"display_html":"<a href=\"#v:decodeUtf8Lax\">decodeUtf8Lax</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a>","name":"decodeUtf8Lax","module":"Streamly.Data.Unicode.Stream","link":"Streamly-Data-Unicode-Stream.html#v:decodeUtf8Lax"},{"display_html":"<a href=\"#v:encodeLatin1\">encodeLatin1</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a> -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>","name":"encodeLatin1","module":"Streamly.Data.Unicode.Stream","link":"Streamly-Data-Unicode-Stream.html#v:encodeLatin1"},{"display_html":"<a href=\"#v:encodeLatin1Lax\">encodeLatin1Lax</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a> -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>","name":"encodeLatin1Lax","module":"Streamly.Data.Unicode.Stream","link":"Streamly-Data-Unicode-Stream.html#v:encodeLatin1Lax"},{"display_html":"<a href=\"#v:encodeUtf8\">encodeUtf8</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t) =&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a> -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>","name":"encodeUtf8","module":"Streamly.Data.Unicode.Stream","link":"Streamly-Data-Unicode-Stream.html#v:encodeUtf8"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SockSpec\">SockSpec</a> = <a href=\"#v:SockSpec\">SockSpec</a> {<ul class=\"subs\"><li><a href=\"#v:sockFamily\">sockFamily</a> :: !Family</li><li><a href=\"#v:sockType\">sockType</a> :: !SocketType</li><li><a href=\"#v:sockProto\">sockProto</a> :: !ProtocolNumber</li><li><a href=\"#v:sockOpts\">sockOpts</a> :: ![(SocketOption, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>)]</li></ul>}","name":"SockSpec SockSpec sockFamily sockType sockProto sockOpts","module":"Streamly.Internal.Network.Socket","link":"Streamly-Internal-Network-Socket.html#t:SockSpec"},{"display_html":"<a href=\"#v:useSocketM\">useSocketM</a> :: (MonadMask m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; Socket -&gt; (Socket -&gt; m ()) -&gt; m ()","name":"useSocketM","module":"Streamly.Internal.Network.Socket","link":"Streamly-Internal-Network-Socket.html#v:useSocketM"},{"display_html":"<a href=\"#v:useSocket\">useSocket</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, MonadCatch m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; Socket -&gt; (Socket -&gt; t m a) -&gt; t m a","name":"useSocket","module":"Streamly.Internal.Network.Socket","link":"Streamly-Internal-Network-Socket.html#v:useSocket"},{"display_html":"<a href=\"#v:accept\">accept</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>, <a href=\"Streamly-Internal-Network-Socket.html#t:SockSpec\" title=\"Streamly.Internal.Network.Socket\">SockSpec</a>, SockAddr) Socket","name":"accept","module":"Streamly.Internal.Network.Socket","link":"Streamly-Internal-Network-Socket.html#v:accept"},{"display_html":"<a href=\"#v:connections\">connections</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Streamly-Internal-Network-Socket.html#t:SockSpec\" title=\"Streamly.Internal.Network.Socket\">SockSpec</a> -&gt; SockAddr -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m Socket","name":"connections","module":"Streamly.Internal.Network.Socket","link":"Streamly-Internal-Network-Socket.html#v:connections"},{"display_html":"<a href=\"#v:read\">read</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m Socket <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>","name":"read","module":"Streamly.Internal.Network.Socket","link":"Streamly-Internal-Network-Socket.html#v:read"},{"display_html":"<a href=\"#v:readWithBufferOf\">readWithBufferOf</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>, Socket) <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>","name":"readWithBufferOf","module":"Streamly.Internal.Network.Socket","link":"Streamly-Internal-Network-Socket.html#v:readWithBufferOf"},{"display_html":"<a href=\"#v:readChunksWithBufferOf\">readChunksWithBufferOf</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>, Socket) (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>)","name":"readChunksWithBufferOf","module":"Streamly.Internal.Network.Socket","link":"Streamly-Internal-Network-Socket.html#v:readChunksWithBufferOf"},{"display_html":"<a href=\"#v:readChunks\">readChunks</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m Socket (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>)","name":"readChunks","module":"Streamly.Internal.Network.Socket","link":"Streamly-Internal-Network-Socket.html#v:readChunks"},{"display_html":"<a href=\"#v:toChunksWithBufferOf\">toChunksWithBufferOf</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; Socket -&gt; t m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>)","name":"toChunksWithBufferOf","module":"Streamly.Internal.Network.Socket","link":"Streamly-Internal-Network-Socket.html#v:toChunksWithBufferOf"},{"display_html":"<a href=\"#v:toChunks\">toChunks</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; Socket -&gt; t m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>)","name":"toChunks","module":"Streamly.Internal.Network.Socket","link":"Streamly-Internal-Network-Socket.html#v:toChunks"},{"display_html":"<a href=\"#v:toBytes\">toBytes</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; Socket -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>","name":"toBytes","module":"Streamly.Internal.Network.Socket","link":"Streamly-Internal-Network-Socket.html#v:toBytes"},{"display_html":"<a href=\"#v:write\">write</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; Socket -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> ()","name":"write","module":"Streamly.Internal.Network.Socket","link":"Streamly-Internal-Network-Socket.html#v:write"},{"display_html":"<a href=\"#v:writeWithBufferOf\">writeWithBufferOf</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; Socket -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> ()","name":"writeWithBufferOf","module":"Streamly.Internal.Network.Socket","link":"Streamly-Internal-Network-Socket.html#v:writeWithBufferOf"},{"display_html":"<a href=\"#v:fromChunks\">fromChunks</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; Socket -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a) -&gt; m ()","name":"fromChunks","module":"Streamly.Internal.Network.Socket","link":"Streamly-Internal-Network-Socket.html#v:fromChunks"},{"display_html":"<a href=\"#v:fromBytesWithBufferOf\">fromBytesWithBufferOf</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; Socket -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; m ()","name":"fromBytesWithBufferOf","module":"Streamly.Internal.Network.Socket","link":"Streamly-Internal-Network-Socket.html#v:fromBytesWithBufferOf"},{"display_html":"<a href=\"#v:fromBytes\">fromBytes</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; Socket -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; m ()","name":"fromBytes","module":"Streamly.Internal.Network.Socket","link":"Streamly-Internal-Network-Socket.html#v:fromBytes"},{"display_html":"<a href=\"#v:writeArray\">writeArray</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a =&gt; Socket -&gt; <a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"writeArray","module":"Streamly.Internal.Network.Socket","link":"Streamly-Internal-Network-Socket.html#v:writeArray"},{"display_html":"<a href=\"#v:writeChunks\">writeChunks</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; Socket -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a) ()","name":"writeChunks","module":"Streamly.Internal.Network.Socket","link":"Streamly-Internal-Network-Socket.html#v:writeChunks"},{"display_html":"<a href=\"#v:writeStrings\">writeStrings</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; Socket -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> ()","name":"writeStrings","module":"Streamly.Internal.Network.Socket","link":"Streamly-Internal-Network-Socket.html#v:writeStrings"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SockSpec\">SockSpec</a> = <a href=\"#v:SockSpec\">SockSpec</a> {<ul class=\"subs\"><li><a href=\"#v:sockFamily\">sockFamily</a> :: !Family</li><li><a href=\"#v:sockType\">sockType</a> :: !SocketType</li><li><a href=\"#v:sockProto\">sockProto</a> :: !ProtocolNumber</li><li><a href=\"#v:sockOpts\">sockOpts</a> :: ![(SocketOption, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>)]</li></ul>}","name":"SockSpec SockSpec sockFamily sockType sockProto sockOpts","module":"Streamly.Network.Socket","link":"Streamly-Network-Socket.html#t:SockSpec"},{"display_html":"<a href=\"#v:accept\">accept</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>, <a href=\"Streamly-Network-Socket.html#t:SockSpec\" title=\"Streamly.Network.Socket\">SockSpec</a>, SockAddr) Socket","name":"accept","module":"Streamly.Network.Socket","link":"Streamly-Network-Socket.html#v:accept"},{"display_html":"<a href=\"#v:read\">read</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m Socket <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>","name":"read","module":"Streamly.Network.Socket","link":"Streamly-Network-Socket.html#v:read"},{"display_html":"<a href=\"#v:readWithBufferOf\">readWithBufferOf</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>, Socket) <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>","name":"readWithBufferOf","module":"Streamly.Network.Socket","link":"Streamly-Network-Socket.html#v:readWithBufferOf"},{"display_html":"<a href=\"#v:readChunks\">readChunks</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m Socket (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>)","name":"readChunks","module":"Streamly.Network.Socket","link":"Streamly-Network-Socket.html#v:readChunks"},{"display_html":"<a href=\"#v:readChunksWithBufferOf\">readChunksWithBufferOf</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>, Socket) (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>)","name":"readChunksWithBufferOf","module":"Streamly.Network.Socket","link":"Streamly-Network-Socket.html#v:readChunksWithBufferOf"},{"display_html":"<a href=\"#v:write\">write</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; Socket -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> ()","name":"write","module":"Streamly.Network.Socket","link":"Streamly-Network-Socket.html#v:write"},{"display_html":"<a href=\"#v:writeWithBufferOf\">writeWithBufferOf</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; Socket -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> ()","name":"writeWithBufferOf","module":"Streamly.Network.Socket","link":"Streamly-Network-Socket.html#v:writeWithBufferOf"},{"display_html":"<a href=\"#v:writeChunks\">writeChunks</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-Storable.html#t:Storable\" title=\"Foreign.Storable\">Storable</a> a) =&gt; Socket -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> a) ()","name":"writeChunks","module":"Streamly.Network.Socket","link":"Streamly-Network-Socket.html#v:writeChunks"},{"display_html":"<a href=\"#v:acceptOnAddr\">acceptOnAddr</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m ((<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>), PortNumber) Socket","name":"acceptOnAddr","module":"Streamly.Internal.Network.Inet.TCP","link":"Streamly-Internal-Network-Inet-TCP.html#v:acceptOnAddr"},{"display_html":"<a href=\"#v:acceptOnPort\">acceptOnPort</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m PortNumber Socket","name":"acceptOnPort","module":"Streamly.Internal.Network.Inet.TCP","link":"Streamly-Internal-Network-Inet-TCP.html#v:acceptOnPort"},{"display_html":"<a href=\"#v:acceptOnPortLocal\">acceptOnPortLocal</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m PortNumber Socket","name":"acceptOnPortLocal","module":"Streamly.Internal.Network.Inet.TCP","link":"Streamly-Internal-Network-Inet-TCP.html#v:acceptOnPortLocal"},{"display_html":"<a href=\"#v:connectionsOnAddr\">connectionsOnAddr</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m =&gt; (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>) -&gt; PortNumber -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m Socket","name":"connectionsOnAddr","module":"Streamly.Internal.Network.Inet.TCP","link":"Streamly-Internal-Network-Inet-TCP.html#v:connectionsOnAddr"},{"display_html":"<a href=\"#v:connectionsOnPort\">connectionsOnPort</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m =&gt; PortNumber -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m Socket","name":"connectionsOnPort","module":"Streamly.Internal.Network.Inet.TCP","link":"Streamly-Internal-Network-Inet-TCP.html#v:connectionsOnPort"},{"display_html":"<a href=\"#v:connectionsOnLocalHost\">connectionsOnLocalHost</a> :: <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m =&gt; PortNumber -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m Socket","name":"connectionsOnLocalHost","module":"Streamly.Internal.Network.Inet.TCP","link":"Streamly-Internal-Network-Inet-TCP.html#v:connectionsOnLocalHost"},{"display_html":"<a href=\"#v:connect\">connect</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>) -&gt; PortNumber -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> Socket","name":"connect","module":"Streamly.Internal.Network.Inet.TCP","link":"Streamly-Internal-Network-Inet-TCP.html#v:connect"},{"display_html":"<a href=\"#v:withConnectionM\">withConnectionM</a> :: (MonadMask m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>) -&gt; PortNumber -&gt; (Socket -&gt; m ()) -&gt; m ()","name":"withConnectionM","module":"Streamly.Internal.Network.Inet.TCP","link":"Streamly-Internal-Network-Inet-TCP.html#v:withConnectionM"},{"display_html":"<a href=\"#v:usingConnection\">usingConnection</a> :: (MonadCatch m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m Socket a -&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m ((<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>), PortNumber) a","name":"usingConnection","module":"Streamly.Internal.Network.Inet.TCP","link":"Streamly-Internal-Network-Inet-TCP.html#v:usingConnection"},{"display_html":"<a href=\"#v:read\">read</a> :: (MonadCatch m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m ((<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>), PortNumber) <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>","name":"read","module":"Streamly.Internal.Network.Inet.TCP","link":"Streamly-Internal-Network-Inet-TCP.html#v:read"},{"display_html":"<a href=\"#v:withConnection\">withConnection</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, MonadCatch m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>) -&gt; PortNumber -&gt; (Socket -&gt; t m a) -&gt; t m a","name":"withConnection","module":"Streamly.Internal.Network.Inet.TCP","link":"Streamly-Internal-Network-Inet-TCP.html#v:withConnection"},{"display_html":"<a href=\"#v:toBytes\">toBytes</a> :: (<a href=\"Streamly.html#t:IsStream\" title=\"Streamly\">IsStream</a> t, MonadCatch m, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m) =&gt; (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>) -&gt; PortNumber -&gt; t m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>","name":"toBytes","module":"Streamly.Internal.Network.Inet.TCP","link":"Streamly-Internal-Network-Inet-TCP.html#v:toBytes"},{"display_html":"<a href=\"#v:write\">write</a> :: (<a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m, MonadCatch m) =&gt; (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>) -&gt; PortNumber -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> ()","name":"write","module":"Streamly.Internal.Network.Inet.TCP","link":"Streamly-Internal-Network-Inet-TCP.html#v:write"},{"display_html":"<a href=\"#v:writeWithBufferOf\">writeWithBufferOf</a> :: (<a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m, MonadCatch m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>) -&gt; PortNumber -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> ()","name":"writeWithBufferOf","module":"Streamly.Internal.Network.Inet.TCP","link":"Streamly-Internal-Network-Inet-TCP.html#v:writeWithBufferOf"},{"display_html":"<a href=\"#v:fromBytes\">fromBytes</a> :: (MonadCatch m, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>) -&gt; PortNumber -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; m ()","name":"fromBytes","module":"Streamly.Internal.Network.Inet.TCP","link":"Streamly-Internal-Network-Inet-TCP.html#v:fromBytes"},{"display_html":"<a href=\"#v:fromBytesWithBufferOf\">fromBytesWithBufferOf</a> :: (MonadCatch m, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>) -&gt; PortNumber -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; m ()","name":"fromBytesWithBufferOf","module":"Streamly.Internal.Network.Inet.TCP","link":"Streamly-Internal-Network-Inet-TCP.html#v:fromBytesWithBufferOf"},{"display_html":"<a href=\"#v:writeChunks\">writeChunks</a> :: (<a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m, MonadCatch m) =&gt; (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>) -&gt; PortNumber -&gt; <a href=\"Streamly-Internal-Data-Fold-Types.html#t:Fold\" title=\"Streamly.Internal.Data.Fold.Types\">Fold</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>) ()","name":"writeChunks","module":"Streamly.Internal.Network.Inet.TCP","link":"Streamly-Internal-Network-Inet-TCP.html#v:writeChunks"},{"display_html":"<a href=\"#v:fromChunks\">fromChunks</a> :: (MonadCatch m, <a href=\"Streamly-Internal-Data-SVar.html#t:MonadAsync\" title=\"Streamly.Internal.Data.SVar\">MonadAsync</a> m) =&gt; (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>) -&gt; PortNumber -&gt; <a href=\"Streamly.html#t:SerialT\" title=\"Streamly\">SerialT</a> m (<a href=\"Streamly-Internal-Memory-Array-Types.html#t:Array\" title=\"Streamly.Internal.Memory.Array.Types\">Array</a> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>) -&gt; m ()","name":"fromChunks","module":"Streamly.Internal.Network.Inet.TCP","link":"Streamly-Internal-Network-Inet-TCP.html#v:fromChunks"},{"display_html":"<a href=\"#v:acceptOnAddr\">acceptOnAddr</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m ((<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>), PortNumber) Socket","name":"acceptOnAddr","module":"Streamly.Network.Inet.TCP","link":"Streamly-Network-Inet-TCP.html#v:acceptOnAddr"},{"display_html":"<a href=\"#v:acceptOnPort\">acceptOnPort</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m PortNumber Socket","name":"acceptOnPort","module":"Streamly.Network.Inet.TCP","link":"Streamly-Network-Inet-TCP.html#v:acceptOnPort"},{"display_html":"<a href=\"#v:acceptOnPortLocal\">acceptOnPortLocal</a> :: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"Streamly-Internal-Data-Unfold-Types.html#t:Unfold\" title=\"Streamly.Internal.Data.Unfold.Types\">Unfold</a> m PortNumber Socket","name":"acceptOnPortLocal","module":"Streamly.Network.Inet.TCP","link":"Streamly-Network-Inet-TCP.html#v:acceptOnPortLocal"},{"display_html":"<a href=\"#v:connect\">connect</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a>) -&gt; PortNumber -&gt; <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> Socket","name":"connect","module":"Streamly.Network.Inet.TCP","link":"Streamly-Network-Inet-TCP.html#v:connect"}]